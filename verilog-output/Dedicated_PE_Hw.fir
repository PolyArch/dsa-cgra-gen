;buildInfoPackage: chisel3, version: 3.1.6, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-12-21 23:42:51.273, builtAtMillis: 1545435771273
circuit Dedicated_PE_Hw : 
  module Delay_Pipe_Hw : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<3>, 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg head : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_29 : UInt<32>[6] @[Delay_Pipe.scala 50:29]
    _T_29[0] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[1] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[2] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[3] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[4] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[5] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<32>[6], clock with : (reset => (reset, _T_29)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_83 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_84 = tail(_T_83, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_84 @[Delay_Pipe.scala 55:8]
    node _T_86 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_87 = tail(_T_86, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_87 @[Delay_Pipe.scala 56:8]
    node _T_88 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_88 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[3] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[4] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[5] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<32>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<32>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<32>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<32>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Arithmetic_Logic_Unit_Hw : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<5>, flip 3 : UInt<32>, 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire op : UInt<5> @[Arithmetic_Logic_Unit.scala 52:21]
    op <= io.4 @[Arithmetic_Logic_Unit.scala 53:6]
    wire operand0_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 56:29]
    wire operand1_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 57:29]
    wire operand2_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 58:29]
    wire operand0_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 60:31]
    wire operand1_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 61:31]
    wire operand2_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 62:31]
    wire result_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 64:27]
    wire result_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 65:29]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 66:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 66:40]
    operand0_unsigned <= io.0 @[Arithmetic_Logic_Unit.scala 69:21]
    operand1_unsigned <= io.1 @[Arithmetic_Logic_Unit.scala 70:21]
    operand2_unsigned <= io.3 @[Arithmetic_Logic_Unit.scala 71:55]
    node _T_31 = asSInt(io.0) @[Arithmetic_Logic_Unit.scala 72:58]
    operand0_signed <= _T_31 @[Arithmetic_Logic_Unit.scala 72:19]
    node _T_32 = asSInt(io.1) @[Arithmetic_Logic_Unit.scala 73:56]
    operand1_signed <= _T_32 @[Arithmetic_Logic_Unit.scala 73:19]
    node _T_33 = asSInt(io.3) @[Arithmetic_Logic_Unit.scala 74:84]
    operand2_signed <= _T_33 @[Arithmetic_Logic_Unit.scala 74:53]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 77:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 78:19]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 91:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 92:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 93:58]
    node _T_40 = eq(op, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 95:49]
    when _T_40 : @[Arithmetic_Logic_Unit.scala 95:65]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 95:82]
      skip @[Arithmetic_Logic_Unit.scala 95:65]
    node _T_43 = eq(op, UInt<1>("h01")) @[Arithmetic_Logic_Unit.scala 96:49]
    when _T_43 : @[Arithmetic_Logic_Unit.scala 96:65]
      result_unsigned <= operand0_unsigned @[Arithmetic_Logic_Unit.scala 96:82]
      skip @[Arithmetic_Logic_Unit.scala 96:65]
    node _T_45 = eq(op, UInt<2>("h02")) @[Arithmetic_Logic_Unit.scala 97:49]
    when _T_45 : @[Arithmetic_Logic_Unit.scala 97:65]
      node _T_46 = add(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 97:103]
      node _T_47 = tail(_T_46, 1) @[Arithmetic_Logic_Unit.scala 97:103]
      result_unsigned <= _T_47 @[Arithmetic_Logic_Unit.scala 97:82]
      skip @[Arithmetic_Logic_Unit.scala 97:65]
    node _T_49 = eq(op, UInt<2>("h03")) @[Arithmetic_Logic_Unit.scala 98:49]
    when _T_49 : @[Arithmetic_Logic_Unit.scala 98:65]
      node _T_50 = sub(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_51 = asUInt(_T_50) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_52 = tail(_T_51, 1) @[Arithmetic_Logic_Unit.scala 98:103]
      result_unsigned <= _T_52 @[Arithmetic_Logic_Unit.scala 98:82]
      skip @[Arithmetic_Logic_Unit.scala 98:65]
    node _T_54 = eq(op, UInt<3>("h04")) @[Arithmetic_Logic_Unit.scala 99:49]
    when _T_54 : @[Arithmetic_Logic_Unit.scala 99:65]
      node _T_55 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 99:123]
      node _T_56 = dshl(operand0_unsigned, _T_55) @[Arithmetic_Logic_Unit.scala 99:103]
      result_unsigned <= _T_56 @[Arithmetic_Logic_Unit.scala 99:82]
      skip @[Arithmetic_Logic_Unit.scala 99:65]
    node _T_58 = eq(op, UInt<3>("h06")) @[Arithmetic_Logic_Unit.scala 100:49]
    when _T_58 : @[Arithmetic_Logic_Unit.scala 100:65]
      node _T_59 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 100:103]
      result_unsigned <= _T_59 @[Arithmetic_Logic_Unit.scala 100:82]
      skip @[Arithmetic_Logic_Unit.scala 100:65]
    node _T_61 = eq(op, UInt<3>("h07")) @[Arithmetic_Logic_Unit.scala 101:48]
    when _T_61 : @[Arithmetic_Logic_Unit.scala 101:63]
      node _T_62 = eq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 101:101]
      result_unsigned <= _T_62 @[Arithmetic_Logic_Unit.scala 101:80]
      skip @[Arithmetic_Logic_Unit.scala 101:63]
    node _T_64 = eq(op, UInt<4>("h08")) @[Arithmetic_Logic_Unit.scala 102:48]
    when _T_64 : @[Arithmetic_Logic_Unit.scala 102:63]
      node _T_65 = neq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 102:101]
      result_unsigned <= _T_65 @[Arithmetic_Logic_Unit.scala 102:80]
      skip @[Arithmetic_Logic_Unit.scala 102:63]
    node _T_67 = eq(op, UInt<4>("h0a")) @[Arithmetic_Logic_Unit.scala 103:49]
    when _T_67 : @[Arithmetic_Logic_Unit.scala 103:65]
      node _T_68 = gt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 103:103]
      result_unsigned <= _T_68 @[Arithmetic_Logic_Unit.scala 103:82]
      skip @[Arithmetic_Logic_Unit.scala 103:65]
    node _T_70 = eq(op, UInt<4>("h0c")) @[Arithmetic_Logic_Unit.scala 104:49]
    when _T_70 : @[Arithmetic_Logic_Unit.scala 104:66]
      node _T_71 = lt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 104:104]
      result_unsigned <= _T_71 @[Arithmetic_Logic_Unit.scala 104:83]
      skip @[Arithmetic_Logic_Unit.scala 104:66]
    node _T_73 = eq(op, UInt<4>("h0e")) @[Arithmetic_Logic_Unit.scala 105:49]
    when _T_73 : @[Arithmetic_Logic_Unit.scala 105:65]
      node _T_74 = geq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 105:103]
      result_unsigned <= _T_74 @[Arithmetic_Logic_Unit.scala 105:82]
      skip @[Arithmetic_Logic_Unit.scala 105:65]
    node _T_76 = eq(op, UInt<5>("h010")) @[Arithmetic_Logic_Unit.scala 106:49]
    when _T_76 : @[Arithmetic_Logic_Unit.scala 106:65]
      node _T_77 = leq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 106:103]
      result_unsigned <= _T_77 @[Arithmetic_Logic_Unit.scala 106:82]
      skip @[Arithmetic_Logic_Unit.scala 106:65]
    node _T_79 = eq(op, UInt<5>("h011")) @[Arithmetic_Logic_Unit.scala 107:50]
    when _T_79 : @[Arithmetic_Logic_Unit.scala 107:67]
      node _T_80 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 107:105]
      result_unsigned <= _T_80 @[Arithmetic_Logic_Unit.scala 107:84]
      skip @[Arithmetic_Logic_Unit.scala 107:67]
    node _T_82 = eq(op, UInt<5>("h012")) @[Arithmetic_Logic_Unit.scala 108:51]
    when _T_82 : @[Arithmetic_Logic_Unit.scala 108:69]
      node _T_83 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 108:109]
      node _T_84 = not(_T_83) @[Arithmetic_Logic_Unit.scala 108:89]
      result_unsigned <= _T_84 @[Arithmetic_Logic_Unit.scala 108:86]
      skip @[Arithmetic_Logic_Unit.scala 108:69]
    node _T_86 = eq(op, UInt<5>("h013")) @[Arithmetic_Logic_Unit.scala 109:49]
    when _T_86 : @[Arithmetic_Logic_Unit.scala 109:65]
      node _T_87 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 109:103]
      result_unsigned <= _T_87 @[Arithmetic_Logic_Unit.scala 109:82]
      skip @[Arithmetic_Logic_Unit.scala 109:65]
    node _T_89 = eq(op, UInt<5>("h014")) @[Arithmetic_Logic_Unit.scala 110:50]
    when _T_89 : @[Arithmetic_Logic_Unit.scala 110:67]
      node _T_90 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 110:107]
      node _T_91 = not(_T_90) @[Arithmetic_Logic_Unit.scala 110:87]
      result_unsigned <= _T_91 @[Arithmetic_Logic_Unit.scala 110:84]
      skip @[Arithmetic_Logic_Unit.scala 110:67]
    node _T_93 = eq(op, UInt<5>("h015")) @[Arithmetic_Logic_Unit.scala 111:50]
    when _T_93 : @[Arithmetic_Logic_Unit.scala 111:67]
      node _T_94 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 111:105]
      result_unsigned <= _T_94 @[Arithmetic_Logic_Unit.scala 111:84]
      skip @[Arithmetic_Logic_Unit.scala 111:67]
    node _T_96 = eq(op, UInt<5>("h016")) @[Arithmetic_Logic_Unit.scala 112:51]
    when _T_96 : @[Arithmetic_Logic_Unit.scala 112:69]
      node _T_97 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 112:109]
      node _T_98 = not(_T_97) @[Arithmetic_Logic_Unit.scala 112:89]
      result_unsigned <= _T_98 @[Arithmetic_Logic_Unit.scala 112:86]
      skip @[Arithmetic_Logic_Unit.scala 112:69]
    node _T_100 = eq(op, UInt<5>("h017")) @[Arithmetic_Logic_Unit.scala 113:50]
    when _T_100 : @[Arithmetic_Logic_Unit.scala 113:67]
      node _T_101 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 113:113]
      result_unsigned <= _T_101 @[Arithmetic_Logic_Unit.scala 113:84]
      skip @[Arithmetic_Logic_Unit.scala 113:67]
    node _T_103 = eq(op, UInt<5>("h018")) @[Arithmetic_Logic_Unit.scala 114:51]
    when _T_103 : @[Arithmetic_Logic_Unit.scala 114:69]
      node _T_104 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 114:117]
      node _T_106 = eq(_T_104, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 114:89]
      result_unsigned <= _T_106 @[Arithmetic_Logic_Unit.scala 114:86]
      skip @[Arithmetic_Logic_Unit.scala 114:69]
    node _T_108 = eq(op, UInt<5>("h019")) @[Arithmetic_Logic_Unit.scala 115:49]
    when _T_108 : @[Arithmetic_Logic_Unit.scala 115:65]
      node _T_109 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 115:111]
      result_unsigned <= _T_109 @[Arithmetic_Logic_Unit.scala 115:82]
      skip @[Arithmetic_Logic_Unit.scala 115:65]
    node _T_111 = eq(op, UInt<5>("h01a")) @[Arithmetic_Logic_Unit.scala 116:50]
    when _T_111 : @[Arithmetic_Logic_Unit.scala 116:67]
      node _T_112 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 116:115]
      node _T_114 = eq(_T_112, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 116:87]
      result_unsigned <= _T_114 @[Arithmetic_Logic_Unit.scala 116:84]
      skip @[Arithmetic_Logic_Unit.scala 116:67]
    node _T_116 = eq(op, UInt<5>("h01b")) @[Arithmetic_Logic_Unit.scala 117:50]
    when _T_116 : @[Arithmetic_Logic_Unit.scala 117:67]
      node _T_118 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:87]
      node _T_120 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:116]
      node _T_121 = xor(_T_118, _T_120) @[Arithmetic_Logic_Unit.scala 117:114]
      result_unsigned <= _T_121 @[Arithmetic_Logic_Unit.scala 117:84]
      skip @[Arithmetic_Logic_Unit.scala 117:67]
    node _T_123 = eq(op, UInt<5>("h01c")) @[Arithmetic_Logic_Unit.scala 118:51]
    when _T_123 : @[Arithmetic_Logic_Unit.scala 118:69]
      node _T_125 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:91]
      node _T_127 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:120]
      node _T_128 = xor(_T_125, _T_127) @[Arithmetic_Logic_Unit.scala 118:118]
      node _T_130 = eq(_T_128, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:89]
      result_unsigned <= _T_130 @[Arithmetic_Logic_Unit.scala 118:86]
      skip @[Arithmetic_Logic_Unit.scala 118:69]
    node _T_132 = eq(op, UInt<6>("h021")) @[Arithmetic_Logic_Unit.scala 119:48]
    when _T_132 : @[Arithmetic_Logic_Unit.scala 119:63]
      node _T_133 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 119:100]
      node _T_134 = bits(_T_133, 0, 0) @[Arithmetic_Logic_Unit.scala 119:100]
      result_unsigned <= _T_134 @[Arithmetic_Logic_Unit.scala 119:80]
      skip @[Arithmetic_Logic_Unit.scala 119:63]
    node _T_136 = eq(op, UInt<6>("h022")) @[Arithmetic_Logic_Unit.scala 120:48]
    when _T_136 : @[Arithmetic_Logic_Unit.scala 120:63]
      when logical_operand2_unsigned : @[Arithmetic_Logic_Unit.scala 121:38]
        node _T_138 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 122:73]
        node _T_139 = dshl(UInt<1>("h01"), _T_138) @[Arithmetic_Logic_Unit.scala 122:53]
        node _T_140 = or(operand0_unsigned, _T_139) @[Arithmetic_Logic_Unit.scala 122:46]
        result_unsigned <= _T_140 @[Arithmetic_Logic_Unit.scala 122:25]
        skip @[Arithmetic_Logic_Unit.scala 121:38]
      else : @[Arithmetic_Logic_Unit.scala 123:19]
        node _T_142 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 124:75]
        node _T_143 = dshl(UInt<1>("h01"), _T_142) @[Arithmetic_Logic_Unit.scala 124:55]
        node _T_144 = not(_T_143) @[Arithmetic_Logic_Unit.scala 124:49]
        node _T_145 = and(operand0_unsigned, _T_144) @[Arithmetic_Logic_Unit.scala 124:46]
        result_unsigned <= _T_145 @[Arithmetic_Logic_Unit.scala 124:25]
        skip @[Arithmetic_Logic_Unit.scala 123:19]
      skip @[Arithmetic_Logic_Unit.scala 120:63]
    node _T_147 = eq(op, UInt<6>("h023")) @[Arithmetic_Logic_Unit.scala 127:48]
    when _T_147 : @[Arithmetic_Logic_Unit.scala 127:63]
      node _T_149 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 127:130]
      node _T_150 = dshl(UInt<1>("h01"), _T_149) @[Arithmetic_Logic_Unit.scala 127:110]
      node _T_151 = not(_T_150) @[Arithmetic_Logic_Unit.scala 127:104]
      node _T_152 = and(operand0_unsigned, _T_151) @[Arithmetic_Logic_Unit.scala 127:101]
      result_unsigned <= _T_152 @[Arithmetic_Logic_Unit.scala 127:80]
      skip @[Arithmetic_Logic_Unit.scala 127:63]
    node _T_154 = eq(op, UInt<6>("h024")) @[Arithmetic_Logic_Unit.scala 128:48]
    when _T_154 : @[Arithmetic_Logic_Unit.scala 128:63]
      node _T_156 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 128:128]
      node _T_157 = dshl(UInt<1>("h01"), _T_156) @[Arithmetic_Logic_Unit.scala 128:108]
      node _T_158 = or(operand0_unsigned, _T_157) @[Arithmetic_Logic_Unit.scala 128:101]
      result_unsigned <= _T_158 @[Arithmetic_Logic_Unit.scala 128:80]
      skip @[Arithmetic_Logic_Unit.scala 128:63]
    node _T_160 = eq(op, UInt<6>("h025")) @[Arithmetic_Logic_Unit.scala 129:49]
    when _T_160 : @[Arithmetic_Logic_Unit.scala 129:65]
      node _T_162 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 130:30]
      when _T_162 : @[Arithmetic_Logic_Unit.scala 130:38]
        result_unsigned <= UInt<6>("h020") @[Arithmetic_Logic_Unit.scala 131:25]
        skip @[Arithmetic_Logic_Unit.scala 130:38]
      else : @[Arithmetic_Logic_Unit.scala 132:18]
        node _T_166 = shl(UInt<16>("h0ffff"), 16) @[Bitwise.scala 102:47]
        node _T_167 = xor(UInt<32>("h0ffffffff"), _T_166) @[Bitwise.scala 102:21]
        node _T_168 = shr(operand0_unsigned, 16) @[Bitwise.scala 103:21]
        node _T_169 = and(_T_168, _T_167) @[Bitwise.scala 103:31]
        node _T_170 = bits(operand0_unsigned, 15, 0) @[Bitwise.scala 103:46]
        node _T_171 = shl(_T_170, 16) @[Bitwise.scala 103:65]
        node _T_172 = not(_T_167) @[Bitwise.scala 103:77]
        node _T_173 = and(_T_171, _T_172) @[Bitwise.scala 103:75]
        node _T_174 = or(_T_169, _T_173) @[Bitwise.scala 103:39]
        node _T_175 = bits(_T_167, 23, 0) @[Bitwise.scala 102:28]
        node _T_176 = shl(_T_175, 8) @[Bitwise.scala 102:47]
        node _T_177 = xor(_T_167, _T_176) @[Bitwise.scala 102:21]
        node _T_178 = shr(_T_174, 8) @[Bitwise.scala 103:21]
        node _T_179 = and(_T_178, _T_177) @[Bitwise.scala 103:31]
        node _T_180 = bits(_T_174, 23, 0) @[Bitwise.scala 103:46]
        node _T_181 = shl(_T_180, 8) @[Bitwise.scala 103:65]
        node _T_182 = not(_T_177) @[Bitwise.scala 103:77]
        node _T_183 = and(_T_181, _T_182) @[Bitwise.scala 103:75]
        node _T_184 = or(_T_179, _T_183) @[Bitwise.scala 103:39]
        node _T_185 = bits(_T_177, 27, 0) @[Bitwise.scala 102:28]
        node _T_186 = shl(_T_185, 4) @[Bitwise.scala 102:47]
        node _T_187 = xor(_T_177, _T_186) @[Bitwise.scala 102:21]
        node _T_188 = shr(_T_184, 4) @[Bitwise.scala 103:21]
        node _T_189 = and(_T_188, _T_187) @[Bitwise.scala 103:31]
        node _T_190 = bits(_T_184, 27, 0) @[Bitwise.scala 103:46]
        node _T_191 = shl(_T_190, 4) @[Bitwise.scala 103:65]
        node _T_192 = not(_T_187) @[Bitwise.scala 103:77]
        node _T_193 = and(_T_191, _T_192) @[Bitwise.scala 103:75]
        node _T_194 = or(_T_189, _T_193) @[Bitwise.scala 103:39]
        node _T_195 = bits(_T_187, 29, 0) @[Bitwise.scala 102:28]
        node _T_196 = shl(_T_195, 2) @[Bitwise.scala 102:47]
        node _T_197 = xor(_T_187, _T_196) @[Bitwise.scala 102:21]
        node _T_198 = shr(_T_194, 2) @[Bitwise.scala 103:21]
        node _T_199 = and(_T_198, _T_197) @[Bitwise.scala 103:31]
        node _T_200 = bits(_T_194, 29, 0) @[Bitwise.scala 103:46]
        node _T_201 = shl(_T_200, 2) @[Bitwise.scala 103:65]
        node _T_202 = not(_T_197) @[Bitwise.scala 103:77]
        node _T_203 = and(_T_201, _T_202) @[Bitwise.scala 103:75]
        node _T_204 = or(_T_199, _T_203) @[Bitwise.scala 103:39]
        node _T_205 = bits(_T_197, 30, 0) @[Bitwise.scala 102:28]
        node _T_206 = shl(_T_205, 1) @[Bitwise.scala 102:47]
        node _T_207 = xor(_T_197, _T_206) @[Bitwise.scala 102:21]
        node _T_208 = shr(_T_204, 1) @[Bitwise.scala 103:21]
        node _T_209 = and(_T_208, _T_207) @[Bitwise.scala 103:31]
        node _T_210 = bits(_T_204, 30, 0) @[Bitwise.scala 103:46]
        node _T_211 = shl(_T_210, 1) @[Bitwise.scala 103:65]
        node _T_212 = not(_T_207) @[Bitwise.scala 103:77]
        node _T_213 = and(_T_211, _T_212) @[Bitwise.scala 103:75]
        node _T_214 = or(_T_209, _T_213) @[Bitwise.scala 103:39]
        node _T_215 = bits(_T_214, 0, 0) @[OneHot.scala 39:40]
        node _T_216 = bits(_T_214, 1, 1) @[OneHot.scala 39:40]
        node _T_217 = bits(_T_214, 2, 2) @[OneHot.scala 39:40]
        node _T_218 = bits(_T_214, 3, 3) @[OneHot.scala 39:40]
        node _T_219 = bits(_T_214, 4, 4) @[OneHot.scala 39:40]
        node _T_220 = bits(_T_214, 5, 5) @[OneHot.scala 39:40]
        node _T_221 = bits(_T_214, 6, 6) @[OneHot.scala 39:40]
        node _T_222 = bits(_T_214, 7, 7) @[OneHot.scala 39:40]
        node _T_223 = bits(_T_214, 8, 8) @[OneHot.scala 39:40]
        node _T_224 = bits(_T_214, 9, 9) @[OneHot.scala 39:40]
        node _T_225 = bits(_T_214, 10, 10) @[OneHot.scala 39:40]
        node _T_226 = bits(_T_214, 11, 11) @[OneHot.scala 39:40]
        node _T_227 = bits(_T_214, 12, 12) @[OneHot.scala 39:40]
        node _T_228 = bits(_T_214, 13, 13) @[OneHot.scala 39:40]
        node _T_229 = bits(_T_214, 14, 14) @[OneHot.scala 39:40]
        node _T_230 = bits(_T_214, 15, 15) @[OneHot.scala 39:40]
        node _T_231 = bits(_T_214, 16, 16) @[OneHot.scala 39:40]
        node _T_232 = bits(_T_214, 17, 17) @[OneHot.scala 39:40]
        node _T_233 = bits(_T_214, 18, 18) @[OneHot.scala 39:40]
        node _T_234 = bits(_T_214, 19, 19) @[OneHot.scala 39:40]
        node _T_235 = bits(_T_214, 20, 20) @[OneHot.scala 39:40]
        node _T_236 = bits(_T_214, 21, 21) @[OneHot.scala 39:40]
        node _T_237 = bits(_T_214, 22, 22) @[OneHot.scala 39:40]
        node _T_238 = bits(_T_214, 23, 23) @[OneHot.scala 39:40]
        node _T_239 = bits(_T_214, 24, 24) @[OneHot.scala 39:40]
        node _T_240 = bits(_T_214, 25, 25) @[OneHot.scala 39:40]
        node _T_241 = bits(_T_214, 26, 26) @[OneHot.scala 39:40]
        node _T_242 = bits(_T_214, 27, 27) @[OneHot.scala 39:40]
        node _T_243 = bits(_T_214, 28, 28) @[OneHot.scala 39:40]
        node _T_244 = bits(_T_214, 29, 29) @[OneHot.scala 39:40]
        node _T_245 = bits(_T_214, 30, 30) @[OneHot.scala 39:40]
        node _T_246 = bits(_T_214, 31, 31) @[OneHot.scala 39:40]
        node _T_279 = mux(_T_245, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 31:69]
        node _T_280 = mux(_T_244, UInt<5>("h01d"), _T_279) @[Mux.scala 31:69]
        node _T_281 = mux(_T_243, UInt<5>("h01c"), _T_280) @[Mux.scala 31:69]
        node _T_282 = mux(_T_242, UInt<5>("h01b"), _T_281) @[Mux.scala 31:69]
        node _T_283 = mux(_T_241, UInt<5>("h01a"), _T_282) @[Mux.scala 31:69]
        node _T_284 = mux(_T_240, UInt<5>("h019"), _T_283) @[Mux.scala 31:69]
        node _T_285 = mux(_T_239, UInt<5>("h018"), _T_284) @[Mux.scala 31:69]
        node _T_286 = mux(_T_238, UInt<5>("h017"), _T_285) @[Mux.scala 31:69]
        node _T_287 = mux(_T_237, UInt<5>("h016"), _T_286) @[Mux.scala 31:69]
        node _T_288 = mux(_T_236, UInt<5>("h015"), _T_287) @[Mux.scala 31:69]
        node _T_289 = mux(_T_235, UInt<5>("h014"), _T_288) @[Mux.scala 31:69]
        node _T_290 = mux(_T_234, UInt<5>("h013"), _T_289) @[Mux.scala 31:69]
        node _T_291 = mux(_T_233, UInt<5>("h012"), _T_290) @[Mux.scala 31:69]
        node _T_292 = mux(_T_232, UInt<5>("h011"), _T_291) @[Mux.scala 31:69]
        node _T_293 = mux(_T_231, UInt<5>("h010"), _T_292) @[Mux.scala 31:69]
        node _T_294 = mux(_T_230, UInt<4>("h0f"), _T_293) @[Mux.scala 31:69]
        node _T_295 = mux(_T_229, UInt<4>("h0e"), _T_294) @[Mux.scala 31:69]
        node _T_296 = mux(_T_228, UInt<4>("h0d"), _T_295) @[Mux.scala 31:69]
        node _T_297 = mux(_T_227, UInt<4>("h0c"), _T_296) @[Mux.scala 31:69]
        node _T_298 = mux(_T_226, UInt<4>("h0b"), _T_297) @[Mux.scala 31:69]
        node _T_299 = mux(_T_225, UInt<4>("h0a"), _T_298) @[Mux.scala 31:69]
        node _T_300 = mux(_T_224, UInt<4>("h09"), _T_299) @[Mux.scala 31:69]
        node _T_301 = mux(_T_223, UInt<4>("h08"), _T_300) @[Mux.scala 31:69]
        node _T_302 = mux(_T_222, UInt<3>("h07"), _T_301) @[Mux.scala 31:69]
        node _T_303 = mux(_T_221, UInt<3>("h06"), _T_302) @[Mux.scala 31:69]
        node _T_304 = mux(_T_220, UInt<3>("h05"), _T_303) @[Mux.scala 31:69]
        node _T_305 = mux(_T_219, UInt<3>("h04"), _T_304) @[Mux.scala 31:69]
        node _T_306 = mux(_T_218, UInt<2>("h03"), _T_305) @[Mux.scala 31:69]
        node _T_307 = mux(_T_217, UInt<2>("h02"), _T_306) @[Mux.scala 31:69]
        node _T_308 = mux(_T_216, UInt<1>("h01"), _T_307) @[Mux.scala 31:69]
        node _T_309 = mux(_T_215, UInt<1>("h00"), _T_308) @[Mux.scala 31:69]
        result_unsigned <= _T_309 @[Arithmetic_Logic_Unit.scala 133:25]
        skip @[Arithmetic_Logic_Unit.scala 132:18]
      skip @[Arithmetic_Logic_Unit.scala 129:65]
    node _T_311 = eq(op, UInt<6>("h026")) @[Arithmetic_Logic_Unit.scala 136:49]
    when _T_311 : @[Arithmetic_Logic_Unit.scala 136:65]
      node _T_313 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 137:30]
      when _T_313 : @[Arithmetic_Logic_Unit.scala 137:39]
        result_unsigned <= UInt<6>("h020") @[Arithmetic_Logic_Unit.scala 138:25]
        skip @[Arithmetic_Logic_Unit.scala 137:39]
      else : @[Arithmetic_Logic_Unit.scala 139:18]
        node _T_315 = bits(operand0_unsigned, 0, 0) @[OneHot.scala 39:40]
        node _T_316 = bits(operand0_unsigned, 1, 1) @[OneHot.scala 39:40]
        node _T_317 = bits(operand0_unsigned, 2, 2) @[OneHot.scala 39:40]
        node _T_318 = bits(operand0_unsigned, 3, 3) @[OneHot.scala 39:40]
        node _T_319 = bits(operand0_unsigned, 4, 4) @[OneHot.scala 39:40]
        node _T_320 = bits(operand0_unsigned, 5, 5) @[OneHot.scala 39:40]
        node _T_321 = bits(operand0_unsigned, 6, 6) @[OneHot.scala 39:40]
        node _T_322 = bits(operand0_unsigned, 7, 7) @[OneHot.scala 39:40]
        node _T_323 = bits(operand0_unsigned, 8, 8) @[OneHot.scala 39:40]
        node _T_324 = bits(operand0_unsigned, 9, 9) @[OneHot.scala 39:40]
        node _T_325 = bits(operand0_unsigned, 10, 10) @[OneHot.scala 39:40]
        node _T_326 = bits(operand0_unsigned, 11, 11) @[OneHot.scala 39:40]
        node _T_327 = bits(operand0_unsigned, 12, 12) @[OneHot.scala 39:40]
        node _T_328 = bits(operand0_unsigned, 13, 13) @[OneHot.scala 39:40]
        node _T_329 = bits(operand0_unsigned, 14, 14) @[OneHot.scala 39:40]
        node _T_330 = bits(operand0_unsigned, 15, 15) @[OneHot.scala 39:40]
        node _T_331 = bits(operand0_unsigned, 16, 16) @[OneHot.scala 39:40]
        node _T_332 = bits(operand0_unsigned, 17, 17) @[OneHot.scala 39:40]
        node _T_333 = bits(operand0_unsigned, 18, 18) @[OneHot.scala 39:40]
        node _T_334 = bits(operand0_unsigned, 19, 19) @[OneHot.scala 39:40]
        node _T_335 = bits(operand0_unsigned, 20, 20) @[OneHot.scala 39:40]
        node _T_336 = bits(operand0_unsigned, 21, 21) @[OneHot.scala 39:40]
        node _T_337 = bits(operand0_unsigned, 22, 22) @[OneHot.scala 39:40]
        node _T_338 = bits(operand0_unsigned, 23, 23) @[OneHot.scala 39:40]
        node _T_339 = bits(operand0_unsigned, 24, 24) @[OneHot.scala 39:40]
        node _T_340 = bits(operand0_unsigned, 25, 25) @[OneHot.scala 39:40]
        node _T_341 = bits(operand0_unsigned, 26, 26) @[OneHot.scala 39:40]
        node _T_342 = bits(operand0_unsigned, 27, 27) @[OneHot.scala 39:40]
        node _T_343 = bits(operand0_unsigned, 28, 28) @[OneHot.scala 39:40]
        node _T_344 = bits(operand0_unsigned, 29, 29) @[OneHot.scala 39:40]
        node _T_345 = bits(operand0_unsigned, 30, 30) @[OneHot.scala 39:40]
        node _T_346 = bits(operand0_unsigned, 31, 31) @[OneHot.scala 39:40]
        node _T_379 = mux(_T_345, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 31:69]
        node _T_380 = mux(_T_344, UInt<5>("h01d"), _T_379) @[Mux.scala 31:69]
        node _T_381 = mux(_T_343, UInt<5>("h01c"), _T_380) @[Mux.scala 31:69]
        node _T_382 = mux(_T_342, UInt<5>("h01b"), _T_381) @[Mux.scala 31:69]
        node _T_383 = mux(_T_341, UInt<5>("h01a"), _T_382) @[Mux.scala 31:69]
        node _T_384 = mux(_T_340, UInt<5>("h019"), _T_383) @[Mux.scala 31:69]
        node _T_385 = mux(_T_339, UInt<5>("h018"), _T_384) @[Mux.scala 31:69]
        node _T_386 = mux(_T_338, UInt<5>("h017"), _T_385) @[Mux.scala 31:69]
        node _T_387 = mux(_T_337, UInt<5>("h016"), _T_386) @[Mux.scala 31:69]
        node _T_388 = mux(_T_336, UInt<5>("h015"), _T_387) @[Mux.scala 31:69]
        node _T_389 = mux(_T_335, UInt<5>("h014"), _T_388) @[Mux.scala 31:69]
        node _T_390 = mux(_T_334, UInt<5>("h013"), _T_389) @[Mux.scala 31:69]
        node _T_391 = mux(_T_333, UInt<5>("h012"), _T_390) @[Mux.scala 31:69]
        node _T_392 = mux(_T_332, UInt<5>("h011"), _T_391) @[Mux.scala 31:69]
        node _T_393 = mux(_T_331, UInt<5>("h010"), _T_392) @[Mux.scala 31:69]
        node _T_394 = mux(_T_330, UInt<4>("h0f"), _T_393) @[Mux.scala 31:69]
        node _T_395 = mux(_T_329, UInt<4>("h0e"), _T_394) @[Mux.scala 31:69]
        node _T_396 = mux(_T_328, UInt<4>("h0d"), _T_395) @[Mux.scala 31:69]
        node _T_397 = mux(_T_327, UInt<4>("h0c"), _T_396) @[Mux.scala 31:69]
        node _T_398 = mux(_T_326, UInt<4>("h0b"), _T_397) @[Mux.scala 31:69]
        node _T_399 = mux(_T_325, UInt<4>("h0a"), _T_398) @[Mux.scala 31:69]
        node _T_400 = mux(_T_324, UInt<4>("h09"), _T_399) @[Mux.scala 31:69]
        node _T_401 = mux(_T_323, UInt<4>("h08"), _T_400) @[Mux.scala 31:69]
        node _T_402 = mux(_T_322, UInt<3>("h07"), _T_401) @[Mux.scala 31:69]
        node _T_403 = mux(_T_321, UInt<3>("h06"), _T_402) @[Mux.scala 31:69]
        node _T_404 = mux(_T_320, UInt<3>("h05"), _T_403) @[Mux.scala 31:69]
        node _T_405 = mux(_T_319, UInt<3>("h04"), _T_404) @[Mux.scala 31:69]
        node _T_406 = mux(_T_318, UInt<2>("h03"), _T_405) @[Mux.scala 31:69]
        node _T_407 = mux(_T_317, UInt<2>("h02"), _T_406) @[Mux.scala 31:69]
        node _T_408 = mux(_T_316, UInt<1>("h01"), _T_407) @[Mux.scala 31:69]
        node _T_409 = mux(_T_315, UInt<1>("h00"), _T_408) @[Mux.scala 31:69]
        result_unsigned <= _T_409 @[Arithmetic_Logic_Unit.scala 140:25]
        skip @[Arithmetic_Logic_Unit.scala 139:18]
      skip @[Arithmetic_Logic_Unit.scala 136:65]
    node _T_411 = eq(op, UInt<6>("h027")) @[Arithmetic_Logic_Unit.scala 143:50]
    when _T_411 : @[Arithmetic_Logic_Unit.scala 143:67]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 144:23]
      skip @[Arithmetic_Logic_Unit.scala 143:67]
    wire fpResult : UInt<32> @[Arithmetic_Logic_Unit.scala 149:22]
    fpResult <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 150:12]
    wire _T_449 : UInt<6>[31] @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[0] <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[1] <= UInt<1>("h01") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[2] <= UInt<2>("h02") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[3] <= UInt<2>("h03") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[4] <= UInt<3>("h04") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[5] <= UInt<3>("h06") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[6] <= UInt<3>("h07") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[7] <= UInt<4>("h08") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[8] <= UInt<4>("h0a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[9] <= UInt<4>("h0c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[10] <= UInt<4>("h0e") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[11] <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[12] <= UInt<5>("h011") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[13] <= UInt<5>("h012") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[14] <= UInt<5>("h013") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[15] <= UInt<5>("h014") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[16] <= UInt<5>("h015") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[17] <= UInt<5>("h016") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[18] <= UInt<5>("h017") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[19] <= UInt<5>("h018") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[20] <= UInt<5>("h019") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[21] <= UInt<5>("h01a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[22] <= UInt<5>("h01b") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[23] <= UInt<5>("h01c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[24] <= UInt<6>("h021") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[25] <= UInt<6>("h022") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[26] <= UInt<6>("h023") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[27] <= UInt<6>("h024") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[28] <= UInt<6>("h025") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[29] <= UInt<6>("h026") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[30] <= UInt<6>("h027") @[Arithmetic_Logic_Unit.scala 171:15]
    node _T_483 = eq(_T_449[0], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_484 = eq(_T_449[1], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_485 = eq(_T_449[2], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_486 = eq(_T_449[3], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_487 = eq(_T_449[4], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_488 = eq(_T_449[5], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_489 = eq(_T_449[6], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_490 = eq(_T_449[7], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_491 = eq(_T_449[8], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_492 = eq(_T_449[9], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_493 = eq(_T_449[10], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_494 = eq(_T_449[11], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_495 = eq(_T_449[12], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_496 = eq(_T_449[13], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_497 = eq(_T_449[14], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_498 = eq(_T_449[15], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_499 = eq(_T_449[16], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_500 = eq(_T_449[17], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_501 = eq(_T_449[18], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_502 = eq(_T_449[19], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_503 = eq(_T_449[20], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_504 = eq(_T_449[21], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_505 = eq(_T_449[22], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_506 = eq(_T_449[23], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_507 = eq(_T_449[24], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_508 = eq(_T_449[25], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_509 = eq(_T_449[26], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_510 = eq(_T_449[27], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_511 = eq(_T_449[28], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_512 = eq(_T_449[29], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_513 = eq(_T_449[30], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_515 = or(UInt<1>("h00"), _T_483) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_516 = or(_T_515, _T_484) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_517 = or(_T_516, _T_485) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_518 = or(_T_517, _T_486) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_519 = or(_T_518, _T_487) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_520 = or(_T_519, _T_488) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_521 = or(_T_520, _T_489) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_522 = or(_T_521, _T_490) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_523 = or(_T_522, _T_491) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_524 = or(_T_523, _T_492) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_525 = or(_T_524, _T_493) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_526 = or(_T_525, _T_494) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_527 = or(_T_526, _T_495) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_528 = or(_T_527, _T_496) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_529 = or(_T_528, _T_497) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_530 = or(_T_529, _T_498) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_531 = or(_T_530, _T_499) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_532 = or(_T_531, _T_500) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_533 = or(_T_532, _T_501) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_534 = or(_T_533, _T_502) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_535 = or(_T_534, _T_503) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_536 = or(_T_535, _T_504) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_537 = or(_T_536, _T_505) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_538 = or(_T_537, _T_506) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_539 = or(_T_538, _T_507) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_540 = or(_T_539, _T_508) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_541 = or(_T_540, _T_509) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_542 = or(_T_541, _T_510) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_543 = or(_T_542, _T_511) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_544 = or(_T_543, _T_512) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_545 = or(_T_544, _T_513) @[Arithmetic_Logic_Unit.scala 171:55]
    when _T_545 : @[Arithmetic_Logic_Unit.scala 171:66]
      io.2 <= result_unsigned @[Arithmetic_Logic_Unit.scala 172:22]
      skip @[Arithmetic_Logic_Unit.scala 171:66]
    else : @[Arithmetic_Logic_Unit.scala 173:74]
      wire _T_554 : UInt<4>[5] @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[0] <= UInt<3>("h05") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[1] <= UInt<4>("h09") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[2] <= UInt<4>("h0b") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[3] <= UInt<4>("h0d") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[4] <= UInt<4>("h0f") @[Arithmetic_Logic_Unit.scala 173:24]
      node _T_562 = eq(_T_554[0], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_563 = eq(_T_554[1], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_564 = eq(_T_554[2], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_565 = eq(_T_554[3], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_566 = eq(_T_554[4], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_568 = or(UInt<1>("h00"), _T_562) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_569 = or(_T_568, _T_563) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_570 = or(_T_569, _T_564) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_571 = or(_T_570, _T_565) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_572 = or(_T_571, _T_566) @[Arithmetic_Logic_Unit.scala 173:62]
      when _T_572 : @[Arithmetic_Logic_Unit.scala 173:74]
        node _T_573 = asUInt(result_signed) @[Arithmetic_Logic_Unit.scala 174:45]
        io.2 <= _T_573 @[Arithmetic_Logic_Unit.scala 174:22]
        skip @[Arithmetic_Logic_Unit.scala 173:74]
      else : @[Arithmetic_Logic_Unit.scala 175:70]
        wire _T_590 : UInt<6>[13] @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[0] <= UInt<6>("h031") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[1] <= UInt<6>("h032") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[2] <= UInt<6>("h033") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[3] <= UInt<6>("h035") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[4] <= UInt<6>("h036") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[5] <= UInt<6>("h037") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[6] <= UInt<6>("h038") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[7] <= UInt<6>("h039") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[8] <= UInt<6>("h03a") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[9] <= UInt<6>("h03b") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[10] <= UInt<6>("h03c") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[11] <= UInt<6>("h03d") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[12] <= UInt<6>("h03e") @[Arithmetic_Logic_Unit.scala 175:22]
        node _T_606 = eq(_T_590[0], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_607 = eq(_T_590[1], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_608 = eq(_T_590[2], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_609 = eq(_T_590[3], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_610 = eq(_T_590[4], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_611 = eq(_T_590[5], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_612 = eq(_T_590[6], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_613 = eq(_T_590[7], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_614 = eq(_T_590[8], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_615 = eq(_T_590[9], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_616 = eq(_T_590[10], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_617 = eq(_T_590[11], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_618 = eq(_T_590[12], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_620 = or(UInt<1>("h00"), _T_606) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_621 = or(_T_620, _T_607) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_622 = or(_T_621, _T_608) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_623 = or(_T_622, _T_609) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_624 = or(_T_623, _T_610) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_625 = or(_T_624, _T_611) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_626 = or(_T_625, _T_612) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_627 = or(_T_626, _T_613) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_628 = or(_T_627, _T_614) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_629 = or(_T_628, _T_615) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_630 = or(_T_629, _T_616) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_631 = or(_T_630, _T_617) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_632 = or(_T_631, _T_618) @[Arithmetic_Logic_Unit.scala 175:59]
        when _T_632 : @[Arithmetic_Logic_Unit.scala 175:70]
          io.2 <= fpResult @[Arithmetic_Logic_Unit.scala 176:22]
          skip @[Arithmetic_Logic_Unit.scala 175:70]
        else : @[Arithmetic_Logic_Unit.scala 177:16]
          io.2 <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 178:22]
          skip @[Arithmetic_Logic_Unit.scala 177:16]
    node _T_634 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_636 = eq(_T_634, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 181:9]
    when _T_636 : @[Arithmetic_Logic_Unit.scala 181:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", op) @[Arithmetic_Logic_Unit.scala 181:9]
      skip @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_637 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_639 = eq(_T_637, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 182:9]
    when _T_639 : @[Arithmetic_Logic_Unit.scala 182:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.0) @[Arithmetic_Logic_Unit.scala 182:9]
      skip @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_640 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_642 = eq(_T_640, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 183:9]
    when _T_642 : @[Arithmetic_Logic_Unit.scala 183:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.1) @[Arithmetic_Logic_Unit.scala 183:9]
      skip @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_643 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_645 = eq(_T_643, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 184:9]
    when _T_645 : @[Arithmetic_Logic_Unit.scala 184:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.2) @[Arithmetic_Logic_Unit.scala 184:9]
      skip @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_646 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 185:9]
    node _T_648 = eq(_T_646, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 185:9]
    when _T_648 : @[Arithmetic_Logic_Unit.scala 185:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[Arithmetic_Logic_Unit.scala 185:9]
      skip @[Arithmetic_Logic_Unit.scala 185:9]
    
  module Delay_Pipe_Hw_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<3>, 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg head : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_29 : UInt<32>[6] @[Delay_Pipe.scala 50:29]
    _T_29[0] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[1] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[2] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[3] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[4] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[5] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<32>[6], clock with : (reset => (reset, _T_29)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_83 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_84 = tail(_T_83, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_84 @[Delay_Pipe.scala 55:8]
    node _T_86 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_87 = tail(_T_86, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_87 @[Delay_Pipe.scala 56:8]
    node _T_88 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_88 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[3] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[4] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[5] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<32>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<32>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<32>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<32>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<32>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Arithmetic_Logic_Unit_Hw_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<5>, flip 3 : UInt<32>, 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire op : UInt<5> @[Arithmetic_Logic_Unit.scala 52:21]
    op <= io.4 @[Arithmetic_Logic_Unit.scala 53:6]
    wire operand0_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 56:29]
    wire operand1_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 57:29]
    wire operand2_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 58:29]
    wire operand0_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 60:31]
    wire operand1_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 61:31]
    wire operand2_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 62:31]
    wire result_signed : SInt<32> @[Arithmetic_Logic_Unit.scala 64:27]
    wire result_unsigned : UInt<32> @[Arithmetic_Logic_Unit.scala 65:29]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 66:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 66:40]
    operand0_unsigned <= io.0 @[Arithmetic_Logic_Unit.scala 69:21]
    operand1_unsigned <= io.1 @[Arithmetic_Logic_Unit.scala 70:21]
    operand2_unsigned <= io.3 @[Arithmetic_Logic_Unit.scala 71:55]
    node _T_31 = asSInt(io.0) @[Arithmetic_Logic_Unit.scala 72:58]
    operand0_signed <= _T_31 @[Arithmetic_Logic_Unit.scala 72:19]
    node _T_32 = asSInt(io.1) @[Arithmetic_Logic_Unit.scala 73:56]
    operand1_signed <= _T_32 @[Arithmetic_Logic_Unit.scala 73:19]
    node _T_33 = asSInt(io.3) @[Arithmetic_Logic_Unit.scala 74:84]
    operand2_signed <= _T_33 @[Arithmetic_Logic_Unit.scala 74:53]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 77:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 78:19]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 91:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 92:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 93:58]
    node _T_40 = eq(op, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 95:49]
    when _T_40 : @[Arithmetic_Logic_Unit.scala 95:65]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 95:82]
      skip @[Arithmetic_Logic_Unit.scala 95:65]
    node _T_43 = eq(op, UInt<1>("h01")) @[Arithmetic_Logic_Unit.scala 96:49]
    when _T_43 : @[Arithmetic_Logic_Unit.scala 96:65]
      result_unsigned <= operand0_unsigned @[Arithmetic_Logic_Unit.scala 96:82]
      skip @[Arithmetic_Logic_Unit.scala 96:65]
    node _T_45 = eq(op, UInt<2>("h02")) @[Arithmetic_Logic_Unit.scala 97:49]
    when _T_45 : @[Arithmetic_Logic_Unit.scala 97:65]
      node _T_46 = add(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 97:103]
      node _T_47 = tail(_T_46, 1) @[Arithmetic_Logic_Unit.scala 97:103]
      result_unsigned <= _T_47 @[Arithmetic_Logic_Unit.scala 97:82]
      skip @[Arithmetic_Logic_Unit.scala 97:65]
    node _T_49 = eq(op, UInt<2>("h03")) @[Arithmetic_Logic_Unit.scala 98:49]
    when _T_49 : @[Arithmetic_Logic_Unit.scala 98:65]
      node _T_50 = sub(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_51 = asUInt(_T_50) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_52 = tail(_T_51, 1) @[Arithmetic_Logic_Unit.scala 98:103]
      result_unsigned <= _T_52 @[Arithmetic_Logic_Unit.scala 98:82]
      skip @[Arithmetic_Logic_Unit.scala 98:65]
    node _T_54 = eq(op, UInt<3>("h04")) @[Arithmetic_Logic_Unit.scala 99:49]
    when _T_54 : @[Arithmetic_Logic_Unit.scala 99:65]
      node _T_55 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 99:123]
      node _T_56 = dshl(operand0_unsigned, _T_55) @[Arithmetic_Logic_Unit.scala 99:103]
      result_unsigned <= _T_56 @[Arithmetic_Logic_Unit.scala 99:82]
      skip @[Arithmetic_Logic_Unit.scala 99:65]
    node _T_58 = eq(op, UInt<3>("h06")) @[Arithmetic_Logic_Unit.scala 100:49]
    when _T_58 : @[Arithmetic_Logic_Unit.scala 100:65]
      node _T_59 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 100:103]
      result_unsigned <= _T_59 @[Arithmetic_Logic_Unit.scala 100:82]
      skip @[Arithmetic_Logic_Unit.scala 100:65]
    node _T_61 = eq(op, UInt<3>("h07")) @[Arithmetic_Logic_Unit.scala 101:48]
    when _T_61 : @[Arithmetic_Logic_Unit.scala 101:63]
      node _T_62 = eq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 101:101]
      result_unsigned <= _T_62 @[Arithmetic_Logic_Unit.scala 101:80]
      skip @[Arithmetic_Logic_Unit.scala 101:63]
    node _T_64 = eq(op, UInt<4>("h08")) @[Arithmetic_Logic_Unit.scala 102:48]
    when _T_64 : @[Arithmetic_Logic_Unit.scala 102:63]
      node _T_65 = neq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 102:101]
      result_unsigned <= _T_65 @[Arithmetic_Logic_Unit.scala 102:80]
      skip @[Arithmetic_Logic_Unit.scala 102:63]
    node _T_67 = eq(op, UInt<4>("h0a")) @[Arithmetic_Logic_Unit.scala 103:49]
    when _T_67 : @[Arithmetic_Logic_Unit.scala 103:65]
      node _T_68 = gt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 103:103]
      result_unsigned <= _T_68 @[Arithmetic_Logic_Unit.scala 103:82]
      skip @[Arithmetic_Logic_Unit.scala 103:65]
    node _T_70 = eq(op, UInt<4>("h0c")) @[Arithmetic_Logic_Unit.scala 104:49]
    when _T_70 : @[Arithmetic_Logic_Unit.scala 104:66]
      node _T_71 = lt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 104:104]
      result_unsigned <= _T_71 @[Arithmetic_Logic_Unit.scala 104:83]
      skip @[Arithmetic_Logic_Unit.scala 104:66]
    node _T_73 = eq(op, UInt<4>("h0e")) @[Arithmetic_Logic_Unit.scala 105:49]
    when _T_73 : @[Arithmetic_Logic_Unit.scala 105:65]
      node _T_74 = geq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 105:103]
      result_unsigned <= _T_74 @[Arithmetic_Logic_Unit.scala 105:82]
      skip @[Arithmetic_Logic_Unit.scala 105:65]
    node _T_76 = eq(op, UInt<5>("h010")) @[Arithmetic_Logic_Unit.scala 106:49]
    when _T_76 : @[Arithmetic_Logic_Unit.scala 106:65]
      node _T_77 = leq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 106:103]
      result_unsigned <= _T_77 @[Arithmetic_Logic_Unit.scala 106:82]
      skip @[Arithmetic_Logic_Unit.scala 106:65]
    node _T_79 = eq(op, UInt<5>("h011")) @[Arithmetic_Logic_Unit.scala 107:50]
    when _T_79 : @[Arithmetic_Logic_Unit.scala 107:67]
      node _T_80 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 107:105]
      result_unsigned <= _T_80 @[Arithmetic_Logic_Unit.scala 107:84]
      skip @[Arithmetic_Logic_Unit.scala 107:67]
    node _T_82 = eq(op, UInt<5>("h012")) @[Arithmetic_Logic_Unit.scala 108:51]
    when _T_82 : @[Arithmetic_Logic_Unit.scala 108:69]
      node _T_83 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 108:109]
      node _T_84 = not(_T_83) @[Arithmetic_Logic_Unit.scala 108:89]
      result_unsigned <= _T_84 @[Arithmetic_Logic_Unit.scala 108:86]
      skip @[Arithmetic_Logic_Unit.scala 108:69]
    node _T_86 = eq(op, UInt<5>("h013")) @[Arithmetic_Logic_Unit.scala 109:49]
    when _T_86 : @[Arithmetic_Logic_Unit.scala 109:65]
      node _T_87 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 109:103]
      result_unsigned <= _T_87 @[Arithmetic_Logic_Unit.scala 109:82]
      skip @[Arithmetic_Logic_Unit.scala 109:65]
    node _T_89 = eq(op, UInt<5>("h014")) @[Arithmetic_Logic_Unit.scala 110:50]
    when _T_89 : @[Arithmetic_Logic_Unit.scala 110:67]
      node _T_90 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 110:107]
      node _T_91 = not(_T_90) @[Arithmetic_Logic_Unit.scala 110:87]
      result_unsigned <= _T_91 @[Arithmetic_Logic_Unit.scala 110:84]
      skip @[Arithmetic_Logic_Unit.scala 110:67]
    node _T_93 = eq(op, UInt<5>("h015")) @[Arithmetic_Logic_Unit.scala 111:50]
    when _T_93 : @[Arithmetic_Logic_Unit.scala 111:67]
      node _T_94 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 111:105]
      result_unsigned <= _T_94 @[Arithmetic_Logic_Unit.scala 111:84]
      skip @[Arithmetic_Logic_Unit.scala 111:67]
    node _T_96 = eq(op, UInt<5>("h016")) @[Arithmetic_Logic_Unit.scala 112:51]
    when _T_96 : @[Arithmetic_Logic_Unit.scala 112:69]
      node _T_97 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 112:109]
      node _T_98 = not(_T_97) @[Arithmetic_Logic_Unit.scala 112:89]
      result_unsigned <= _T_98 @[Arithmetic_Logic_Unit.scala 112:86]
      skip @[Arithmetic_Logic_Unit.scala 112:69]
    node _T_100 = eq(op, UInt<5>("h017")) @[Arithmetic_Logic_Unit.scala 113:50]
    when _T_100 : @[Arithmetic_Logic_Unit.scala 113:67]
      node _T_101 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 113:113]
      result_unsigned <= _T_101 @[Arithmetic_Logic_Unit.scala 113:84]
      skip @[Arithmetic_Logic_Unit.scala 113:67]
    node _T_103 = eq(op, UInt<5>("h018")) @[Arithmetic_Logic_Unit.scala 114:51]
    when _T_103 : @[Arithmetic_Logic_Unit.scala 114:69]
      node _T_104 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 114:117]
      node _T_106 = eq(_T_104, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 114:89]
      result_unsigned <= _T_106 @[Arithmetic_Logic_Unit.scala 114:86]
      skip @[Arithmetic_Logic_Unit.scala 114:69]
    node _T_108 = eq(op, UInt<5>("h019")) @[Arithmetic_Logic_Unit.scala 115:49]
    when _T_108 : @[Arithmetic_Logic_Unit.scala 115:65]
      node _T_109 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 115:111]
      result_unsigned <= _T_109 @[Arithmetic_Logic_Unit.scala 115:82]
      skip @[Arithmetic_Logic_Unit.scala 115:65]
    node _T_111 = eq(op, UInt<5>("h01a")) @[Arithmetic_Logic_Unit.scala 116:50]
    when _T_111 : @[Arithmetic_Logic_Unit.scala 116:67]
      node _T_112 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 116:115]
      node _T_114 = eq(_T_112, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 116:87]
      result_unsigned <= _T_114 @[Arithmetic_Logic_Unit.scala 116:84]
      skip @[Arithmetic_Logic_Unit.scala 116:67]
    node _T_116 = eq(op, UInt<5>("h01b")) @[Arithmetic_Logic_Unit.scala 117:50]
    when _T_116 : @[Arithmetic_Logic_Unit.scala 117:67]
      node _T_118 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:87]
      node _T_120 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:116]
      node _T_121 = xor(_T_118, _T_120) @[Arithmetic_Logic_Unit.scala 117:114]
      result_unsigned <= _T_121 @[Arithmetic_Logic_Unit.scala 117:84]
      skip @[Arithmetic_Logic_Unit.scala 117:67]
    node _T_123 = eq(op, UInt<5>("h01c")) @[Arithmetic_Logic_Unit.scala 118:51]
    when _T_123 : @[Arithmetic_Logic_Unit.scala 118:69]
      node _T_125 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:91]
      node _T_127 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:120]
      node _T_128 = xor(_T_125, _T_127) @[Arithmetic_Logic_Unit.scala 118:118]
      node _T_130 = eq(_T_128, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:89]
      result_unsigned <= _T_130 @[Arithmetic_Logic_Unit.scala 118:86]
      skip @[Arithmetic_Logic_Unit.scala 118:69]
    node _T_132 = eq(op, UInt<6>("h021")) @[Arithmetic_Logic_Unit.scala 119:48]
    when _T_132 : @[Arithmetic_Logic_Unit.scala 119:63]
      node _T_133 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 119:100]
      node _T_134 = bits(_T_133, 0, 0) @[Arithmetic_Logic_Unit.scala 119:100]
      result_unsigned <= _T_134 @[Arithmetic_Logic_Unit.scala 119:80]
      skip @[Arithmetic_Logic_Unit.scala 119:63]
    node _T_136 = eq(op, UInt<6>("h022")) @[Arithmetic_Logic_Unit.scala 120:48]
    when _T_136 : @[Arithmetic_Logic_Unit.scala 120:63]
      when logical_operand2_unsigned : @[Arithmetic_Logic_Unit.scala 121:38]
        node _T_138 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 122:73]
        node _T_139 = dshl(UInt<1>("h01"), _T_138) @[Arithmetic_Logic_Unit.scala 122:53]
        node _T_140 = or(operand0_unsigned, _T_139) @[Arithmetic_Logic_Unit.scala 122:46]
        result_unsigned <= _T_140 @[Arithmetic_Logic_Unit.scala 122:25]
        skip @[Arithmetic_Logic_Unit.scala 121:38]
      else : @[Arithmetic_Logic_Unit.scala 123:19]
        node _T_142 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 124:75]
        node _T_143 = dshl(UInt<1>("h01"), _T_142) @[Arithmetic_Logic_Unit.scala 124:55]
        node _T_144 = not(_T_143) @[Arithmetic_Logic_Unit.scala 124:49]
        node _T_145 = and(operand0_unsigned, _T_144) @[Arithmetic_Logic_Unit.scala 124:46]
        result_unsigned <= _T_145 @[Arithmetic_Logic_Unit.scala 124:25]
        skip @[Arithmetic_Logic_Unit.scala 123:19]
      skip @[Arithmetic_Logic_Unit.scala 120:63]
    node _T_147 = eq(op, UInt<6>("h023")) @[Arithmetic_Logic_Unit.scala 127:48]
    when _T_147 : @[Arithmetic_Logic_Unit.scala 127:63]
      node _T_149 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 127:130]
      node _T_150 = dshl(UInt<1>("h01"), _T_149) @[Arithmetic_Logic_Unit.scala 127:110]
      node _T_151 = not(_T_150) @[Arithmetic_Logic_Unit.scala 127:104]
      node _T_152 = and(operand0_unsigned, _T_151) @[Arithmetic_Logic_Unit.scala 127:101]
      result_unsigned <= _T_152 @[Arithmetic_Logic_Unit.scala 127:80]
      skip @[Arithmetic_Logic_Unit.scala 127:63]
    node _T_154 = eq(op, UInt<6>("h024")) @[Arithmetic_Logic_Unit.scala 128:48]
    when _T_154 : @[Arithmetic_Logic_Unit.scala 128:63]
      node _T_156 = bits(operand1_unsigned, 18, 0) @[Arithmetic_Logic_Unit.scala 128:128]
      node _T_157 = dshl(UInt<1>("h01"), _T_156) @[Arithmetic_Logic_Unit.scala 128:108]
      node _T_158 = or(operand0_unsigned, _T_157) @[Arithmetic_Logic_Unit.scala 128:101]
      result_unsigned <= _T_158 @[Arithmetic_Logic_Unit.scala 128:80]
      skip @[Arithmetic_Logic_Unit.scala 128:63]
    node _T_160 = eq(op, UInt<6>("h025")) @[Arithmetic_Logic_Unit.scala 129:49]
    when _T_160 : @[Arithmetic_Logic_Unit.scala 129:65]
      node _T_162 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 130:30]
      when _T_162 : @[Arithmetic_Logic_Unit.scala 130:38]
        result_unsigned <= UInt<6>("h020") @[Arithmetic_Logic_Unit.scala 131:25]
        skip @[Arithmetic_Logic_Unit.scala 130:38]
      else : @[Arithmetic_Logic_Unit.scala 132:18]
        node _T_166 = shl(UInt<16>("h0ffff"), 16) @[Bitwise.scala 102:47]
        node _T_167 = xor(UInt<32>("h0ffffffff"), _T_166) @[Bitwise.scala 102:21]
        node _T_168 = shr(operand0_unsigned, 16) @[Bitwise.scala 103:21]
        node _T_169 = and(_T_168, _T_167) @[Bitwise.scala 103:31]
        node _T_170 = bits(operand0_unsigned, 15, 0) @[Bitwise.scala 103:46]
        node _T_171 = shl(_T_170, 16) @[Bitwise.scala 103:65]
        node _T_172 = not(_T_167) @[Bitwise.scala 103:77]
        node _T_173 = and(_T_171, _T_172) @[Bitwise.scala 103:75]
        node _T_174 = or(_T_169, _T_173) @[Bitwise.scala 103:39]
        node _T_175 = bits(_T_167, 23, 0) @[Bitwise.scala 102:28]
        node _T_176 = shl(_T_175, 8) @[Bitwise.scala 102:47]
        node _T_177 = xor(_T_167, _T_176) @[Bitwise.scala 102:21]
        node _T_178 = shr(_T_174, 8) @[Bitwise.scala 103:21]
        node _T_179 = and(_T_178, _T_177) @[Bitwise.scala 103:31]
        node _T_180 = bits(_T_174, 23, 0) @[Bitwise.scala 103:46]
        node _T_181 = shl(_T_180, 8) @[Bitwise.scala 103:65]
        node _T_182 = not(_T_177) @[Bitwise.scala 103:77]
        node _T_183 = and(_T_181, _T_182) @[Bitwise.scala 103:75]
        node _T_184 = or(_T_179, _T_183) @[Bitwise.scala 103:39]
        node _T_185 = bits(_T_177, 27, 0) @[Bitwise.scala 102:28]
        node _T_186 = shl(_T_185, 4) @[Bitwise.scala 102:47]
        node _T_187 = xor(_T_177, _T_186) @[Bitwise.scala 102:21]
        node _T_188 = shr(_T_184, 4) @[Bitwise.scala 103:21]
        node _T_189 = and(_T_188, _T_187) @[Bitwise.scala 103:31]
        node _T_190 = bits(_T_184, 27, 0) @[Bitwise.scala 103:46]
        node _T_191 = shl(_T_190, 4) @[Bitwise.scala 103:65]
        node _T_192 = not(_T_187) @[Bitwise.scala 103:77]
        node _T_193 = and(_T_191, _T_192) @[Bitwise.scala 103:75]
        node _T_194 = or(_T_189, _T_193) @[Bitwise.scala 103:39]
        node _T_195 = bits(_T_187, 29, 0) @[Bitwise.scala 102:28]
        node _T_196 = shl(_T_195, 2) @[Bitwise.scala 102:47]
        node _T_197 = xor(_T_187, _T_196) @[Bitwise.scala 102:21]
        node _T_198 = shr(_T_194, 2) @[Bitwise.scala 103:21]
        node _T_199 = and(_T_198, _T_197) @[Bitwise.scala 103:31]
        node _T_200 = bits(_T_194, 29, 0) @[Bitwise.scala 103:46]
        node _T_201 = shl(_T_200, 2) @[Bitwise.scala 103:65]
        node _T_202 = not(_T_197) @[Bitwise.scala 103:77]
        node _T_203 = and(_T_201, _T_202) @[Bitwise.scala 103:75]
        node _T_204 = or(_T_199, _T_203) @[Bitwise.scala 103:39]
        node _T_205 = bits(_T_197, 30, 0) @[Bitwise.scala 102:28]
        node _T_206 = shl(_T_205, 1) @[Bitwise.scala 102:47]
        node _T_207 = xor(_T_197, _T_206) @[Bitwise.scala 102:21]
        node _T_208 = shr(_T_204, 1) @[Bitwise.scala 103:21]
        node _T_209 = and(_T_208, _T_207) @[Bitwise.scala 103:31]
        node _T_210 = bits(_T_204, 30, 0) @[Bitwise.scala 103:46]
        node _T_211 = shl(_T_210, 1) @[Bitwise.scala 103:65]
        node _T_212 = not(_T_207) @[Bitwise.scala 103:77]
        node _T_213 = and(_T_211, _T_212) @[Bitwise.scala 103:75]
        node _T_214 = or(_T_209, _T_213) @[Bitwise.scala 103:39]
        node _T_215 = bits(_T_214, 0, 0) @[OneHot.scala 39:40]
        node _T_216 = bits(_T_214, 1, 1) @[OneHot.scala 39:40]
        node _T_217 = bits(_T_214, 2, 2) @[OneHot.scala 39:40]
        node _T_218 = bits(_T_214, 3, 3) @[OneHot.scala 39:40]
        node _T_219 = bits(_T_214, 4, 4) @[OneHot.scala 39:40]
        node _T_220 = bits(_T_214, 5, 5) @[OneHot.scala 39:40]
        node _T_221 = bits(_T_214, 6, 6) @[OneHot.scala 39:40]
        node _T_222 = bits(_T_214, 7, 7) @[OneHot.scala 39:40]
        node _T_223 = bits(_T_214, 8, 8) @[OneHot.scala 39:40]
        node _T_224 = bits(_T_214, 9, 9) @[OneHot.scala 39:40]
        node _T_225 = bits(_T_214, 10, 10) @[OneHot.scala 39:40]
        node _T_226 = bits(_T_214, 11, 11) @[OneHot.scala 39:40]
        node _T_227 = bits(_T_214, 12, 12) @[OneHot.scala 39:40]
        node _T_228 = bits(_T_214, 13, 13) @[OneHot.scala 39:40]
        node _T_229 = bits(_T_214, 14, 14) @[OneHot.scala 39:40]
        node _T_230 = bits(_T_214, 15, 15) @[OneHot.scala 39:40]
        node _T_231 = bits(_T_214, 16, 16) @[OneHot.scala 39:40]
        node _T_232 = bits(_T_214, 17, 17) @[OneHot.scala 39:40]
        node _T_233 = bits(_T_214, 18, 18) @[OneHot.scala 39:40]
        node _T_234 = bits(_T_214, 19, 19) @[OneHot.scala 39:40]
        node _T_235 = bits(_T_214, 20, 20) @[OneHot.scala 39:40]
        node _T_236 = bits(_T_214, 21, 21) @[OneHot.scala 39:40]
        node _T_237 = bits(_T_214, 22, 22) @[OneHot.scala 39:40]
        node _T_238 = bits(_T_214, 23, 23) @[OneHot.scala 39:40]
        node _T_239 = bits(_T_214, 24, 24) @[OneHot.scala 39:40]
        node _T_240 = bits(_T_214, 25, 25) @[OneHot.scala 39:40]
        node _T_241 = bits(_T_214, 26, 26) @[OneHot.scala 39:40]
        node _T_242 = bits(_T_214, 27, 27) @[OneHot.scala 39:40]
        node _T_243 = bits(_T_214, 28, 28) @[OneHot.scala 39:40]
        node _T_244 = bits(_T_214, 29, 29) @[OneHot.scala 39:40]
        node _T_245 = bits(_T_214, 30, 30) @[OneHot.scala 39:40]
        node _T_246 = bits(_T_214, 31, 31) @[OneHot.scala 39:40]
        node _T_279 = mux(_T_245, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 31:69]
        node _T_280 = mux(_T_244, UInt<5>("h01d"), _T_279) @[Mux.scala 31:69]
        node _T_281 = mux(_T_243, UInt<5>("h01c"), _T_280) @[Mux.scala 31:69]
        node _T_282 = mux(_T_242, UInt<5>("h01b"), _T_281) @[Mux.scala 31:69]
        node _T_283 = mux(_T_241, UInt<5>("h01a"), _T_282) @[Mux.scala 31:69]
        node _T_284 = mux(_T_240, UInt<5>("h019"), _T_283) @[Mux.scala 31:69]
        node _T_285 = mux(_T_239, UInt<5>("h018"), _T_284) @[Mux.scala 31:69]
        node _T_286 = mux(_T_238, UInt<5>("h017"), _T_285) @[Mux.scala 31:69]
        node _T_287 = mux(_T_237, UInt<5>("h016"), _T_286) @[Mux.scala 31:69]
        node _T_288 = mux(_T_236, UInt<5>("h015"), _T_287) @[Mux.scala 31:69]
        node _T_289 = mux(_T_235, UInt<5>("h014"), _T_288) @[Mux.scala 31:69]
        node _T_290 = mux(_T_234, UInt<5>("h013"), _T_289) @[Mux.scala 31:69]
        node _T_291 = mux(_T_233, UInt<5>("h012"), _T_290) @[Mux.scala 31:69]
        node _T_292 = mux(_T_232, UInt<5>("h011"), _T_291) @[Mux.scala 31:69]
        node _T_293 = mux(_T_231, UInt<5>("h010"), _T_292) @[Mux.scala 31:69]
        node _T_294 = mux(_T_230, UInt<4>("h0f"), _T_293) @[Mux.scala 31:69]
        node _T_295 = mux(_T_229, UInt<4>("h0e"), _T_294) @[Mux.scala 31:69]
        node _T_296 = mux(_T_228, UInt<4>("h0d"), _T_295) @[Mux.scala 31:69]
        node _T_297 = mux(_T_227, UInt<4>("h0c"), _T_296) @[Mux.scala 31:69]
        node _T_298 = mux(_T_226, UInt<4>("h0b"), _T_297) @[Mux.scala 31:69]
        node _T_299 = mux(_T_225, UInt<4>("h0a"), _T_298) @[Mux.scala 31:69]
        node _T_300 = mux(_T_224, UInt<4>("h09"), _T_299) @[Mux.scala 31:69]
        node _T_301 = mux(_T_223, UInt<4>("h08"), _T_300) @[Mux.scala 31:69]
        node _T_302 = mux(_T_222, UInt<3>("h07"), _T_301) @[Mux.scala 31:69]
        node _T_303 = mux(_T_221, UInt<3>("h06"), _T_302) @[Mux.scala 31:69]
        node _T_304 = mux(_T_220, UInt<3>("h05"), _T_303) @[Mux.scala 31:69]
        node _T_305 = mux(_T_219, UInt<3>("h04"), _T_304) @[Mux.scala 31:69]
        node _T_306 = mux(_T_218, UInt<2>("h03"), _T_305) @[Mux.scala 31:69]
        node _T_307 = mux(_T_217, UInt<2>("h02"), _T_306) @[Mux.scala 31:69]
        node _T_308 = mux(_T_216, UInt<1>("h01"), _T_307) @[Mux.scala 31:69]
        node _T_309 = mux(_T_215, UInt<1>("h00"), _T_308) @[Mux.scala 31:69]
        result_unsigned <= _T_309 @[Arithmetic_Logic_Unit.scala 133:25]
        skip @[Arithmetic_Logic_Unit.scala 132:18]
      skip @[Arithmetic_Logic_Unit.scala 129:65]
    node _T_311 = eq(op, UInt<6>("h026")) @[Arithmetic_Logic_Unit.scala 136:49]
    when _T_311 : @[Arithmetic_Logic_Unit.scala 136:65]
      node _T_313 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 137:30]
      when _T_313 : @[Arithmetic_Logic_Unit.scala 137:39]
        result_unsigned <= UInt<6>("h020") @[Arithmetic_Logic_Unit.scala 138:25]
        skip @[Arithmetic_Logic_Unit.scala 137:39]
      else : @[Arithmetic_Logic_Unit.scala 139:18]
        node _T_315 = bits(operand0_unsigned, 0, 0) @[OneHot.scala 39:40]
        node _T_316 = bits(operand0_unsigned, 1, 1) @[OneHot.scala 39:40]
        node _T_317 = bits(operand0_unsigned, 2, 2) @[OneHot.scala 39:40]
        node _T_318 = bits(operand0_unsigned, 3, 3) @[OneHot.scala 39:40]
        node _T_319 = bits(operand0_unsigned, 4, 4) @[OneHot.scala 39:40]
        node _T_320 = bits(operand0_unsigned, 5, 5) @[OneHot.scala 39:40]
        node _T_321 = bits(operand0_unsigned, 6, 6) @[OneHot.scala 39:40]
        node _T_322 = bits(operand0_unsigned, 7, 7) @[OneHot.scala 39:40]
        node _T_323 = bits(operand0_unsigned, 8, 8) @[OneHot.scala 39:40]
        node _T_324 = bits(operand0_unsigned, 9, 9) @[OneHot.scala 39:40]
        node _T_325 = bits(operand0_unsigned, 10, 10) @[OneHot.scala 39:40]
        node _T_326 = bits(operand0_unsigned, 11, 11) @[OneHot.scala 39:40]
        node _T_327 = bits(operand0_unsigned, 12, 12) @[OneHot.scala 39:40]
        node _T_328 = bits(operand0_unsigned, 13, 13) @[OneHot.scala 39:40]
        node _T_329 = bits(operand0_unsigned, 14, 14) @[OneHot.scala 39:40]
        node _T_330 = bits(operand0_unsigned, 15, 15) @[OneHot.scala 39:40]
        node _T_331 = bits(operand0_unsigned, 16, 16) @[OneHot.scala 39:40]
        node _T_332 = bits(operand0_unsigned, 17, 17) @[OneHot.scala 39:40]
        node _T_333 = bits(operand0_unsigned, 18, 18) @[OneHot.scala 39:40]
        node _T_334 = bits(operand0_unsigned, 19, 19) @[OneHot.scala 39:40]
        node _T_335 = bits(operand0_unsigned, 20, 20) @[OneHot.scala 39:40]
        node _T_336 = bits(operand0_unsigned, 21, 21) @[OneHot.scala 39:40]
        node _T_337 = bits(operand0_unsigned, 22, 22) @[OneHot.scala 39:40]
        node _T_338 = bits(operand0_unsigned, 23, 23) @[OneHot.scala 39:40]
        node _T_339 = bits(operand0_unsigned, 24, 24) @[OneHot.scala 39:40]
        node _T_340 = bits(operand0_unsigned, 25, 25) @[OneHot.scala 39:40]
        node _T_341 = bits(operand0_unsigned, 26, 26) @[OneHot.scala 39:40]
        node _T_342 = bits(operand0_unsigned, 27, 27) @[OneHot.scala 39:40]
        node _T_343 = bits(operand0_unsigned, 28, 28) @[OneHot.scala 39:40]
        node _T_344 = bits(operand0_unsigned, 29, 29) @[OneHot.scala 39:40]
        node _T_345 = bits(operand0_unsigned, 30, 30) @[OneHot.scala 39:40]
        node _T_346 = bits(operand0_unsigned, 31, 31) @[OneHot.scala 39:40]
        node _T_379 = mux(_T_345, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 31:69]
        node _T_380 = mux(_T_344, UInt<5>("h01d"), _T_379) @[Mux.scala 31:69]
        node _T_381 = mux(_T_343, UInt<5>("h01c"), _T_380) @[Mux.scala 31:69]
        node _T_382 = mux(_T_342, UInt<5>("h01b"), _T_381) @[Mux.scala 31:69]
        node _T_383 = mux(_T_341, UInt<5>("h01a"), _T_382) @[Mux.scala 31:69]
        node _T_384 = mux(_T_340, UInt<5>("h019"), _T_383) @[Mux.scala 31:69]
        node _T_385 = mux(_T_339, UInt<5>("h018"), _T_384) @[Mux.scala 31:69]
        node _T_386 = mux(_T_338, UInt<5>("h017"), _T_385) @[Mux.scala 31:69]
        node _T_387 = mux(_T_337, UInt<5>("h016"), _T_386) @[Mux.scala 31:69]
        node _T_388 = mux(_T_336, UInt<5>("h015"), _T_387) @[Mux.scala 31:69]
        node _T_389 = mux(_T_335, UInt<5>("h014"), _T_388) @[Mux.scala 31:69]
        node _T_390 = mux(_T_334, UInt<5>("h013"), _T_389) @[Mux.scala 31:69]
        node _T_391 = mux(_T_333, UInt<5>("h012"), _T_390) @[Mux.scala 31:69]
        node _T_392 = mux(_T_332, UInt<5>("h011"), _T_391) @[Mux.scala 31:69]
        node _T_393 = mux(_T_331, UInt<5>("h010"), _T_392) @[Mux.scala 31:69]
        node _T_394 = mux(_T_330, UInt<4>("h0f"), _T_393) @[Mux.scala 31:69]
        node _T_395 = mux(_T_329, UInt<4>("h0e"), _T_394) @[Mux.scala 31:69]
        node _T_396 = mux(_T_328, UInt<4>("h0d"), _T_395) @[Mux.scala 31:69]
        node _T_397 = mux(_T_327, UInt<4>("h0c"), _T_396) @[Mux.scala 31:69]
        node _T_398 = mux(_T_326, UInt<4>("h0b"), _T_397) @[Mux.scala 31:69]
        node _T_399 = mux(_T_325, UInt<4>("h0a"), _T_398) @[Mux.scala 31:69]
        node _T_400 = mux(_T_324, UInt<4>("h09"), _T_399) @[Mux.scala 31:69]
        node _T_401 = mux(_T_323, UInt<4>("h08"), _T_400) @[Mux.scala 31:69]
        node _T_402 = mux(_T_322, UInt<3>("h07"), _T_401) @[Mux.scala 31:69]
        node _T_403 = mux(_T_321, UInt<3>("h06"), _T_402) @[Mux.scala 31:69]
        node _T_404 = mux(_T_320, UInt<3>("h05"), _T_403) @[Mux.scala 31:69]
        node _T_405 = mux(_T_319, UInt<3>("h04"), _T_404) @[Mux.scala 31:69]
        node _T_406 = mux(_T_318, UInt<2>("h03"), _T_405) @[Mux.scala 31:69]
        node _T_407 = mux(_T_317, UInt<2>("h02"), _T_406) @[Mux.scala 31:69]
        node _T_408 = mux(_T_316, UInt<1>("h01"), _T_407) @[Mux.scala 31:69]
        node _T_409 = mux(_T_315, UInt<1>("h00"), _T_408) @[Mux.scala 31:69]
        result_unsigned <= _T_409 @[Arithmetic_Logic_Unit.scala 140:25]
        skip @[Arithmetic_Logic_Unit.scala 139:18]
      skip @[Arithmetic_Logic_Unit.scala 136:65]
    node _T_411 = eq(op, UInt<6>("h027")) @[Arithmetic_Logic_Unit.scala 143:50]
    when _T_411 : @[Arithmetic_Logic_Unit.scala 143:67]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 144:23]
      skip @[Arithmetic_Logic_Unit.scala 143:67]
    wire fpResult : UInt<32> @[Arithmetic_Logic_Unit.scala 149:22]
    fpResult <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 150:12]
    wire _T_449 : UInt<6>[31] @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[0] <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[1] <= UInt<1>("h01") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[2] <= UInt<2>("h02") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[3] <= UInt<2>("h03") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[4] <= UInt<3>("h04") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[5] <= UInt<3>("h06") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[6] <= UInt<3>("h07") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[7] <= UInt<4>("h08") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[8] <= UInt<4>("h0a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[9] <= UInt<4>("h0c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[10] <= UInt<4>("h0e") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[11] <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[12] <= UInt<5>("h011") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[13] <= UInt<5>("h012") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[14] <= UInt<5>("h013") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[15] <= UInt<5>("h014") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[16] <= UInt<5>("h015") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[17] <= UInt<5>("h016") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[18] <= UInt<5>("h017") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[19] <= UInt<5>("h018") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[20] <= UInt<5>("h019") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[21] <= UInt<5>("h01a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[22] <= UInt<5>("h01b") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[23] <= UInt<5>("h01c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[24] <= UInt<6>("h021") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[25] <= UInt<6>("h022") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[26] <= UInt<6>("h023") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[27] <= UInt<6>("h024") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[28] <= UInt<6>("h025") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[29] <= UInt<6>("h026") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_449[30] <= UInt<6>("h027") @[Arithmetic_Logic_Unit.scala 171:15]
    node _T_483 = eq(_T_449[0], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_484 = eq(_T_449[1], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_485 = eq(_T_449[2], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_486 = eq(_T_449[3], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_487 = eq(_T_449[4], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_488 = eq(_T_449[5], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_489 = eq(_T_449[6], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_490 = eq(_T_449[7], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_491 = eq(_T_449[8], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_492 = eq(_T_449[9], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_493 = eq(_T_449[10], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_494 = eq(_T_449[11], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_495 = eq(_T_449[12], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_496 = eq(_T_449[13], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_497 = eq(_T_449[14], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_498 = eq(_T_449[15], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_499 = eq(_T_449[16], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_500 = eq(_T_449[17], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_501 = eq(_T_449[18], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_502 = eq(_T_449[19], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_503 = eq(_T_449[20], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_504 = eq(_T_449[21], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_505 = eq(_T_449[22], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_506 = eq(_T_449[23], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_507 = eq(_T_449[24], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_508 = eq(_T_449[25], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_509 = eq(_T_449[26], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_510 = eq(_T_449[27], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_511 = eq(_T_449[28], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_512 = eq(_T_449[29], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_513 = eq(_T_449[30], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_515 = or(UInt<1>("h00"), _T_483) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_516 = or(_T_515, _T_484) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_517 = or(_T_516, _T_485) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_518 = or(_T_517, _T_486) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_519 = or(_T_518, _T_487) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_520 = or(_T_519, _T_488) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_521 = or(_T_520, _T_489) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_522 = or(_T_521, _T_490) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_523 = or(_T_522, _T_491) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_524 = or(_T_523, _T_492) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_525 = or(_T_524, _T_493) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_526 = or(_T_525, _T_494) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_527 = or(_T_526, _T_495) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_528 = or(_T_527, _T_496) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_529 = or(_T_528, _T_497) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_530 = or(_T_529, _T_498) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_531 = or(_T_530, _T_499) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_532 = or(_T_531, _T_500) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_533 = or(_T_532, _T_501) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_534 = or(_T_533, _T_502) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_535 = or(_T_534, _T_503) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_536 = or(_T_535, _T_504) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_537 = or(_T_536, _T_505) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_538 = or(_T_537, _T_506) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_539 = or(_T_538, _T_507) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_540 = or(_T_539, _T_508) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_541 = or(_T_540, _T_509) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_542 = or(_T_541, _T_510) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_543 = or(_T_542, _T_511) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_544 = or(_T_543, _T_512) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_545 = or(_T_544, _T_513) @[Arithmetic_Logic_Unit.scala 171:55]
    when _T_545 : @[Arithmetic_Logic_Unit.scala 171:66]
      io.2 <= result_unsigned @[Arithmetic_Logic_Unit.scala 172:22]
      skip @[Arithmetic_Logic_Unit.scala 171:66]
    else : @[Arithmetic_Logic_Unit.scala 173:74]
      wire _T_554 : UInt<4>[5] @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[0] <= UInt<3>("h05") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[1] <= UInt<4>("h09") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[2] <= UInt<4>("h0b") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[3] <= UInt<4>("h0d") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_554[4] <= UInt<4>("h0f") @[Arithmetic_Logic_Unit.scala 173:24]
      node _T_562 = eq(_T_554[0], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_563 = eq(_T_554[1], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_564 = eq(_T_554[2], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_565 = eq(_T_554[3], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_566 = eq(_T_554[4], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_568 = or(UInt<1>("h00"), _T_562) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_569 = or(_T_568, _T_563) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_570 = or(_T_569, _T_564) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_571 = or(_T_570, _T_565) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_572 = or(_T_571, _T_566) @[Arithmetic_Logic_Unit.scala 173:62]
      when _T_572 : @[Arithmetic_Logic_Unit.scala 173:74]
        node _T_573 = asUInt(result_signed) @[Arithmetic_Logic_Unit.scala 174:45]
        io.2 <= _T_573 @[Arithmetic_Logic_Unit.scala 174:22]
        skip @[Arithmetic_Logic_Unit.scala 173:74]
      else : @[Arithmetic_Logic_Unit.scala 175:70]
        wire _T_590 : UInt<6>[13] @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[0] <= UInt<6>("h031") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[1] <= UInt<6>("h032") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[2] <= UInt<6>("h033") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[3] <= UInt<6>("h035") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[4] <= UInt<6>("h036") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[5] <= UInt<6>("h037") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[6] <= UInt<6>("h038") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[7] <= UInt<6>("h039") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[8] <= UInt<6>("h03a") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[9] <= UInt<6>("h03b") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[10] <= UInt<6>("h03c") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[11] <= UInt<6>("h03d") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_590[12] <= UInt<6>("h03e") @[Arithmetic_Logic_Unit.scala 175:22]
        node _T_606 = eq(_T_590[0], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_607 = eq(_T_590[1], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_608 = eq(_T_590[2], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_609 = eq(_T_590[3], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_610 = eq(_T_590[4], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_611 = eq(_T_590[5], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_612 = eq(_T_590[6], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_613 = eq(_T_590[7], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_614 = eq(_T_590[8], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_615 = eq(_T_590[9], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_616 = eq(_T_590[10], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_617 = eq(_T_590[11], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_618 = eq(_T_590[12], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_620 = or(UInt<1>("h00"), _T_606) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_621 = or(_T_620, _T_607) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_622 = or(_T_621, _T_608) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_623 = or(_T_622, _T_609) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_624 = or(_T_623, _T_610) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_625 = or(_T_624, _T_611) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_626 = or(_T_625, _T_612) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_627 = or(_T_626, _T_613) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_628 = or(_T_627, _T_614) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_629 = or(_T_628, _T_615) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_630 = or(_T_629, _T_616) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_631 = or(_T_630, _T_617) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_632 = or(_T_631, _T_618) @[Arithmetic_Logic_Unit.scala 175:59]
        when _T_632 : @[Arithmetic_Logic_Unit.scala 175:70]
          io.2 <= fpResult @[Arithmetic_Logic_Unit.scala 176:22]
          skip @[Arithmetic_Logic_Unit.scala 175:70]
        else : @[Arithmetic_Logic_Unit.scala 177:16]
          io.2 <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 178:22]
          skip @[Arithmetic_Logic_Unit.scala 177:16]
    node _T_634 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_636 = eq(_T_634, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 181:9]
    when _T_636 : @[Arithmetic_Logic_Unit.scala 181:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", op) @[Arithmetic_Logic_Unit.scala 181:9]
      skip @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_637 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_639 = eq(_T_637, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 182:9]
    when _T_639 : @[Arithmetic_Logic_Unit.scala 182:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.0) @[Arithmetic_Logic_Unit.scala 182:9]
      skip @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_640 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_642 = eq(_T_640, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 183:9]
    when _T_642 : @[Arithmetic_Logic_Unit.scala 183:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.1) @[Arithmetic_Logic_Unit.scala 183:9]
      skip @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_643 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_645 = eq(_T_643, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 184:9]
    when _T_645 : @[Arithmetic_Logic_Unit.scala 184:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.2) @[Arithmetic_Logic_Unit.scala 184:9]
      skip @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_646 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 185:9]
    node _T_648 = eq(_T_646, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 185:9]
    when _T_648 : @[Arithmetic_Logic_Unit.scala 185:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[Arithmetic_Logic_Unit.scala 185:9]
      skip @[Arithmetic_Logic_Unit.scala 185:9]
    
  module Delay_Pipe_Hw_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<3>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_29 : UInt<16>[6] @[Delay_Pipe.scala 50:29]
    _T_29[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[3] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[4] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[5] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[6], clock with : (reset => (reset, _T_29)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_83 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_84 = tail(_T_83, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_84 @[Delay_Pipe.scala 55:8]
    node _T_86 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_87 = tail(_T_86, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_87 @[Delay_Pipe.scala 56:8]
    node _T_88 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_88 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[3] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[4] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[5] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Arithmetic_Logic_Unit_Hw_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<5>, flip 3 : UInt<16>, 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire op : UInt<5> @[Arithmetic_Logic_Unit.scala 52:21]
    op <= io.4 @[Arithmetic_Logic_Unit.scala 53:6]
    wire operand0_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 56:29]
    wire operand1_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 57:29]
    wire operand2_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 58:29]
    wire operand0_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 60:31]
    wire operand1_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 61:31]
    wire operand2_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 62:31]
    wire result_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 64:27]
    wire result_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 65:29]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 66:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 66:40]
    operand0_unsigned <= io.0 @[Arithmetic_Logic_Unit.scala 69:21]
    operand1_unsigned <= io.1 @[Arithmetic_Logic_Unit.scala 70:21]
    operand2_unsigned <= io.3 @[Arithmetic_Logic_Unit.scala 71:55]
    node _T_31 = asSInt(io.0) @[Arithmetic_Logic_Unit.scala 72:58]
    operand0_signed <= _T_31 @[Arithmetic_Logic_Unit.scala 72:19]
    node _T_32 = asSInt(io.1) @[Arithmetic_Logic_Unit.scala 73:56]
    operand1_signed <= _T_32 @[Arithmetic_Logic_Unit.scala 73:19]
    node _T_33 = asSInt(io.3) @[Arithmetic_Logic_Unit.scala 74:84]
    operand2_signed <= _T_33 @[Arithmetic_Logic_Unit.scala 74:53]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 77:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 78:19]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 91:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 92:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 93:58]
    node _T_40 = eq(op, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 95:49]
    when _T_40 : @[Arithmetic_Logic_Unit.scala 95:65]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 95:82]
      skip @[Arithmetic_Logic_Unit.scala 95:65]
    node _T_43 = eq(op, UInt<1>("h01")) @[Arithmetic_Logic_Unit.scala 96:49]
    when _T_43 : @[Arithmetic_Logic_Unit.scala 96:65]
      result_unsigned <= operand0_unsigned @[Arithmetic_Logic_Unit.scala 96:82]
      skip @[Arithmetic_Logic_Unit.scala 96:65]
    node _T_45 = eq(op, UInt<2>("h02")) @[Arithmetic_Logic_Unit.scala 97:49]
    when _T_45 : @[Arithmetic_Logic_Unit.scala 97:65]
      node _T_46 = add(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 97:103]
      node _T_47 = tail(_T_46, 1) @[Arithmetic_Logic_Unit.scala 97:103]
      result_unsigned <= _T_47 @[Arithmetic_Logic_Unit.scala 97:82]
      skip @[Arithmetic_Logic_Unit.scala 97:65]
    node _T_49 = eq(op, UInt<2>("h03")) @[Arithmetic_Logic_Unit.scala 98:49]
    when _T_49 : @[Arithmetic_Logic_Unit.scala 98:65]
      node _T_50 = sub(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_51 = asUInt(_T_50) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_52 = tail(_T_51, 1) @[Arithmetic_Logic_Unit.scala 98:103]
      result_unsigned <= _T_52 @[Arithmetic_Logic_Unit.scala 98:82]
      skip @[Arithmetic_Logic_Unit.scala 98:65]
    node _T_54 = eq(op, UInt<3>("h04")) @[Arithmetic_Logic_Unit.scala 99:49]
    when _T_54 : @[Arithmetic_Logic_Unit.scala 99:65]
      node _T_55 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 99:123]
      node _T_56 = dshl(operand0_unsigned, _T_55) @[Arithmetic_Logic_Unit.scala 99:103]
      result_unsigned <= _T_56 @[Arithmetic_Logic_Unit.scala 99:82]
      skip @[Arithmetic_Logic_Unit.scala 99:65]
    node _T_58 = eq(op, UInt<3>("h06")) @[Arithmetic_Logic_Unit.scala 100:49]
    when _T_58 : @[Arithmetic_Logic_Unit.scala 100:65]
      node _T_59 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 100:103]
      result_unsigned <= _T_59 @[Arithmetic_Logic_Unit.scala 100:82]
      skip @[Arithmetic_Logic_Unit.scala 100:65]
    node _T_61 = eq(op, UInt<3>("h07")) @[Arithmetic_Logic_Unit.scala 101:48]
    when _T_61 : @[Arithmetic_Logic_Unit.scala 101:63]
      node _T_62 = eq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 101:101]
      result_unsigned <= _T_62 @[Arithmetic_Logic_Unit.scala 101:80]
      skip @[Arithmetic_Logic_Unit.scala 101:63]
    node _T_64 = eq(op, UInt<4>("h08")) @[Arithmetic_Logic_Unit.scala 102:48]
    when _T_64 : @[Arithmetic_Logic_Unit.scala 102:63]
      node _T_65 = neq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 102:101]
      result_unsigned <= _T_65 @[Arithmetic_Logic_Unit.scala 102:80]
      skip @[Arithmetic_Logic_Unit.scala 102:63]
    node _T_67 = eq(op, UInt<4>("h0a")) @[Arithmetic_Logic_Unit.scala 103:49]
    when _T_67 : @[Arithmetic_Logic_Unit.scala 103:65]
      node _T_68 = gt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 103:103]
      result_unsigned <= _T_68 @[Arithmetic_Logic_Unit.scala 103:82]
      skip @[Arithmetic_Logic_Unit.scala 103:65]
    node _T_70 = eq(op, UInt<4>("h0c")) @[Arithmetic_Logic_Unit.scala 104:49]
    when _T_70 : @[Arithmetic_Logic_Unit.scala 104:66]
      node _T_71 = lt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 104:104]
      result_unsigned <= _T_71 @[Arithmetic_Logic_Unit.scala 104:83]
      skip @[Arithmetic_Logic_Unit.scala 104:66]
    node _T_73 = eq(op, UInt<4>("h0e")) @[Arithmetic_Logic_Unit.scala 105:49]
    when _T_73 : @[Arithmetic_Logic_Unit.scala 105:65]
      node _T_74 = geq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 105:103]
      result_unsigned <= _T_74 @[Arithmetic_Logic_Unit.scala 105:82]
      skip @[Arithmetic_Logic_Unit.scala 105:65]
    node _T_76 = eq(op, UInt<5>("h010")) @[Arithmetic_Logic_Unit.scala 106:49]
    when _T_76 : @[Arithmetic_Logic_Unit.scala 106:65]
      node _T_77 = leq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 106:103]
      result_unsigned <= _T_77 @[Arithmetic_Logic_Unit.scala 106:82]
      skip @[Arithmetic_Logic_Unit.scala 106:65]
    node _T_79 = eq(op, UInt<5>("h011")) @[Arithmetic_Logic_Unit.scala 107:50]
    when _T_79 : @[Arithmetic_Logic_Unit.scala 107:67]
      node _T_80 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 107:105]
      result_unsigned <= _T_80 @[Arithmetic_Logic_Unit.scala 107:84]
      skip @[Arithmetic_Logic_Unit.scala 107:67]
    node _T_82 = eq(op, UInt<5>("h012")) @[Arithmetic_Logic_Unit.scala 108:51]
    when _T_82 : @[Arithmetic_Logic_Unit.scala 108:69]
      node _T_83 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 108:109]
      node _T_84 = not(_T_83) @[Arithmetic_Logic_Unit.scala 108:89]
      result_unsigned <= _T_84 @[Arithmetic_Logic_Unit.scala 108:86]
      skip @[Arithmetic_Logic_Unit.scala 108:69]
    node _T_86 = eq(op, UInt<5>("h013")) @[Arithmetic_Logic_Unit.scala 109:49]
    when _T_86 : @[Arithmetic_Logic_Unit.scala 109:65]
      node _T_87 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 109:103]
      result_unsigned <= _T_87 @[Arithmetic_Logic_Unit.scala 109:82]
      skip @[Arithmetic_Logic_Unit.scala 109:65]
    node _T_89 = eq(op, UInt<5>("h014")) @[Arithmetic_Logic_Unit.scala 110:50]
    when _T_89 : @[Arithmetic_Logic_Unit.scala 110:67]
      node _T_90 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 110:107]
      node _T_91 = not(_T_90) @[Arithmetic_Logic_Unit.scala 110:87]
      result_unsigned <= _T_91 @[Arithmetic_Logic_Unit.scala 110:84]
      skip @[Arithmetic_Logic_Unit.scala 110:67]
    node _T_93 = eq(op, UInt<5>("h015")) @[Arithmetic_Logic_Unit.scala 111:50]
    when _T_93 : @[Arithmetic_Logic_Unit.scala 111:67]
      node _T_94 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 111:105]
      result_unsigned <= _T_94 @[Arithmetic_Logic_Unit.scala 111:84]
      skip @[Arithmetic_Logic_Unit.scala 111:67]
    node _T_96 = eq(op, UInt<5>("h016")) @[Arithmetic_Logic_Unit.scala 112:51]
    when _T_96 : @[Arithmetic_Logic_Unit.scala 112:69]
      node _T_97 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 112:109]
      node _T_98 = not(_T_97) @[Arithmetic_Logic_Unit.scala 112:89]
      result_unsigned <= _T_98 @[Arithmetic_Logic_Unit.scala 112:86]
      skip @[Arithmetic_Logic_Unit.scala 112:69]
    node _T_100 = eq(op, UInt<5>("h017")) @[Arithmetic_Logic_Unit.scala 113:50]
    when _T_100 : @[Arithmetic_Logic_Unit.scala 113:67]
      node _T_101 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 113:113]
      result_unsigned <= _T_101 @[Arithmetic_Logic_Unit.scala 113:84]
      skip @[Arithmetic_Logic_Unit.scala 113:67]
    node _T_103 = eq(op, UInt<5>("h018")) @[Arithmetic_Logic_Unit.scala 114:51]
    when _T_103 : @[Arithmetic_Logic_Unit.scala 114:69]
      node _T_104 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 114:117]
      node _T_106 = eq(_T_104, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 114:89]
      result_unsigned <= _T_106 @[Arithmetic_Logic_Unit.scala 114:86]
      skip @[Arithmetic_Logic_Unit.scala 114:69]
    node _T_108 = eq(op, UInt<5>("h019")) @[Arithmetic_Logic_Unit.scala 115:49]
    when _T_108 : @[Arithmetic_Logic_Unit.scala 115:65]
      node _T_109 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 115:111]
      result_unsigned <= _T_109 @[Arithmetic_Logic_Unit.scala 115:82]
      skip @[Arithmetic_Logic_Unit.scala 115:65]
    node _T_111 = eq(op, UInt<5>("h01a")) @[Arithmetic_Logic_Unit.scala 116:50]
    when _T_111 : @[Arithmetic_Logic_Unit.scala 116:67]
      node _T_112 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 116:115]
      node _T_114 = eq(_T_112, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 116:87]
      result_unsigned <= _T_114 @[Arithmetic_Logic_Unit.scala 116:84]
      skip @[Arithmetic_Logic_Unit.scala 116:67]
    node _T_116 = eq(op, UInt<5>("h01b")) @[Arithmetic_Logic_Unit.scala 117:50]
    when _T_116 : @[Arithmetic_Logic_Unit.scala 117:67]
      node _T_118 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:87]
      node _T_120 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:116]
      node _T_121 = xor(_T_118, _T_120) @[Arithmetic_Logic_Unit.scala 117:114]
      result_unsigned <= _T_121 @[Arithmetic_Logic_Unit.scala 117:84]
      skip @[Arithmetic_Logic_Unit.scala 117:67]
    node _T_123 = eq(op, UInt<5>("h01c")) @[Arithmetic_Logic_Unit.scala 118:51]
    when _T_123 : @[Arithmetic_Logic_Unit.scala 118:69]
      node _T_125 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:91]
      node _T_127 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:120]
      node _T_128 = xor(_T_125, _T_127) @[Arithmetic_Logic_Unit.scala 118:118]
      node _T_130 = eq(_T_128, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:89]
      result_unsigned <= _T_130 @[Arithmetic_Logic_Unit.scala 118:86]
      skip @[Arithmetic_Logic_Unit.scala 118:69]
    node _T_132 = eq(op, UInt<6>("h021")) @[Arithmetic_Logic_Unit.scala 119:48]
    when _T_132 : @[Arithmetic_Logic_Unit.scala 119:63]
      node _T_133 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 119:100]
      node _T_134 = bits(_T_133, 0, 0) @[Arithmetic_Logic_Unit.scala 119:100]
      result_unsigned <= _T_134 @[Arithmetic_Logic_Unit.scala 119:80]
      skip @[Arithmetic_Logic_Unit.scala 119:63]
    node _T_136 = eq(op, UInt<6>("h022")) @[Arithmetic_Logic_Unit.scala 120:48]
    when _T_136 : @[Arithmetic_Logic_Unit.scala 120:63]
      when logical_operand2_unsigned : @[Arithmetic_Logic_Unit.scala 121:38]
        node _T_138 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 122:73]
        node _T_139 = dshl(UInt<1>("h01"), _T_138) @[Arithmetic_Logic_Unit.scala 122:53]
        node _T_140 = or(operand0_unsigned, _T_139) @[Arithmetic_Logic_Unit.scala 122:46]
        result_unsigned <= _T_140 @[Arithmetic_Logic_Unit.scala 122:25]
        skip @[Arithmetic_Logic_Unit.scala 121:38]
      else : @[Arithmetic_Logic_Unit.scala 123:19]
        node _T_142 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 124:75]
        node _T_143 = dshl(UInt<1>("h01"), _T_142) @[Arithmetic_Logic_Unit.scala 124:55]
        node _T_144 = not(_T_143) @[Arithmetic_Logic_Unit.scala 124:49]
        node _T_145 = and(operand0_unsigned, _T_144) @[Arithmetic_Logic_Unit.scala 124:46]
        result_unsigned <= _T_145 @[Arithmetic_Logic_Unit.scala 124:25]
        skip @[Arithmetic_Logic_Unit.scala 123:19]
      skip @[Arithmetic_Logic_Unit.scala 120:63]
    node _T_147 = eq(op, UInt<6>("h023")) @[Arithmetic_Logic_Unit.scala 127:48]
    when _T_147 : @[Arithmetic_Logic_Unit.scala 127:63]
      node _T_149 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 127:130]
      node _T_150 = dshl(UInt<1>("h01"), _T_149) @[Arithmetic_Logic_Unit.scala 127:110]
      node _T_151 = not(_T_150) @[Arithmetic_Logic_Unit.scala 127:104]
      node _T_152 = and(operand0_unsigned, _T_151) @[Arithmetic_Logic_Unit.scala 127:101]
      result_unsigned <= _T_152 @[Arithmetic_Logic_Unit.scala 127:80]
      skip @[Arithmetic_Logic_Unit.scala 127:63]
    node _T_154 = eq(op, UInt<6>("h024")) @[Arithmetic_Logic_Unit.scala 128:48]
    when _T_154 : @[Arithmetic_Logic_Unit.scala 128:63]
      node _T_156 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 128:128]
      node _T_157 = dshl(UInt<1>("h01"), _T_156) @[Arithmetic_Logic_Unit.scala 128:108]
      node _T_158 = or(operand0_unsigned, _T_157) @[Arithmetic_Logic_Unit.scala 128:101]
      result_unsigned <= _T_158 @[Arithmetic_Logic_Unit.scala 128:80]
      skip @[Arithmetic_Logic_Unit.scala 128:63]
    node _T_160 = eq(op, UInt<6>("h025")) @[Arithmetic_Logic_Unit.scala 129:49]
    when _T_160 : @[Arithmetic_Logic_Unit.scala 129:65]
      node _T_162 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 130:30]
      when _T_162 : @[Arithmetic_Logic_Unit.scala 130:38]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 131:25]
        skip @[Arithmetic_Logic_Unit.scala 130:38]
      else : @[Arithmetic_Logic_Unit.scala 132:18]
        node _T_166 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
        node _T_167 = xor(UInt<16>("h0ffff"), _T_166) @[Bitwise.scala 102:21]
        node _T_168 = shr(operand0_unsigned, 8) @[Bitwise.scala 103:21]
        node _T_169 = and(_T_168, _T_167) @[Bitwise.scala 103:31]
        node _T_170 = bits(operand0_unsigned, 7, 0) @[Bitwise.scala 103:46]
        node _T_171 = shl(_T_170, 8) @[Bitwise.scala 103:65]
        node _T_172 = not(_T_167) @[Bitwise.scala 103:77]
        node _T_173 = and(_T_171, _T_172) @[Bitwise.scala 103:75]
        node _T_174 = or(_T_169, _T_173) @[Bitwise.scala 103:39]
        node _T_175 = bits(_T_167, 11, 0) @[Bitwise.scala 102:28]
        node _T_176 = shl(_T_175, 4) @[Bitwise.scala 102:47]
        node _T_177 = xor(_T_167, _T_176) @[Bitwise.scala 102:21]
        node _T_178 = shr(_T_174, 4) @[Bitwise.scala 103:21]
        node _T_179 = and(_T_178, _T_177) @[Bitwise.scala 103:31]
        node _T_180 = bits(_T_174, 11, 0) @[Bitwise.scala 103:46]
        node _T_181 = shl(_T_180, 4) @[Bitwise.scala 103:65]
        node _T_182 = not(_T_177) @[Bitwise.scala 103:77]
        node _T_183 = and(_T_181, _T_182) @[Bitwise.scala 103:75]
        node _T_184 = or(_T_179, _T_183) @[Bitwise.scala 103:39]
        node _T_185 = bits(_T_177, 13, 0) @[Bitwise.scala 102:28]
        node _T_186 = shl(_T_185, 2) @[Bitwise.scala 102:47]
        node _T_187 = xor(_T_177, _T_186) @[Bitwise.scala 102:21]
        node _T_188 = shr(_T_184, 2) @[Bitwise.scala 103:21]
        node _T_189 = and(_T_188, _T_187) @[Bitwise.scala 103:31]
        node _T_190 = bits(_T_184, 13, 0) @[Bitwise.scala 103:46]
        node _T_191 = shl(_T_190, 2) @[Bitwise.scala 103:65]
        node _T_192 = not(_T_187) @[Bitwise.scala 103:77]
        node _T_193 = and(_T_191, _T_192) @[Bitwise.scala 103:75]
        node _T_194 = or(_T_189, _T_193) @[Bitwise.scala 103:39]
        node _T_195 = bits(_T_187, 14, 0) @[Bitwise.scala 102:28]
        node _T_196 = shl(_T_195, 1) @[Bitwise.scala 102:47]
        node _T_197 = xor(_T_187, _T_196) @[Bitwise.scala 102:21]
        node _T_198 = shr(_T_194, 1) @[Bitwise.scala 103:21]
        node _T_199 = and(_T_198, _T_197) @[Bitwise.scala 103:31]
        node _T_200 = bits(_T_194, 14, 0) @[Bitwise.scala 103:46]
        node _T_201 = shl(_T_200, 1) @[Bitwise.scala 103:65]
        node _T_202 = not(_T_197) @[Bitwise.scala 103:77]
        node _T_203 = and(_T_201, _T_202) @[Bitwise.scala 103:75]
        node _T_204 = or(_T_199, _T_203) @[Bitwise.scala 103:39]
        node _T_205 = bits(_T_204, 0, 0) @[OneHot.scala 39:40]
        node _T_206 = bits(_T_204, 1, 1) @[OneHot.scala 39:40]
        node _T_207 = bits(_T_204, 2, 2) @[OneHot.scala 39:40]
        node _T_208 = bits(_T_204, 3, 3) @[OneHot.scala 39:40]
        node _T_209 = bits(_T_204, 4, 4) @[OneHot.scala 39:40]
        node _T_210 = bits(_T_204, 5, 5) @[OneHot.scala 39:40]
        node _T_211 = bits(_T_204, 6, 6) @[OneHot.scala 39:40]
        node _T_212 = bits(_T_204, 7, 7) @[OneHot.scala 39:40]
        node _T_213 = bits(_T_204, 8, 8) @[OneHot.scala 39:40]
        node _T_214 = bits(_T_204, 9, 9) @[OneHot.scala 39:40]
        node _T_215 = bits(_T_204, 10, 10) @[OneHot.scala 39:40]
        node _T_216 = bits(_T_204, 11, 11) @[OneHot.scala 39:40]
        node _T_217 = bits(_T_204, 12, 12) @[OneHot.scala 39:40]
        node _T_218 = bits(_T_204, 13, 13) @[OneHot.scala 39:40]
        node _T_219 = bits(_T_204, 14, 14) @[OneHot.scala 39:40]
        node _T_220 = bits(_T_204, 15, 15) @[OneHot.scala 39:40]
        node _T_237 = mux(_T_219, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_238 = mux(_T_218, UInt<4>("h0d"), _T_237) @[Mux.scala 31:69]
        node _T_239 = mux(_T_217, UInt<4>("h0c"), _T_238) @[Mux.scala 31:69]
        node _T_240 = mux(_T_216, UInt<4>("h0b"), _T_239) @[Mux.scala 31:69]
        node _T_241 = mux(_T_215, UInt<4>("h0a"), _T_240) @[Mux.scala 31:69]
        node _T_242 = mux(_T_214, UInt<4>("h09"), _T_241) @[Mux.scala 31:69]
        node _T_243 = mux(_T_213, UInt<4>("h08"), _T_242) @[Mux.scala 31:69]
        node _T_244 = mux(_T_212, UInt<3>("h07"), _T_243) @[Mux.scala 31:69]
        node _T_245 = mux(_T_211, UInt<3>("h06"), _T_244) @[Mux.scala 31:69]
        node _T_246 = mux(_T_210, UInt<3>("h05"), _T_245) @[Mux.scala 31:69]
        node _T_247 = mux(_T_209, UInt<3>("h04"), _T_246) @[Mux.scala 31:69]
        node _T_248 = mux(_T_208, UInt<2>("h03"), _T_247) @[Mux.scala 31:69]
        node _T_249 = mux(_T_207, UInt<2>("h02"), _T_248) @[Mux.scala 31:69]
        node _T_250 = mux(_T_206, UInt<1>("h01"), _T_249) @[Mux.scala 31:69]
        node _T_251 = mux(_T_205, UInt<1>("h00"), _T_250) @[Mux.scala 31:69]
        result_unsigned <= _T_251 @[Arithmetic_Logic_Unit.scala 133:25]
        skip @[Arithmetic_Logic_Unit.scala 132:18]
      skip @[Arithmetic_Logic_Unit.scala 129:65]
    node _T_253 = eq(op, UInt<6>("h026")) @[Arithmetic_Logic_Unit.scala 136:49]
    when _T_253 : @[Arithmetic_Logic_Unit.scala 136:65]
      node _T_255 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 137:30]
      when _T_255 : @[Arithmetic_Logic_Unit.scala 137:39]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 138:25]
        skip @[Arithmetic_Logic_Unit.scala 137:39]
      else : @[Arithmetic_Logic_Unit.scala 139:18]
        node _T_257 = bits(operand0_unsigned, 0, 0) @[OneHot.scala 39:40]
        node _T_258 = bits(operand0_unsigned, 1, 1) @[OneHot.scala 39:40]
        node _T_259 = bits(operand0_unsigned, 2, 2) @[OneHot.scala 39:40]
        node _T_260 = bits(operand0_unsigned, 3, 3) @[OneHot.scala 39:40]
        node _T_261 = bits(operand0_unsigned, 4, 4) @[OneHot.scala 39:40]
        node _T_262 = bits(operand0_unsigned, 5, 5) @[OneHot.scala 39:40]
        node _T_263 = bits(operand0_unsigned, 6, 6) @[OneHot.scala 39:40]
        node _T_264 = bits(operand0_unsigned, 7, 7) @[OneHot.scala 39:40]
        node _T_265 = bits(operand0_unsigned, 8, 8) @[OneHot.scala 39:40]
        node _T_266 = bits(operand0_unsigned, 9, 9) @[OneHot.scala 39:40]
        node _T_267 = bits(operand0_unsigned, 10, 10) @[OneHot.scala 39:40]
        node _T_268 = bits(operand0_unsigned, 11, 11) @[OneHot.scala 39:40]
        node _T_269 = bits(operand0_unsigned, 12, 12) @[OneHot.scala 39:40]
        node _T_270 = bits(operand0_unsigned, 13, 13) @[OneHot.scala 39:40]
        node _T_271 = bits(operand0_unsigned, 14, 14) @[OneHot.scala 39:40]
        node _T_272 = bits(operand0_unsigned, 15, 15) @[OneHot.scala 39:40]
        node _T_289 = mux(_T_271, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_290 = mux(_T_270, UInt<4>("h0d"), _T_289) @[Mux.scala 31:69]
        node _T_291 = mux(_T_269, UInt<4>("h0c"), _T_290) @[Mux.scala 31:69]
        node _T_292 = mux(_T_268, UInt<4>("h0b"), _T_291) @[Mux.scala 31:69]
        node _T_293 = mux(_T_267, UInt<4>("h0a"), _T_292) @[Mux.scala 31:69]
        node _T_294 = mux(_T_266, UInt<4>("h09"), _T_293) @[Mux.scala 31:69]
        node _T_295 = mux(_T_265, UInt<4>("h08"), _T_294) @[Mux.scala 31:69]
        node _T_296 = mux(_T_264, UInt<3>("h07"), _T_295) @[Mux.scala 31:69]
        node _T_297 = mux(_T_263, UInt<3>("h06"), _T_296) @[Mux.scala 31:69]
        node _T_298 = mux(_T_262, UInt<3>("h05"), _T_297) @[Mux.scala 31:69]
        node _T_299 = mux(_T_261, UInt<3>("h04"), _T_298) @[Mux.scala 31:69]
        node _T_300 = mux(_T_260, UInt<2>("h03"), _T_299) @[Mux.scala 31:69]
        node _T_301 = mux(_T_259, UInt<2>("h02"), _T_300) @[Mux.scala 31:69]
        node _T_302 = mux(_T_258, UInt<1>("h01"), _T_301) @[Mux.scala 31:69]
        node _T_303 = mux(_T_257, UInt<1>("h00"), _T_302) @[Mux.scala 31:69]
        result_unsigned <= _T_303 @[Arithmetic_Logic_Unit.scala 140:25]
        skip @[Arithmetic_Logic_Unit.scala 139:18]
      skip @[Arithmetic_Logic_Unit.scala 136:65]
    node _T_305 = eq(op, UInt<6>("h027")) @[Arithmetic_Logic_Unit.scala 143:50]
    when _T_305 : @[Arithmetic_Logic_Unit.scala 143:67]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 144:23]
      skip @[Arithmetic_Logic_Unit.scala 143:67]
    wire fpResult : UInt<16> @[Arithmetic_Logic_Unit.scala 149:22]
    fpResult <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 150:12]
    wire _T_343 : UInt<6>[31] @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[0] <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[1] <= UInt<1>("h01") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[2] <= UInt<2>("h02") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[3] <= UInt<2>("h03") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[4] <= UInt<3>("h04") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[5] <= UInt<3>("h06") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[6] <= UInt<3>("h07") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[7] <= UInt<4>("h08") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[8] <= UInt<4>("h0a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[9] <= UInt<4>("h0c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[10] <= UInt<4>("h0e") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[11] <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[12] <= UInt<5>("h011") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[13] <= UInt<5>("h012") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[14] <= UInt<5>("h013") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[15] <= UInt<5>("h014") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[16] <= UInt<5>("h015") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[17] <= UInt<5>("h016") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[18] <= UInt<5>("h017") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[19] <= UInt<5>("h018") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[20] <= UInt<5>("h019") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[21] <= UInt<5>("h01a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[22] <= UInt<5>("h01b") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[23] <= UInt<5>("h01c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[24] <= UInt<6>("h021") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[25] <= UInt<6>("h022") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[26] <= UInt<6>("h023") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[27] <= UInt<6>("h024") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[28] <= UInt<6>("h025") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[29] <= UInt<6>("h026") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[30] <= UInt<6>("h027") @[Arithmetic_Logic_Unit.scala 171:15]
    node _T_377 = eq(_T_343[0], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_378 = eq(_T_343[1], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_379 = eq(_T_343[2], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_380 = eq(_T_343[3], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_381 = eq(_T_343[4], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_382 = eq(_T_343[5], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_383 = eq(_T_343[6], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_384 = eq(_T_343[7], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_385 = eq(_T_343[8], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_386 = eq(_T_343[9], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_387 = eq(_T_343[10], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_388 = eq(_T_343[11], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_389 = eq(_T_343[12], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_390 = eq(_T_343[13], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_391 = eq(_T_343[14], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_392 = eq(_T_343[15], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_393 = eq(_T_343[16], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_394 = eq(_T_343[17], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_395 = eq(_T_343[18], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_396 = eq(_T_343[19], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_397 = eq(_T_343[20], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_398 = eq(_T_343[21], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_399 = eq(_T_343[22], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_400 = eq(_T_343[23], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_401 = eq(_T_343[24], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_402 = eq(_T_343[25], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_403 = eq(_T_343[26], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_404 = eq(_T_343[27], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_405 = eq(_T_343[28], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_406 = eq(_T_343[29], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_407 = eq(_T_343[30], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_409 = or(UInt<1>("h00"), _T_377) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_410 = or(_T_409, _T_378) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_411 = or(_T_410, _T_379) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_412 = or(_T_411, _T_380) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_413 = or(_T_412, _T_381) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_414 = or(_T_413, _T_382) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_415 = or(_T_414, _T_383) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_416 = or(_T_415, _T_384) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_417 = or(_T_416, _T_385) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_418 = or(_T_417, _T_386) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_419 = or(_T_418, _T_387) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_420 = or(_T_419, _T_388) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_421 = or(_T_420, _T_389) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_422 = or(_T_421, _T_390) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_423 = or(_T_422, _T_391) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_424 = or(_T_423, _T_392) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_425 = or(_T_424, _T_393) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_426 = or(_T_425, _T_394) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_427 = or(_T_426, _T_395) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_428 = or(_T_427, _T_396) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_429 = or(_T_428, _T_397) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_430 = or(_T_429, _T_398) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_431 = or(_T_430, _T_399) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_432 = or(_T_431, _T_400) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_433 = or(_T_432, _T_401) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_434 = or(_T_433, _T_402) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_435 = or(_T_434, _T_403) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_436 = or(_T_435, _T_404) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_437 = or(_T_436, _T_405) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_438 = or(_T_437, _T_406) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_439 = or(_T_438, _T_407) @[Arithmetic_Logic_Unit.scala 171:55]
    when _T_439 : @[Arithmetic_Logic_Unit.scala 171:66]
      io.2 <= result_unsigned @[Arithmetic_Logic_Unit.scala 172:22]
      skip @[Arithmetic_Logic_Unit.scala 171:66]
    else : @[Arithmetic_Logic_Unit.scala 173:74]
      wire _T_448 : UInt<4>[5] @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[0] <= UInt<3>("h05") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[1] <= UInt<4>("h09") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[2] <= UInt<4>("h0b") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[3] <= UInt<4>("h0d") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[4] <= UInt<4>("h0f") @[Arithmetic_Logic_Unit.scala 173:24]
      node _T_456 = eq(_T_448[0], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_457 = eq(_T_448[1], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_458 = eq(_T_448[2], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_459 = eq(_T_448[3], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_460 = eq(_T_448[4], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_462 = or(UInt<1>("h00"), _T_456) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_463 = or(_T_462, _T_457) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_464 = or(_T_463, _T_458) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_465 = or(_T_464, _T_459) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_466 = or(_T_465, _T_460) @[Arithmetic_Logic_Unit.scala 173:62]
      when _T_466 : @[Arithmetic_Logic_Unit.scala 173:74]
        node _T_467 = asUInt(result_signed) @[Arithmetic_Logic_Unit.scala 174:45]
        io.2 <= _T_467 @[Arithmetic_Logic_Unit.scala 174:22]
        skip @[Arithmetic_Logic_Unit.scala 173:74]
      else : @[Arithmetic_Logic_Unit.scala 175:70]
        wire _T_484 : UInt<6>[13] @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[0] <= UInt<6>("h031") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[1] <= UInt<6>("h032") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[2] <= UInt<6>("h033") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[3] <= UInt<6>("h035") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[4] <= UInt<6>("h036") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[5] <= UInt<6>("h037") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[6] <= UInt<6>("h038") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[7] <= UInt<6>("h039") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[8] <= UInt<6>("h03a") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[9] <= UInt<6>("h03b") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[10] <= UInt<6>("h03c") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[11] <= UInt<6>("h03d") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[12] <= UInt<6>("h03e") @[Arithmetic_Logic_Unit.scala 175:22]
        node _T_500 = eq(_T_484[0], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_501 = eq(_T_484[1], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_502 = eq(_T_484[2], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_503 = eq(_T_484[3], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_504 = eq(_T_484[4], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_505 = eq(_T_484[5], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_506 = eq(_T_484[6], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_507 = eq(_T_484[7], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_508 = eq(_T_484[8], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_509 = eq(_T_484[9], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_510 = eq(_T_484[10], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_511 = eq(_T_484[11], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_512 = eq(_T_484[12], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_514 = or(UInt<1>("h00"), _T_500) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_515 = or(_T_514, _T_501) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_516 = or(_T_515, _T_502) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_517 = or(_T_516, _T_503) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_518 = or(_T_517, _T_504) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_519 = or(_T_518, _T_505) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_520 = or(_T_519, _T_506) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_521 = or(_T_520, _T_507) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_522 = or(_T_521, _T_508) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_523 = or(_T_522, _T_509) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_524 = or(_T_523, _T_510) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_525 = or(_T_524, _T_511) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_526 = or(_T_525, _T_512) @[Arithmetic_Logic_Unit.scala 175:59]
        when _T_526 : @[Arithmetic_Logic_Unit.scala 175:70]
          io.2 <= fpResult @[Arithmetic_Logic_Unit.scala 176:22]
          skip @[Arithmetic_Logic_Unit.scala 175:70]
        else : @[Arithmetic_Logic_Unit.scala 177:16]
          io.2 <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 178:22]
          skip @[Arithmetic_Logic_Unit.scala 177:16]
    node _T_528 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_530 = eq(_T_528, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 181:9]
    when _T_530 : @[Arithmetic_Logic_Unit.scala 181:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", op) @[Arithmetic_Logic_Unit.scala 181:9]
      skip @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_531 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_533 = eq(_T_531, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 182:9]
    when _T_533 : @[Arithmetic_Logic_Unit.scala 182:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.0) @[Arithmetic_Logic_Unit.scala 182:9]
      skip @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_534 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_536 = eq(_T_534, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 183:9]
    when _T_536 : @[Arithmetic_Logic_Unit.scala 183:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.1) @[Arithmetic_Logic_Unit.scala 183:9]
      skip @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_537 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_539 = eq(_T_537, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 184:9]
    when _T_539 : @[Arithmetic_Logic_Unit.scala 184:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.2) @[Arithmetic_Logic_Unit.scala 184:9]
      skip @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_540 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 185:9]
    node _T_542 = eq(_T_540, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 185:9]
    when _T_542 : @[Arithmetic_Logic_Unit.scala 185:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[Arithmetic_Logic_Unit.scala 185:9]
      skip @[Arithmetic_Logic_Unit.scala 185:9]
    
  module Delay_Pipe_Hw_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<3>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_29 : UInt<16>[6] @[Delay_Pipe.scala 50:29]
    _T_29[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[3] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[4] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[5] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[6], clock with : (reset => (reset, _T_29)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_83 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_84 = tail(_T_83, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_84 @[Delay_Pipe.scala 55:8]
    node _T_86 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_87 = tail(_T_86, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_87 @[Delay_Pipe.scala 56:8]
    node _T_88 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_88 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[3] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[4] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[5] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Arithmetic_Logic_Unit_Hw_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<5>, flip 3 : UInt<16>, 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire op : UInt<5> @[Arithmetic_Logic_Unit.scala 52:21]
    op <= io.4 @[Arithmetic_Logic_Unit.scala 53:6]
    wire operand0_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 56:29]
    wire operand1_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 57:29]
    wire operand2_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 58:29]
    wire operand0_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 60:31]
    wire operand1_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 61:31]
    wire operand2_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 62:31]
    wire result_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 64:27]
    wire result_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 65:29]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 66:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 66:40]
    operand0_unsigned <= io.0 @[Arithmetic_Logic_Unit.scala 69:21]
    operand1_unsigned <= io.1 @[Arithmetic_Logic_Unit.scala 70:21]
    operand2_unsigned <= io.3 @[Arithmetic_Logic_Unit.scala 71:55]
    node _T_31 = asSInt(io.0) @[Arithmetic_Logic_Unit.scala 72:58]
    operand0_signed <= _T_31 @[Arithmetic_Logic_Unit.scala 72:19]
    node _T_32 = asSInt(io.1) @[Arithmetic_Logic_Unit.scala 73:56]
    operand1_signed <= _T_32 @[Arithmetic_Logic_Unit.scala 73:19]
    node _T_33 = asSInt(io.3) @[Arithmetic_Logic_Unit.scala 74:84]
    operand2_signed <= _T_33 @[Arithmetic_Logic_Unit.scala 74:53]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 77:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 78:19]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 91:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 92:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 93:58]
    node _T_40 = eq(op, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 95:49]
    when _T_40 : @[Arithmetic_Logic_Unit.scala 95:65]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 95:82]
      skip @[Arithmetic_Logic_Unit.scala 95:65]
    node _T_43 = eq(op, UInt<1>("h01")) @[Arithmetic_Logic_Unit.scala 96:49]
    when _T_43 : @[Arithmetic_Logic_Unit.scala 96:65]
      result_unsigned <= operand0_unsigned @[Arithmetic_Logic_Unit.scala 96:82]
      skip @[Arithmetic_Logic_Unit.scala 96:65]
    node _T_45 = eq(op, UInt<2>("h02")) @[Arithmetic_Logic_Unit.scala 97:49]
    when _T_45 : @[Arithmetic_Logic_Unit.scala 97:65]
      node _T_46 = add(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 97:103]
      node _T_47 = tail(_T_46, 1) @[Arithmetic_Logic_Unit.scala 97:103]
      result_unsigned <= _T_47 @[Arithmetic_Logic_Unit.scala 97:82]
      skip @[Arithmetic_Logic_Unit.scala 97:65]
    node _T_49 = eq(op, UInt<2>("h03")) @[Arithmetic_Logic_Unit.scala 98:49]
    when _T_49 : @[Arithmetic_Logic_Unit.scala 98:65]
      node _T_50 = sub(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_51 = asUInt(_T_50) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_52 = tail(_T_51, 1) @[Arithmetic_Logic_Unit.scala 98:103]
      result_unsigned <= _T_52 @[Arithmetic_Logic_Unit.scala 98:82]
      skip @[Arithmetic_Logic_Unit.scala 98:65]
    node _T_54 = eq(op, UInt<3>("h04")) @[Arithmetic_Logic_Unit.scala 99:49]
    when _T_54 : @[Arithmetic_Logic_Unit.scala 99:65]
      node _T_55 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 99:123]
      node _T_56 = dshl(operand0_unsigned, _T_55) @[Arithmetic_Logic_Unit.scala 99:103]
      result_unsigned <= _T_56 @[Arithmetic_Logic_Unit.scala 99:82]
      skip @[Arithmetic_Logic_Unit.scala 99:65]
    node _T_58 = eq(op, UInt<3>("h06")) @[Arithmetic_Logic_Unit.scala 100:49]
    when _T_58 : @[Arithmetic_Logic_Unit.scala 100:65]
      node _T_59 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 100:103]
      result_unsigned <= _T_59 @[Arithmetic_Logic_Unit.scala 100:82]
      skip @[Arithmetic_Logic_Unit.scala 100:65]
    node _T_61 = eq(op, UInt<3>("h07")) @[Arithmetic_Logic_Unit.scala 101:48]
    when _T_61 : @[Arithmetic_Logic_Unit.scala 101:63]
      node _T_62 = eq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 101:101]
      result_unsigned <= _T_62 @[Arithmetic_Logic_Unit.scala 101:80]
      skip @[Arithmetic_Logic_Unit.scala 101:63]
    node _T_64 = eq(op, UInt<4>("h08")) @[Arithmetic_Logic_Unit.scala 102:48]
    when _T_64 : @[Arithmetic_Logic_Unit.scala 102:63]
      node _T_65 = neq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 102:101]
      result_unsigned <= _T_65 @[Arithmetic_Logic_Unit.scala 102:80]
      skip @[Arithmetic_Logic_Unit.scala 102:63]
    node _T_67 = eq(op, UInt<4>("h0a")) @[Arithmetic_Logic_Unit.scala 103:49]
    when _T_67 : @[Arithmetic_Logic_Unit.scala 103:65]
      node _T_68 = gt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 103:103]
      result_unsigned <= _T_68 @[Arithmetic_Logic_Unit.scala 103:82]
      skip @[Arithmetic_Logic_Unit.scala 103:65]
    node _T_70 = eq(op, UInt<4>("h0c")) @[Arithmetic_Logic_Unit.scala 104:49]
    when _T_70 : @[Arithmetic_Logic_Unit.scala 104:66]
      node _T_71 = lt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 104:104]
      result_unsigned <= _T_71 @[Arithmetic_Logic_Unit.scala 104:83]
      skip @[Arithmetic_Logic_Unit.scala 104:66]
    node _T_73 = eq(op, UInt<4>("h0e")) @[Arithmetic_Logic_Unit.scala 105:49]
    when _T_73 : @[Arithmetic_Logic_Unit.scala 105:65]
      node _T_74 = geq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 105:103]
      result_unsigned <= _T_74 @[Arithmetic_Logic_Unit.scala 105:82]
      skip @[Arithmetic_Logic_Unit.scala 105:65]
    node _T_76 = eq(op, UInt<5>("h010")) @[Arithmetic_Logic_Unit.scala 106:49]
    when _T_76 : @[Arithmetic_Logic_Unit.scala 106:65]
      node _T_77 = leq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 106:103]
      result_unsigned <= _T_77 @[Arithmetic_Logic_Unit.scala 106:82]
      skip @[Arithmetic_Logic_Unit.scala 106:65]
    node _T_79 = eq(op, UInt<5>("h011")) @[Arithmetic_Logic_Unit.scala 107:50]
    when _T_79 : @[Arithmetic_Logic_Unit.scala 107:67]
      node _T_80 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 107:105]
      result_unsigned <= _T_80 @[Arithmetic_Logic_Unit.scala 107:84]
      skip @[Arithmetic_Logic_Unit.scala 107:67]
    node _T_82 = eq(op, UInt<5>("h012")) @[Arithmetic_Logic_Unit.scala 108:51]
    when _T_82 : @[Arithmetic_Logic_Unit.scala 108:69]
      node _T_83 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 108:109]
      node _T_84 = not(_T_83) @[Arithmetic_Logic_Unit.scala 108:89]
      result_unsigned <= _T_84 @[Arithmetic_Logic_Unit.scala 108:86]
      skip @[Arithmetic_Logic_Unit.scala 108:69]
    node _T_86 = eq(op, UInt<5>("h013")) @[Arithmetic_Logic_Unit.scala 109:49]
    when _T_86 : @[Arithmetic_Logic_Unit.scala 109:65]
      node _T_87 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 109:103]
      result_unsigned <= _T_87 @[Arithmetic_Logic_Unit.scala 109:82]
      skip @[Arithmetic_Logic_Unit.scala 109:65]
    node _T_89 = eq(op, UInt<5>("h014")) @[Arithmetic_Logic_Unit.scala 110:50]
    when _T_89 : @[Arithmetic_Logic_Unit.scala 110:67]
      node _T_90 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 110:107]
      node _T_91 = not(_T_90) @[Arithmetic_Logic_Unit.scala 110:87]
      result_unsigned <= _T_91 @[Arithmetic_Logic_Unit.scala 110:84]
      skip @[Arithmetic_Logic_Unit.scala 110:67]
    node _T_93 = eq(op, UInt<5>("h015")) @[Arithmetic_Logic_Unit.scala 111:50]
    when _T_93 : @[Arithmetic_Logic_Unit.scala 111:67]
      node _T_94 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 111:105]
      result_unsigned <= _T_94 @[Arithmetic_Logic_Unit.scala 111:84]
      skip @[Arithmetic_Logic_Unit.scala 111:67]
    node _T_96 = eq(op, UInt<5>("h016")) @[Arithmetic_Logic_Unit.scala 112:51]
    when _T_96 : @[Arithmetic_Logic_Unit.scala 112:69]
      node _T_97 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 112:109]
      node _T_98 = not(_T_97) @[Arithmetic_Logic_Unit.scala 112:89]
      result_unsigned <= _T_98 @[Arithmetic_Logic_Unit.scala 112:86]
      skip @[Arithmetic_Logic_Unit.scala 112:69]
    node _T_100 = eq(op, UInt<5>("h017")) @[Arithmetic_Logic_Unit.scala 113:50]
    when _T_100 : @[Arithmetic_Logic_Unit.scala 113:67]
      node _T_101 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 113:113]
      result_unsigned <= _T_101 @[Arithmetic_Logic_Unit.scala 113:84]
      skip @[Arithmetic_Logic_Unit.scala 113:67]
    node _T_103 = eq(op, UInt<5>("h018")) @[Arithmetic_Logic_Unit.scala 114:51]
    when _T_103 : @[Arithmetic_Logic_Unit.scala 114:69]
      node _T_104 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 114:117]
      node _T_106 = eq(_T_104, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 114:89]
      result_unsigned <= _T_106 @[Arithmetic_Logic_Unit.scala 114:86]
      skip @[Arithmetic_Logic_Unit.scala 114:69]
    node _T_108 = eq(op, UInt<5>("h019")) @[Arithmetic_Logic_Unit.scala 115:49]
    when _T_108 : @[Arithmetic_Logic_Unit.scala 115:65]
      node _T_109 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 115:111]
      result_unsigned <= _T_109 @[Arithmetic_Logic_Unit.scala 115:82]
      skip @[Arithmetic_Logic_Unit.scala 115:65]
    node _T_111 = eq(op, UInt<5>("h01a")) @[Arithmetic_Logic_Unit.scala 116:50]
    when _T_111 : @[Arithmetic_Logic_Unit.scala 116:67]
      node _T_112 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 116:115]
      node _T_114 = eq(_T_112, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 116:87]
      result_unsigned <= _T_114 @[Arithmetic_Logic_Unit.scala 116:84]
      skip @[Arithmetic_Logic_Unit.scala 116:67]
    node _T_116 = eq(op, UInt<5>("h01b")) @[Arithmetic_Logic_Unit.scala 117:50]
    when _T_116 : @[Arithmetic_Logic_Unit.scala 117:67]
      node _T_118 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:87]
      node _T_120 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:116]
      node _T_121 = xor(_T_118, _T_120) @[Arithmetic_Logic_Unit.scala 117:114]
      result_unsigned <= _T_121 @[Arithmetic_Logic_Unit.scala 117:84]
      skip @[Arithmetic_Logic_Unit.scala 117:67]
    node _T_123 = eq(op, UInt<5>("h01c")) @[Arithmetic_Logic_Unit.scala 118:51]
    when _T_123 : @[Arithmetic_Logic_Unit.scala 118:69]
      node _T_125 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:91]
      node _T_127 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:120]
      node _T_128 = xor(_T_125, _T_127) @[Arithmetic_Logic_Unit.scala 118:118]
      node _T_130 = eq(_T_128, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:89]
      result_unsigned <= _T_130 @[Arithmetic_Logic_Unit.scala 118:86]
      skip @[Arithmetic_Logic_Unit.scala 118:69]
    node _T_132 = eq(op, UInt<6>("h021")) @[Arithmetic_Logic_Unit.scala 119:48]
    when _T_132 : @[Arithmetic_Logic_Unit.scala 119:63]
      node _T_133 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 119:100]
      node _T_134 = bits(_T_133, 0, 0) @[Arithmetic_Logic_Unit.scala 119:100]
      result_unsigned <= _T_134 @[Arithmetic_Logic_Unit.scala 119:80]
      skip @[Arithmetic_Logic_Unit.scala 119:63]
    node _T_136 = eq(op, UInt<6>("h022")) @[Arithmetic_Logic_Unit.scala 120:48]
    when _T_136 : @[Arithmetic_Logic_Unit.scala 120:63]
      when logical_operand2_unsigned : @[Arithmetic_Logic_Unit.scala 121:38]
        node _T_138 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 122:73]
        node _T_139 = dshl(UInt<1>("h01"), _T_138) @[Arithmetic_Logic_Unit.scala 122:53]
        node _T_140 = or(operand0_unsigned, _T_139) @[Arithmetic_Logic_Unit.scala 122:46]
        result_unsigned <= _T_140 @[Arithmetic_Logic_Unit.scala 122:25]
        skip @[Arithmetic_Logic_Unit.scala 121:38]
      else : @[Arithmetic_Logic_Unit.scala 123:19]
        node _T_142 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 124:75]
        node _T_143 = dshl(UInt<1>("h01"), _T_142) @[Arithmetic_Logic_Unit.scala 124:55]
        node _T_144 = not(_T_143) @[Arithmetic_Logic_Unit.scala 124:49]
        node _T_145 = and(operand0_unsigned, _T_144) @[Arithmetic_Logic_Unit.scala 124:46]
        result_unsigned <= _T_145 @[Arithmetic_Logic_Unit.scala 124:25]
        skip @[Arithmetic_Logic_Unit.scala 123:19]
      skip @[Arithmetic_Logic_Unit.scala 120:63]
    node _T_147 = eq(op, UInt<6>("h023")) @[Arithmetic_Logic_Unit.scala 127:48]
    when _T_147 : @[Arithmetic_Logic_Unit.scala 127:63]
      node _T_149 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 127:130]
      node _T_150 = dshl(UInt<1>("h01"), _T_149) @[Arithmetic_Logic_Unit.scala 127:110]
      node _T_151 = not(_T_150) @[Arithmetic_Logic_Unit.scala 127:104]
      node _T_152 = and(operand0_unsigned, _T_151) @[Arithmetic_Logic_Unit.scala 127:101]
      result_unsigned <= _T_152 @[Arithmetic_Logic_Unit.scala 127:80]
      skip @[Arithmetic_Logic_Unit.scala 127:63]
    node _T_154 = eq(op, UInt<6>("h024")) @[Arithmetic_Logic_Unit.scala 128:48]
    when _T_154 : @[Arithmetic_Logic_Unit.scala 128:63]
      node _T_156 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 128:128]
      node _T_157 = dshl(UInt<1>("h01"), _T_156) @[Arithmetic_Logic_Unit.scala 128:108]
      node _T_158 = or(operand0_unsigned, _T_157) @[Arithmetic_Logic_Unit.scala 128:101]
      result_unsigned <= _T_158 @[Arithmetic_Logic_Unit.scala 128:80]
      skip @[Arithmetic_Logic_Unit.scala 128:63]
    node _T_160 = eq(op, UInt<6>("h025")) @[Arithmetic_Logic_Unit.scala 129:49]
    when _T_160 : @[Arithmetic_Logic_Unit.scala 129:65]
      node _T_162 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 130:30]
      when _T_162 : @[Arithmetic_Logic_Unit.scala 130:38]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 131:25]
        skip @[Arithmetic_Logic_Unit.scala 130:38]
      else : @[Arithmetic_Logic_Unit.scala 132:18]
        node _T_166 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
        node _T_167 = xor(UInt<16>("h0ffff"), _T_166) @[Bitwise.scala 102:21]
        node _T_168 = shr(operand0_unsigned, 8) @[Bitwise.scala 103:21]
        node _T_169 = and(_T_168, _T_167) @[Bitwise.scala 103:31]
        node _T_170 = bits(operand0_unsigned, 7, 0) @[Bitwise.scala 103:46]
        node _T_171 = shl(_T_170, 8) @[Bitwise.scala 103:65]
        node _T_172 = not(_T_167) @[Bitwise.scala 103:77]
        node _T_173 = and(_T_171, _T_172) @[Bitwise.scala 103:75]
        node _T_174 = or(_T_169, _T_173) @[Bitwise.scala 103:39]
        node _T_175 = bits(_T_167, 11, 0) @[Bitwise.scala 102:28]
        node _T_176 = shl(_T_175, 4) @[Bitwise.scala 102:47]
        node _T_177 = xor(_T_167, _T_176) @[Bitwise.scala 102:21]
        node _T_178 = shr(_T_174, 4) @[Bitwise.scala 103:21]
        node _T_179 = and(_T_178, _T_177) @[Bitwise.scala 103:31]
        node _T_180 = bits(_T_174, 11, 0) @[Bitwise.scala 103:46]
        node _T_181 = shl(_T_180, 4) @[Bitwise.scala 103:65]
        node _T_182 = not(_T_177) @[Bitwise.scala 103:77]
        node _T_183 = and(_T_181, _T_182) @[Bitwise.scala 103:75]
        node _T_184 = or(_T_179, _T_183) @[Bitwise.scala 103:39]
        node _T_185 = bits(_T_177, 13, 0) @[Bitwise.scala 102:28]
        node _T_186 = shl(_T_185, 2) @[Bitwise.scala 102:47]
        node _T_187 = xor(_T_177, _T_186) @[Bitwise.scala 102:21]
        node _T_188 = shr(_T_184, 2) @[Bitwise.scala 103:21]
        node _T_189 = and(_T_188, _T_187) @[Bitwise.scala 103:31]
        node _T_190 = bits(_T_184, 13, 0) @[Bitwise.scala 103:46]
        node _T_191 = shl(_T_190, 2) @[Bitwise.scala 103:65]
        node _T_192 = not(_T_187) @[Bitwise.scala 103:77]
        node _T_193 = and(_T_191, _T_192) @[Bitwise.scala 103:75]
        node _T_194 = or(_T_189, _T_193) @[Bitwise.scala 103:39]
        node _T_195 = bits(_T_187, 14, 0) @[Bitwise.scala 102:28]
        node _T_196 = shl(_T_195, 1) @[Bitwise.scala 102:47]
        node _T_197 = xor(_T_187, _T_196) @[Bitwise.scala 102:21]
        node _T_198 = shr(_T_194, 1) @[Bitwise.scala 103:21]
        node _T_199 = and(_T_198, _T_197) @[Bitwise.scala 103:31]
        node _T_200 = bits(_T_194, 14, 0) @[Bitwise.scala 103:46]
        node _T_201 = shl(_T_200, 1) @[Bitwise.scala 103:65]
        node _T_202 = not(_T_197) @[Bitwise.scala 103:77]
        node _T_203 = and(_T_201, _T_202) @[Bitwise.scala 103:75]
        node _T_204 = or(_T_199, _T_203) @[Bitwise.scala 103:39]
        node _T_205 = bits(_T_204, 0, 0) @[OneHot.scala 39:40]
        node _T_206 = bits(_T_204, 1, 1) @[OneHot.scala 39:40]
        node _T_207 = bits(_T_204, 2, 2) @[OneHot.scala 39:40]
        node _T_208 = bits(_T_204, 3, 3) @[OneHot.scala 39:40]
        node _T_209 = bits(_T_204, 4, 4) @[OneHot.scala 39:40]
        node _T_210 = bits(_T_204, 5, 5) @[OneHot.scala 39:40]
        node _T_211 = bits(_T_204, 6, 6) @[OneHot.scala 39:40]
        node _T_212 = bits(_T_204, 7, 7) @[OneHot.scala 39:40]
        node _T_213 = bits(_T_204, 8, 8) @[OneHot.scala 39:40]
        node _T_214 = bits(_T_204, 9, 9) @[OneHot.scala 39:40]
        node _T_215 = bits(_T_204, 10, 10) @[OneHot.scala 39:40]
        node _T_216 = bits(_T_204, 11, 11) @[OneHot.scala 39:40]
        node _T_217 = bits(_T_204, 12, 12) @[OneHot.scala 39:40]
        node _T_218 = bits(_T_204, 13, 13) @[OneHot.scala 39:40]
        node _T_219 = bits(_T_204, 14, 14) @[OneHot.scala 39:40]
        node _T_220 = bits(_T_204, 15, 15) @[OneHot.scala 39:40]
        node _T_237 = mux(_T_219, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_238 = mux(_T_218, UInt<4>("h0d"), _T_237) @[Mux.scala 31:69]
        node _T_239 = mux(_T_217, UInt<4>("h0c"), _T_238) @[Mux.scala 31:69]
        node _T_240 = mux(_T_216, UInt<4>("h0b"), _T_239) @[Mux.scala 31:69]
        node _T_241 = mux(_T_215, UInt<4>("h0a"), _T_240) @[Mux.scala 31:69]
        node _T_242 = mux(_T_214, UInt<4>("h09"), _T_241) @[Mux.scala 31:69]
        node _T_243 = mux(_T_213, UInt<4>("h08"), _T_242) @[Mux.scala 31:69]
        node _T_244 = mux(_T_212, UInt<3>("h07"), _T_243) @[Mux.scala 31:69]
        node _T_245 = mux(_T_211, UInt<3>("h06"), _T_244) @[Mux.scala 31:69]
        node _T_246 = mux(_T_210, UInt<3>("h05"), _T_245) @[Mux.scala 31:69]
        node _T_247 = mux(_T_209, UInt<3>("h04"), _T_246) @[Mux.scala 31:69]
        node _T_248 = mux(_T_208, UInt<2>("h03"), _T_247) @[Mux.scala 31:69]
        node _T_249 = mux(_T_207, UInt<2>("h02"), _T_248) @[Mux.scala 31:69]
        node _T_250 = mux(_T_206, UInt<1>("h01"), _T_249) @[Mux.scala 31:69]
        node _T_251 = mux(_T_205, UInt<1>("h00"), _T_250) @[Mux.scala 31:69]
        result_unsigned <= _T_251 @[Arithmetic_Logic_Unit.scala 133:25]
        skip @[Arithmetic_Logic_Unit.scala 132:18]
      skip @[Arithmetic_Logic_Unit.scala 129:65]
    node _T_253 = eq(op, UInt<6>("h026")) @[Arithmetic_Logic_Unit.scala 136:49]
    when _T_253 : @[Arithmetic_Logic_Unit.scala 136:65]
      node _T_255 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 137:30]
      when _T_255 : @[Arithmetic_Logic_Unit.scala 137:39]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 138:25]
        skip @[Arithmetic_Logic_Unit.scala 137:39]
      else : @[Arithmetic_Logic_Unit.scala 139:18]
        node _T_257 = bits(operand0_unsigned, 0, 0) @[OneHot.scala 39:40]
        node _T_258 = bits(operand0_unsigned, 1, 1) @[OneHot.scala 39:40]
        node _T_259 = bits(operand0_unsigned, 2, 2) @[OneHot.scala 39:40]
        node _T_260 = bits(operand0_unsigned, 3, 3) @[OneHot.scala 39:40]
        node _T_261 = bits(operand0_unsigned, 4, 4) @[OneHot.scala 39:40]
        node _T_262 = bits(operand0_unsigned, 5, 5) @[OneHot.scala 39:40]
        node _T_263 = bits(operand0_unsigned, 6, 6) @[OneHot.scala 39:40]
        node _T_264 = bits(operand0_unsigned, 7, 7) @[OneHot.scala 39:40]
        node _T_265 = bits(operand0_unsigned, 8, 8) @[OneHot.scala 39:40]
        node _T_266 = bits(operand0_unsigned, 9, 9) @[OneHot.scala 39:40]
        node _T_267 = bits(operand0_unsigned, 10, 10) @[OneHot.scala 39:40]
        node _T_268 = bits(operand0_unsigned, 11, 11) @[OneHot.scala 39:40]
        node _T_269 = bits(operand0_unsigned, 12, 12) @[OneHot.scala 39:40]
        node _T_270 = bits(operand0_unsigned, 13, 13) @[OneHot.scala 39:40]
        node _T_271 = bits(operand0_unsigned, 14, 14) @[OneHot.scala 39:40]
        node _T_272 = bits(operand0_unsigned, 15, 15) @[OneHot.scala 39:40]
        node _T_289 = mux(_T_271, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_290 = mux(_T_270, UInt<4>("h0d"), _T_289) @[Mux.scala 31:69]
        node _T_291 = mux(_T_269, UInt<4>("h0c"), _T_290) @[Mux.scala 31:69]
        node _T_292 = mux(_T_268, UInt<4>("h0b"), _T_291) @[Mux.scala 31:69]
        node _T_293 = mux(_T_267, UInt<4>("h0a"), _T_292) @[Mux.scala 31:69]
        node _T_294 = mux(_T_266, UInt<4>("h09"), _T_293) @[Mux.scala 31:69]
        node _T_295 = mux(_T_265, UInt<4>("h08"), _T_294) @[Mux.scala 31:69]
        node _T_296 = mux(_T_264, UInt<3>("h07"), _T_295) @[Mux.scala 31:69]
        node _T_297 = mux(_T_263, UInt<3>("h06"), _T_296) @[Mux.scala 31:69]
        node _T_298 = mux(_T_262, UInt<3>("h05"), _T_297) @[Mux.scala 31:69]
        node _T_299 = mux(_T_261, UInt<3>("h04"), _T_298) @[Mux.scala 31:69]
        node _T_300 = mux(_T_260, UInt<2>("h03"), _T_299) @[Mux.scala 31:69]
        node _T_301 = mux(_T_259, UInt<2>("h02"), _T_300) @[Mux.scala 31:69]
        node _T_302 = mux(_T_258, UInt<1>("h01"), _T_301) @[Mux.scala 31:69]
        node _T_303 = mux(_T_257, UInt<1>("h00"), _T_302) @[Mux.scala 31:69]
        result_unsigned <= _T_303 @[Arithmetic_Logic_Unit.scala 140:25]
        skip @[Arithmetic_Logic_Unit.scala 139:18]
      skip @[Arithmetic_Logic_Unit.scala 136:65]
    node _T_305 = eq(op, UInt<6>("h027")) @[Arithmetic_Logic_Unit.scala 143:50]
    when _T_305 : @[Arithmetic_Logic_Unit.scala 143:67]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 144:23]
      skip @[Arithmetic_Logic_Unit.scala 143:67]
    wire fpResult : UInt<16> @[Arithmetic_Logic_Unit.scala 149:22]
    fpResult <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 150:12]
    wire _T_343 : UInt<6>[31] @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[0] <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[1] <= UInt<1>("h01") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[2] <= UInt<2>("h02") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[3] <= UInt<2>("h03") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[4] <= UInt<3>("h04") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[5] <= UInt<3>("h06") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[6] <= UInt<3>("h07") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[7] <= UInt<4>("h08") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[8] <= UInt<4>("h0a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[9] <= UInt<4>("h0c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[10] <= UInt<4>("h0e") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[11] <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[12] <= UInt<5>("h011") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[13] <= UInt<5>("h012") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[14] <= UInt<5>("h013") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[15] <= UInt<5>("h014") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[16] <= UInt<5>("h015") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[17] <= UInt<5>("h016") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[18] <= UInt<5>("h017") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[19] <= UInt<5>("h018") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[20] <= UInt<5>("h019") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[21] <= UInt<5>("h01a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[22] <= UInt<5>("h01b") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[23] <= UInt<5>("h01c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[24] <= UInt<6>("h021") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[25] <= UInt<6>("h022") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[26] <= UInt<6>("h023") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[27] <= UInt<6>("h024") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[28] <= UInt<6>("h025") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[29] <= UInt<6>("h026") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[30] <= UInt<6>("h027") @[Arithmetic_Logic_Unit.scala 171:15]
    node _T_377 = eq(_T_343[0], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_378 = eq(_T_343[1], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_379 = eq(_T_343[2], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_380 = eq(_T_343[3], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_381 = eq(_T_343[4], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_382 = eq(_T_343[5], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_383 = eq(_T_343[6], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_384 = eq(_T_343[7], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_385 = eq(_T_343[8], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_386 = eq(_T_343[9], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_387 = eq(_T_343[10], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_388 = eq(_T_343[11], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_389 = eq(_T_343[12], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_390 = eq(_T_343[13], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_391 = eq(_T_343[14], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_392 = eq(_T_343[15], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_393 = eq(_T_343[16], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_394 = eq(_T_343[17], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_395 = eq(_T_343[18], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_396 = eq(_T_343[19], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_397 = eq(_T_343[20], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_398 = eq(_T_343[21], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_399 = eq(_T_343[22], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_400 = eq(_T_343[23], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_401 = eq(_T_343[24], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_402 = eq(_T_343[25], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_403 = eq(_T_343[26], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_404 = eq(_T_343[27], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_405 = eq(_T_343[28], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_406 = eq(_T_343[29], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_407 = eq(_T_343[30], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_409 = or(UInt<1>("h00"), _T_377) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_410 = or(_T_409, _T_378) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_411 = or(_T_410, _T_379) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_412 = or(_T_411, _T_380) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_413 = or(_T_412, _T_381) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_414 = or(_T_413, _T_382) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_415 = or(_T_414, _T_383) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_416 = or(_T_415, _T_384) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_417 = or(_T_416, _T_385) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_418 = or(_T_417, _T_386) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_419 = or(_T_418, _T_387) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_420 = or(_T_419, _T_388) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_421 = or(_T_420, _T_389) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_422 = or(_T_421, _T_390) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_423 = or(_T_422, _T_391) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_424 = or(_T_423, _T_392) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_425 = or(_T_424, _T_393) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_426 = or(_T_425, _T_394) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_427 = or(_T_426, _T_395) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_428 = or(_T_427, _T_396) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_429 = or(_T_428, _T_397) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_430 = or(_T_429, _T_398) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_431 = or(_T_430, _T_399) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_432 = or(_T_431, _T_400) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_433 = or(_T_432, _T_401) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_434 = or(_T_433, _T_402) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_435 = or(_T_434, _T_403) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_436 = or(_T_435, _T_404) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_437 = or(_T_436, _T_405) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_438 = or(_T_437, _T_406) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_439 = or(_T_438, _T_407) @[Arithmetic_Logic_Unit.scala 171:55]
    when _T_439 : @[Arithmetic_Logic_Unit.scala 171:66]
      io.2 <= result_unsigned @[Arithmetic_Logic_Unit.scala 172:22]
      skip @[Arithmetic_Logic_Unit.scala 171:66]
    else : @[Arithmetic_Logic_Unit.scala 173:74]
      wire _T_448 : UInt<4>[5] @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[0] <= UInt<3>("h05") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[1] <= UInt<4>("h09") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[2] <= UInt<4>("h0b") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[3] <= UInt<4>("h0d") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[4] <= UInt<4>("h0f") @[Arithmetic_Logic_Unit.scala 173:24]
      node _T_456 = eq(_T_448[0], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_457 = eq(_T_448[1], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_458 = eq(_T_448[2], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_459 = eq(_T_448[3], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_460 = eq(_T_448[4], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_462 = or(UInt<1>("h00"), _T_456) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_463 = or(_T_462, _T_457) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_464 = or(_T_463, _T_458) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_465 = or(_T_464, _T_459) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_466 = or(_T_465, _T_460) @[Arithmetic_Logic_Unit.scala 173:62]
      when _T_466 : @[Arithmetic_Logic_Unit.scala 173:74]
        node _T_467 = asUInt(result_signed) @[Arithmetic_Logic_Unit.scala 174:45]
        io.2 <= _T_467 @[Arithmetic_Logic_Unit.scala 174:22]
        skip @[Arithmetic_Logic_Unit.scala 173:74]
      else : @[Arithmetic_Logic_Unit.scala 175:70]
        wire _T_484 : UInt<6>[13] @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[0] <= UInt<6>("h031") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[1] <= UInt<6>("h032") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[2] <= UInt<6>("h033") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[3] <= UInt<6>("h035") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[4] <= UInt<6>("h036") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[5] <= UInt<6>("h037") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[6] <= UInt<6>("h038") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[7] <= UInt<6>("h039") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[8] <= UInt<6>("h03a") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[9] <= UInt<6>("h03b") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[10] <= UInt<6>("h03c") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[11] <= UInt<6>("h03d") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[12] <= UInt<6>("h03e") @[Arithmetic_Logic_Unit.scala 175:22]
        node _T_500 = eq(_T_484[0], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_501 = eq(_T_484[1], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_502 = eq(_T_484[2], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_503 = eq(_T_484[3], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_504 = eq(_T_484[4], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_505 = eq(_T_484[5], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_506 = eq(_T_484[6], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_507 = eq(_T_484[7], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_508 = eq(_T_484[8], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_509 = eq(_T_484[9], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_510 = eq(_T_484[10], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_511 = eq(_T_484[11], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_512 = eq(_T_484[12], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_514 = or(UInt<1>("h00"), _T_500) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_515 = or(_T_514, _T_501) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_516 = or(_T_515, _T_502) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_517 = or(_T_516, _T_503) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_518 = or(_T_517, _T_504) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_519 = or(_T_518, _T_505) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_520 = or(_T_519, _T_506) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_521 = or(_T_520, _T_507) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_522 = or(_T_521, _T_508) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_523 = or(_T_522, _T_509) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_524 = or(_T_523, _T_510) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_525 = or(_T_524, _T_511) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_526 = or(_T_525, _T_512) @[Arithmetic_Logic_Unit.scala 175:59]
        when _T_526 : @[Arithmetic_Logic_Unit.scala 175:70]
          io.2 <= fpResult @[Arithmetic_Logic_Unit.scala 176:22]
          skip @[Arithmetic_Logic_Unit.scala 175:70]
        else : @[Arithmetic_Logic_Unit.scala 177:16]
          io.2 <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 178:22]
          skip @[Arithmetic_Logic_Unit.scala 177:16]
    node _T_528 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_530 = eq(_T_528, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 181:9]
    when _T_530 : @[Arithmetic_Logic_Unit.scala 181:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", op) @[Arithmetic_Logic_Unit.scala 181:9]
      skip @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_531 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_533 = eq(_T_531, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 182:9]
    when _T_533 : @[Arithmetic_Logic_Unit.scala 182:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.0) @[Arithmetic_Logic_Unit.scala 182:9]
      skip @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_534 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_536 = eq(_T_534, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 183:9]
    when _T_536 : @[Arithmetic_Logic_Unit.scala 183:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.1) @[Arithmetic_Logic_Unit.scala 183:9]
      skip @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_537 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_539 = eq(_T_537, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 184:9]
    when _T_539 : @[Arithmetic_Logic_Unit.scala 184:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.2) @[Arithmetic_Logic_Unit.scala 184:9]
      skip @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_540 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 185:9]
    node _T_542 = eq(_T_540, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 185:9]
    when _T_542 : @[Arithmetic_Logic_Unit.scala 185:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[Arithmetic_Logic_Unit.scala 185:9]
      skip @[Arithmetic_Logic_Unit.scala 185:9]
    
  module Delay_Pipe_Hw_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<3>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_29 : UInt<16>[6] @[Delay_Pipe.scala 50:29]
    _T_29[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[3] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[4] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[5] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[6], clock with : (reset => (reset, _T_29)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_83 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_84 = tail(_T_83, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_84 @[Delay_Pipe.scala 55:8]
    node _T_86 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_87 = tail(_T_86, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_87 @[Delay_Pipe.scala 56:8]
    node _T_88 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_88 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[3] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[4] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[5] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Arithmetic_Logic_Unit_Hw_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<5>, flip 3 : UInt<16>, 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire op : UInt<5> @[Arithmetic_Logic_Unit.scala 52:21]
    op <= io.4 @[Arithmetic_Logic_Unit.scala 53:6]
    wire operand0_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 56:29]
    wire operand1_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 57:29]
    wire operand2_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 58:29]
    wire operand0_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 60:31]
    wire operand1_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 61:31]
    wire operand2_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 62:31]
    wire result_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 64:27]
    wire result_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 65:29]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 66:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 66:40]
    operand0_unsigned <= io.0 @[Arithmetic_Logic_Unit.scala 69:21]
    operand1_unsigned <= io.1 @[Arithmetic_Logic_Unit.scala 70:21]
    operand2_unsigned <= io.3 @[Arithmetic_Logic_Unit.scala 71:55]
    node _T_31 = asSInt(io.0) @[Arithmetic_Logic_Unit.scala 72:58]
    operand0_signed <= _T_31 @[Arithmetic_Logic_Unit.scala 72:19]
    node _T_32 = asSInt(io.1) @[Arithmetic_Logic_Unit.scala 73:56]
    operand1_signed <= _T_32 @[Arithmetic_Logic_Unit.scala 73:19]
    node _T_33 = asSInt(io.3) @[Arithmetic_Logic_Unit.scala 74:84]
    operand2_signed <= _T_33 @[Arithmetic_Logic_Unit.scala 74:53]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 77:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 78:19]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 91:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 92:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 93:58]
    node _T_40 = eq(op, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 95:49]
    when _T_40 : @[Arithmetic_Logic_Unit.scala 95:65]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 95:82]
      skip @[Arithmetic_Logic_Unit.scala 95:65]
    node _T_43 = eq(op, UInt<1>("h01")) @[Arithmetic_Logic_Unit.scala 96:49]
    when _T_43 : @[Arithmetic_Logic_Unit.scala 96:65]
      result_unsigned <= operand0_unsigned @[Arithmetic_Logic_Unit.scala 96:82]
      skip @[Arithmetic_Logic_Unit.scala 96:65]
    node _T_45 = eq(op, UInt<2>("h02")) @[Arithmetic_Logic_Unit.scala 97:49]
    when _T_45 : @[Arithmetic_Logic_Unit.scala 97:65]
      node _T_46 = add(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 97:103]
      node _T_47 = tail(_T_46, 1) @[Arithmetic_Logic_Unit.scala 97:103]
      result_unsigned <= _T_47 @[Arithmetic_Logic_Unit.scala 97:82]
      skip @[Arithmetic_Logic_Unit.scala 97:65]
    node _T_49 = eq(op, UInt<2>("h03")) @[Arithmetic_Logic_Unit.scala 98:49]
    when _T_49 : @[Arithmetic_Logic_Unit.scala 98:65]
      node _T_50 = sub(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_51 = asUInt(_T_50) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_52 = tail(_T_51, 1) @[Arithmetic_Logic_Unit.scala 98:103]
      result_unsigned <= _T_52 @[Arithmetic_Logic_Unit.scala 98:82]
      skip @[Arithmetic_Logic_Unit.scala 98:65]
    node _T_54 = eq(op, UInt<3>("h04")) @[Arithmetic_Logic_Unit.scala 99:49]
    when _T_54 : @[Arithmetic_Logic_Unit.scala 99:65]
      node _T_55 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 99:123]
      node _T_56 = dshl(operand0_unsigned, _T_55) @[Arithmetic_Logic_Unit.scala 99:103]
      result_unsigned <= _T_56 @[Arithmetic_Logic_Unit.scala 99:82]
      skip @[Arithmetic_Logic_Unit.scala 99:65]
    node _T_58 = eq(op, UInt<3>("h06")) @[Arithmetic_Logic_Unit.scala 100:49]
    when _T_58 : @[Arithmetic_Logic_Unit.scala 100:65]
      node _T_59 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 100:103]
      result_unsigned <= _T_59 @[Arithmetic_Logic_Unit.scala 100:82]
      skip @[Arithmetic_Logic_Unit.scala 100:65]
    node _T_61 = eq(op, UInt<3>("h07")) @[Arithmetic_Logic_Unit.scala 101:48]
    when _T_61 : @[Arithmetic_Logic_Unit.scala 101:63]
      node _T_62 = eq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 101:101]
      result_unsigned <= _T_62 @[Arithmetic_Logic_Unit.scala 101:80]
      skip @[Arithmetic_Logic_Unit.scala 101:63]
    node _T_64 = eq(op, UInt<4>("h08")) @[Arithmetic_Logic_Unit.scala 102:48]
    when _T_64 : @[Arithmetic_Logic_Unit.scala 102:63]
      node _T_65 = neq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 102:101]
      result_unsigned <= _T_65 @[Arithmetic_Logic_Unit.scala 102:80]
      skip @[Arithmetic_Logic_Unit.scala 102:63]
    node _T_67 = eq(op, UInt<4>("h0a")) @[Arithmetic_Logic_Unit.scala 103:49]
    when _T_67 : @[Arithmetic_Logic_Unit.scala 103:65]
      node _T_68 = gt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 103:103]
      result_unsigned <= _T_68 @[Arithmetic_Logic_Unit.scala 103:82]
      skip @[Arithmetic_Logic_Unit.scala 103:65]
    node _T_70 = eq(op, UInt<4>("h0c")) @[Arithmetic_Logic_Unit.scala 104:49]
    when _T_70 : @[Arithmetic_Logic_Unit.scala 104:66]
      node _T_71 = lt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 104:104]
      result_unsigned <= _T_71 @[Arithmetic_Logic_Unit.scala 104:83]
      skip @[Arithmetic_Logic_Unit.scala 104:66]
    node _T_73 = eq(op, UInt<4>("h0e")) @[Arithmetic_Logic_Unit.scala 105:49]
    when _T_73 : @[Arithmetic_Logic_Unit.scala 105:65]
      node _T_74 = geq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 105:103]
      result_unsigned <= _T_74 @[Arithmetic_Logic_Unit.scala 105:82]
      skip @[Arithmetic_Logic_Unit.scala 105:65]
    node _T_76 = eq(op, UInt<5>("h010")) @[Arithmetic_Logic_Unit.scala 106:49]
    when _T_76 : @[Arithmetic_Logic_Unit.scala 106:65]
      node _T_77 = leq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 106:103]
      result_unsigned <= _T_77 @[Arithmetic_Logic_Unit.scala 106:82]
      skip @[Arithmetic_Logic_Unit.scala 106:65]
    node _T_79 = eq(op, UInt<5>("h011")) @[Arithmetic_Logic_Unit.scala 107:50]
    when _T_79 : @[Arithmetic_Logic_Unit.scala 107:67]
      node _T_80 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 107:105]
      result_unsigned <= _T_80 @[Arithmetic_Logic_Unit.scala 107:84]
      skip @[Arithmetic_Logic_Unit.scala 107:67]
    node _T_82 = eq(op, UInt<5>("h012")) @[Arithmetic_Logic_Unit.scala 108:51]
    when _T_82 : @[Arithmetic_Logic_Unit.scala 108:69]
      node _T_83 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 108:109]
      node _T_84 = not(_T_83) @[Arithmetic_Logic_Unit.scala 108:89]
      result_unsigned <= _T_84 @[Arithmetic_Logic_Unit.scala 108:86]
      skip @[Arithmetic_Logic_Unit.scala 108:69]
    node _T_86 = eq(op, UInt<5>("h013")) @[Arithmetic_Logic_Unit.scala 109:49]
    when _T_86 : @[Arithmetic_Logic_Unit.scala 109:65]
      node _T_87 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 109:103]
      result_unsigned <= _T_87 @[Arithmetic_Logic_Unit.scala 109:82]
      skip @[Arithmetic_Logic_Unit.scala 109:65]
    node _T_89 = eq(op, UInt<5>("h014")) @[Arithmetic_Logic_Unit.scala 110:50]
    when _T_89 : @[Arithmetic_Logic_Unit.scala 110:67]
      node _T_90 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 110:107]
      node _T_91 = not(_T_90) @[Arithmetic_Logic_Unit.scala 110:87]
      result_unsigned <= _T_91 @[Arithmetic_Logic_Unit.scala 110:84]
      skip @[Arithmetic_Logic_Unit.scala 110:67]
    node _T_93 = eq(op, UInt<5>("h015")) @[Arithmetic_Logic_Unit.scala 111:50]
    when _T_93 : @[Arithmetic_Logic_Unit.scala 111:67]
      node _T_94 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 111:105]
      result_unsigned <= _T_94 @[Arithmetic_Logic_Unit.scala 111:84]
      skip @[Arithmetic_Logic_Unit.scala 111:67]
    node _T_96 = eq(op, UInt<5>("h016")) @[Arithmetic_Logic_Unit.scala 112:51]
    when _T_96 : @[Arithmetic_Logic_Unit.scala 112:69]
      node _T_97 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 112:109]
      node _T_98 = not(_T_97) @[Arithmetic_Logic_Unit.scala 112:89]
      result_unsigned <= _T_98 @[Arithmetic_Logic_Unit.scala 112:86]
      skip @[Arithmetic_Logic_Unit.scala 112:69]
    node _T_100 = eq(op, UInt<5>("h017")) @[Arithmetic_Logic_Unit.scala 113:50]
    when _T_100 : @[Arithmetic_Logic_Unit.scala 113:67]
      node _T_101 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 113:113]
      result_unsigned <= _T_101 @[Arithmetic_Logic_Unit.scala 113:84]
      skip @[Arithmetic_Logic_Unit.scala 113:67]
    node _T_103 = eq(op, UInt<5>("h018")) @[Arithmetic_Logic_Unit.scala 114:51]
    when _T_103 : @[Arithmetic_Logic_Unit.scala 114:69]
      node _T_104 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 114:117]
      node _T_106 = eq(_T_104, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 114:89]
      result_unsigned <= _T_106 @[Arithmetic_Logic_Unit.scala 114:86]
      skip @[Arithmetic_Logic_Unit.scala 114:69]
    node _T_108 = eq(op, UInt<5>("h019")) @[Arithmetic_Logic_Unit.scala 115:49]
    when _T_108 : @[Arithmetic_Logic_Unit.scala 115:65]
      node _T_109 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 115:111]
      result_unsigned <= _T_109 @[Arithmetic_Logic_Unit.scala 115:82]
      skip @[Arithmetic_Logic_Unit.scala 115:65]
    node _T_111 = eq(op, UInt<5>("h01a")) @[Arithmetic_Logic_Unit.scala 116:50]
    when _T_111 : @[Arithmetic_Logic_Unit.scala 116:67]
      node _T_112 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 116:115]
      node _T_114 = eq(_T_112, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 116:87]
      result_unsigned <= _T_114 @[Arithmetic_Logic_Unit.scala 116:84]
      skip @[Arithmetic_Logic_Unit.scala 116:67]
    node _T_116 = eq(op, UInt<5>("h01b")) @[Arithmetic_Logic_Unit.scala 117:50]
    when _T_116 : @[Arithmetic_Logic_Unit.scala 117:67]
      node _T_118 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:87]
      node _T_120 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:116]
      node _T_121 = xor(_T_118, _T_120) @[Arithmetic_Logic_Unit.scala 117:114]
      result_unsigned <= _T_121 @[Arithmetic_Logic_Unit.scala 117:84]
      skip @[Arithmetic_Logic_Unit.scala 117:67]
    node _T_123 = eq(op, UInt<5>("h01c")) @[Arithmetic_Logic_Unit.scala 118:51]
    when _T_123 : @[Arithmetic_Logic_Unit.scala 118:69]
      node _T_125 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:91]
      node _T_127 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:120]
      node _T_128 = xor(_T_125, _T_127) @[Arithmetic_Logic_Unit.scala 118:118]
      node _T_130 = eq(_T_128, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:89]
      result_unsigned <= _T_130 @[Arithmetic_Logic_Unit.scala 118:86]
      skip @[Arithmetic_Logic_Unit.scala 118:69]
    node _T_132 = eq(op, UInt<6>("h021")) @[Arithmetic_Logic_Unit.scala 119:48]
    when _T_132 : @[Arithmetic_Logic_Unit.scala 119:63]
      node _T_133 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 119:100]
      node _T_134 = bits(_T_133, 0, 0) @[Arithmetic_Logic_Unit.scala 119:100]
      result_unsigned <= _T_134 @[Arithmetic_Logic_Unit.scala 119:80]
      skip @[Arithmetic_Logic_Unit.scala 119:63]
    node _T_136 = eq(op, UInt<6>("h022")) @[Arithmetic_Logic_Unit.scala 120:48]
    when _T_136 : @[Arithmetic_Logic_Unit.scala 120:63]
      when logical_operand2_unsigned : @[Arithmetic_Logic_Unit.scala 121:38]
        node _T_138 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 122:73]
        node _T_139 = dshl(UInt<1>("h01"), _T_138) @[Arithmetic_Logic_Unit.scala 122:53]
        node _T_140 = or(operand0_unsigned, _T_139) @[Arithmetic_Logic_Unit.scala 122:46]
        result_unsigned <= _T_140 @[Arithmetic_Logic_Unit.scala 122:25]
        skip @[Arithmetic_Logic_Unit.scala 121:38]
      else : @[Arithmetic_Logic_Unit.scala 123:19]
        node _T_142 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 124:75]
        node _T_143 = dshl(UInt<1>("h01"), _T_142) @[Arithmetic_Logic_Unit.scala 124:55]
        node _T_144 = not(_T_143) @[Arithmetic_Logic_Unit.scala 124:49]
        node _T_145 = and(operand0_unsigned, _T_144) @[Arithmetic_Logic_Unit.scala 124:46]
        result_unsigned <= _T_145 @[Arithmetic_Logic_Unit.scala 124:25]
        skip @[Arithmetic_Logic_Unit.scala 123:19]
      skip @[Arithmetic_Logic_Unit.scala 120:63]
    node _T_147 = eq(op, UInt<6>("h023")) @[Arithmetic_Logic_Unit.scala 127:48]
    when _T_147 : @[Arithmetic_Logic_Unit.scala 127:63]
      node _T_149 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 127:130]
      node _T_150 = dshl(UInt<1>("h01"), _T_149) @[Arithmetic_Logic_Unit.scala 127:110]
      node _T_151 = not(_T_150) @[Arithmetic_Logic_Unit.scala 127:104]
      node _T_152 = and(operand0_unsigned, _T_151) @[Arithmetic_Logic_Unit.scala 127:101]
      result_unsigned <= _T_152 @[Arithmetic_Logic_Unit.scala 127:80]
      skip @[Arithmetic_Logic_Unit.scala 127:63]
    node _T_154 = eq(op, UInt<6>("h024")) @[Arithmetic_Logic_Unit.scala 128:48]
    when _T_154 : @[Arithmetic_Logic_Unit.scala 128:63]
      node _T_156 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 128:128]
      node _T_157 = dshl(UInt<1>("h01"), _T_156) @[Arithmetic_Logic_Unit.scala 128:108]
      node _T_158 = or(operand0_unsigned, _T_157) @[Arithmetic_Logic_Unit.scala 128:101]
      result_unsigned <= _T_158 @[Arithmetic_Logic_Unit.scala 128:80]
      skip @[Arithmetic_Logic_Unit.scala 128:63]
    node _T_160 = eq(op, UInt<6>("h025")) @[Arithmetic_Logic_Unit.scala 129:49]
    when _T_160 : @[Arithmetic_Logic_Unit.scala 129:65]
      node _T_162 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 130:30]
      when _T_162 : @[Arithmetic_Logic_Unit.scala 130:38]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 131:25]
        skip @[Arithmetic_Logic_Unit.scala 130:38]
      else : @[Arithmetic_Logic_Unit.scala 132:18]
        node _T_166 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
        node _T_167 = xor(UInt<16>("h0ffff"), _T_166) @[Bitwise.scala 102:21]
        node _T_168 = shr(operand0_unsigned, 8) @[Bitwise.scala 103:21]
        node _T_169 = and(_T_168, _T_167) @[Bitwise.scala 103:31]
        node _T_170 = bits(operand0_unsigned, 7, 0) @[Bitwise.scala 103:46]
        node _T_171 = shl(_T_170, 8) @[Bitwise.scala 103:65]
        node _T_172 = not(_T_167) @[Bitwise.scala 103:77]
        node _T_173 = and(_T_171, _T_172) @[Bitwise.scala 103:75]
        node _T_174 = or(_T_169, _T_173) @[Bitwise.scala 103:39]
        node _T_175 = bits(_T_167, 11, 0) @[Bitwise.scala 102:28]
        node _T_176 = shl(_T_175, 4) @[Bitwise.scala 102:47]
        node _T_177 = xor(_T_167, _T_176) @[Bitwise.scala 102:21]
        node _T_178 = shr(_T_174, 4) @[Bitwise.scala 103:21]
        node _T_179 = and(_T_178, _T_177) @[Bitwise.scala 103:31]
        node _T_180 = bits(_T_174, 11, 0) @[Bitwise.scala 103:46]
        node _T_181 = shl(_T_180, 4) @[Bitwise.scala 103:65]
        node _T_182 = not(_T_177) @[Bitwise.scala 103:77]
        node _T_183 = and(_T_181, _T_182) @[Bitwise.scala 103:75]
        node _T_184 = or(_T_179, _T_183) @[Bitwise.scala 103:39]
        node _T_185 = bits(_T_177, 13, 0) @[Bitwise.scala 102:28]
        node _T_186 = shl(_T_185, 2) @[Bitwise.scala 102:47]
        node _T_187 = xor(_T_177, _T_186) @[Bitwise.scala 102:21]
        node _T_188 = shr(_T_184, 2) @[Bitwise.scala 103:21]
        node _T_189 = and(_T_188, _T_187) @[Bitwise.scala 103:31]
        node _T_190 = bits(_T_184, 13, 0) @[Bitwise.scala 103:46]
        node _T_191 = shl(_T_190, 2) @[Bitwise.scala 103:65]
        node _T_192 = not(_T_187) @[Bitwise.scala 103:77]
        node _T_193 = and(_T_191, _T_192) @[Bitwise.scala 103:75]
        node _T_194 = or(_T_189, _T_193) @[Bitwise.scala 103:39]
        node _T_195 = bits(_T_187, 14, 0) @[Bitwise.scala 102:28]
        node _T_196 = shl(_T_195, 1) @[Bitwise.scala 102:47]
        node _T_197 = xor(_T_187, _T_196) @[Bitwise.scala 102:21]
        node _T_198 = shr(_T_194, 1) @[Bitwise.scala 103:21]
        node _T_199 = and(_T_198, _T_197) @[Bitwise.scala 103:31]
        node _T_200 = bits(_T_194, 14, 0) @[Bitwise.scala 103:46]
        node _T_201 = shl(_T_200, 1) @[Bitwise.scala 103:65]
        node _T_202 = not(_T_197) @[Bitwise.scala 103:77]
        node _T_203 = and(_T_201, _T_202) @[Bitwise.scala 103:75]
        node _T_204 = or(_T_199, _T_203) @[Bitwise.scala 103:39]
        node _T_205 = bits(_T_204, 0, 0) @[OneHot.scala 39:40]
        node _T_206 = bits(_T_204, 1, 1) @[OneHot.scala 39:40]
        node _T_207 = bits(_T_204, 2, 2) @[OneHot.scala 39:40]
        node _T_208 = bits(_T_204, 3, 3) @[OneHot.scala 39:40]
        node _T_209 = bits(_T_204, 4, 4) @[OneHot.scala 39:40]
        node _T_210 = bits(_T_204, 5, 5) @[OneHot.scala 39:40]
        node _T_211 = bits(_T_204, 6, 6) @[OneHot.scala 39:40]
        node _T_212 = bits(_T_204, 7, 7) @[OneHot.scala 39:40]
        node _T_213 = bits(_T_204, 8, 8) @[OneHot.scala 39:40]
        node _T_214 = bits(_T_204, 9, 9) @[OneHot.scala 39:40]
        node _T_215 = bits(_T_204, 10, 10) @[OneHot.scala 39:40]
        node _T_216 = bits(_T_204, 11, 11) @[OneHot.scala 39:40]
        node _T_217 = bits(_T_204, 12, 12) @[OneHot.scala 39:40]
        node _T_218 = bits(_T_204, 13, 13) @[OneHot.scala 39:40]
        node _T_219 = bits(_T_204, 14, 14) @[OneHot.scala 39:40]
        node _T_220 = bits(_T_204, 15, 15) @[OneHot.scala 39:40]
        node _T_237 = mux(_T_219, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_238 = mux(_T_218, UInt<4>("h0d"), _T_237) @[Mux.scala 31:69]
        node _T_239 = mux(_T_217, UInt<4>("h0c"), _T_238) @[Mux.scala 31:69]
        node _T_240 = mux(_T_216, UInt<4>("h0b"), _T_239) @[Mux.scala 31:69]
        node _T_241 = mux(_T_215, UInt<4>("h0a"), _T_240) @[Mux.scala 31:69]
        node _T_242 = mux(_T_214, UInt<4>("h09"), _T_241) @[Mux.scala 31:69]
        node _T_243 = mux(_T_213, UInt<4>("h08"), _T_242) @[Mux.scala 31:69]
        node _T_244 = mux(_T_212, UInt<3>("h07"), _T_243) @[Mux.scala 31:69]
        node _T_245 = mux(_T_211, UInt<3>("h06"), _T_244) @[Mux.scala 31:69]
        node _T_246 = mux(_T_210, UInt<3>("h05"), _T_245) @[Mux.scala 31:69]
        node _T_247 = mux(_T_209, UInt<3>("h04"), _T_246) @[Mux.scala 31:69]
        node _T_248 = mux(_T_208, UInt<2>("h03"), _T_247) @[Mux.scala 31:69]
        node _T_249 = mux(_T_207, UInt<2>("h02"), _T_248) @[Mux.scala 31:69]
        node _T_250 = mux(_T_206, UInt<1>("h01"), _T_249) @[Mux.scala 31:69]
        node _T_251 = mux(_T_205, UInt<1>("h00"), _T_250) @[Mux.scala 31:69]
        result_unsigned <= _T_251 @[Arithmetic_Logic_Unit.scala 133:25]
        skip @[Arithmetic_Logic_Unit.scala 132:18]
      skip @[Arithmetic_Logic_Unit.scala 129:65]
    node _T_253 = eq(op, UInt<6>("h026")) @[Arithmetic_Logic_Unit.scala 136:49]
    when _T_253 : @[Arithmetic_Logic_Unit.scala 136:65]
      node _T_255 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 137:30]
      when _T_255 : @[Arithmetic_Logic_Unit.scala 137:39]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 138:25]
        skip @[Arithmetic_Logic_Unit.scala 137:39]
      else : @[Arithmetic_Logic_Unit.scala 139:18]
        node _T_257 = bits(operand0_unsigned, 0, 0) @[OneHot.scala 39:40]
        node _T_258 = bits(operand0_unsigned, 1, 1) @[OneHot.scala 39:40]
        node _T_259 = bits(operand0_unsigned, 2, 2) @[OneHot.scala 39:40]
        node _T_260 = bits(operand0_unsigned, 3, 3) @[OneHot.scala 39:40]
        node _T_261 = bits(operand0_unsigned, 4, 4) @[OneHot.scala 39:40]
        node _T_262 = bits(operand0_unsigned, 5, 5) @[OneHot.scala 39:40]
        node _T_263 = bits(operand0_unsigned, 6, 6) @[OneHot.scala 39:40]
        node _T_264 = bits(operand0_unsigned, 7, 7) @[OneHot.scala 39:40]
        node _T_265 = bits(operand0_unsigned, 8, 8) @[OneHot.scala 39:40]
        node _T_266 = bits(operand0_unsigned, 9, 9) @[OneHot.scala 39:40]
        node _T_267 = bits(operand0_unsigned, 10, 10) @[OneHot.scala 39:40]
        node _T_268 = bits(operand0_unsigned, 11, 11) @[OneHot.scala 39:40]
        node _T_269 = bits(operand0_unsigned, 12, 12) @[OneHot.scala 39:40]
        node _T_270 = bits(operand0_unsigned, 13, 13) @[OneHot.scala 39:40]
        node _T_271 = bits(operand0_unsigned, 14, 14) @[OneHot.scala 39:40]
        node _T_272 = bits(operand0_unsigned, 15, 15) @[OneHot.scala 39:40]
        node _T_289 = mux(_T_271, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_290 = mux(_T_270, UInt<4>("h0d"), _T_289) @[Mux.scala 31:69]
        node _T_291 = mux(_T_269, UInt<4>("h0c"), _T_290) @[Mux.scala 31:69]
        node _T_292 = mux(_T_268, UInt<4>("h0b"), _T_291) @[Mux.scala 31:69]
        node _T_293 = mux(_T_267, UInt<4>("h0a"), _T_292) @[Mux.scala 31:69]
        node _T_294 = mux(_T_266, UInt<4>("h09"), _T_293) @[Mux.scala 31:69]
        node _T_295 = mux(_T_265, UInt<4>("h08"), _T_294) @[Mux.scala 31:69]
        node _T_296 = mux(_T_264, UInt<3>("h07"), _T_295) @[Mux.scala 31:69]
        node _T_297 = mux(_T_263, UInt<3>("h06"), _T_296) @[Mux.scala 31:69]
        node _T_298 = mux(_T_262, UInt<3>("h05"), _T_297) @[Mux.scala 31:69]
        node _T_299 = mux(_T_261, UInt<3>("h04"), _T_298) @[Mux.scala 31:69]
        node _T_300 = mux(_T_260, UInt<2>("h03"), _T_299) @[Mux.scala 31:69]
        node _T_301 = mux(_T_259, UInt<2>("h02"), _T_300) @[Mux.scala 31:69]
        node _T_302 = mux(_T_258, UInt<1>("h01"), _T_301) @[Mux.scala 31:69]
        node _T_303 = mux(_T_257, UInt<1>("h00"), _T_302) @[Mux.scala 31:69]
        result_unsigned <= _T_303 @[Arithmetic_Logic_Unit.scala 140:25]
        skip @[Arithmetic_Logic_Unit.scala 139:18]
      skip @[Arithmetic_Logic_Unit.scala 136:65]
    node _T_305 = eq(op, UInt<6>("h027")) @[Arithmetic_Logic_Unit.scala 143:50]
    when _T_305 : @[Arithmetic_Logic_Unit.scala 143:67]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 144:23]
      skip @[Arithmetic_Logic_Unit.scala 143:67]
    wire fpResult : UInt<16> @[Arithmetic_Logic_Unit.scala 149:22]
    fpResult <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 150:12]
    wire _T_343 : UInt<6>[31] @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[0] <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[1] <= UInt<1>("h01") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[2] <= UInt<2>("h02") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[3] <= UInt<2>("h03") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[4] <= UInt<3>("h04") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[5] <= UInt<3>("h06") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[6] <= UInt<3>("h07") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[7] <= UInt<4>("h08") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[8] <= UInt<4>("h0a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[9] <= UInt<4>("h0c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[10] <= UInt<4>("h0e") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[11] <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[12] <= UInt<5>("h011") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[13] <= UInt<5>("h012") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[14] <= UInt<5>("h013") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[15] <= UInt<5>("h014") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[16] <= UInt<5>("h015") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[17] <= UInt<5>("h016") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[18] <= UInt<5>("h017") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[19] <= UInt<5>("h018") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[20] <= UInt<5>("h019") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[21] <= UInt<5>("h01a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[22] <= UInt<5>("h01b") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[23] <= UInt<5>("h01c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[24] <= UInt<6>("h021") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[25] <= UInt<6>("h022") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[26] <= UInt<6>("h023") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[27] <= UInt<6>("h024") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[28] <= UInt<6>("h025") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[29] <= UInt<6>("h026") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[30] <= UInt<6>("h027") @[Arithmetic_Logic_Unit.scala 171:15]
    node _T_377 = eq(_T_343[0], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_378 = eq(_T_343[1], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_379 = eq(_T_343[2], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_380 = eq(_T_343[3], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_381 = eq(_T_343[4], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_382 = eq(_T_343[5], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_383 = eq(_T_343[6], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_384 = eq(_T_343[7], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_385 = eq(_T_343[8], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_386 = eq(_T_343[9], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_387 = eq(_T_343[10], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_388 = eq(_T_343[11], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_389 = eq(_T_343[12], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_390 = eq(_T_343[13], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_391 = eq(_T_343[14], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_392 = eq(_T_343[15], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_393 = eq(_T_343[16], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_394 = eq(_T_343[17], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_395 = eq(_T_343[18], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_396 = eq(_T_343[19], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_397 = eq(_T_343[20], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_398 = eq(_T_343[21], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_399 = eq(_T_343[22], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_400 = eq(_T_343[23], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_401 = eq(_T_343[24], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_402 = eq(_T_343[25], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_403 = eq(_T_343[26], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_404 = eq(_T_343[27], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_405 = eq(_T_343[28], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_406 = eq(_T_343[29], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_407 = eq(_T_343[30], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_409 = or(UInt<1>("h00"), _T_377) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_410 = or(_T_409, _T_378) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_411 = or(_T_410, _T_379) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_412 = or(_T_411, _T_380) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_413 = or(_T_412, _T_381) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_414 = or(_T_413, _T_382) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_415 = or(_T_414, _T_383) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_416 = or(_T_415, _T_384) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_417 = or(_T_416, _T_385) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_418 = or(_T_417, _T_386) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_419 = or(_T_418, _T_387) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_420 = or(_T_419, _T_388) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_421 = or(_T_420, _T_389) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_422 = or(_T_421, _T_390) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_423 = or(_T_422, _T_391) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_424 = or(_T_423, _T_392) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_425 = or(_T_424, _T_393) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_426 = or(_T_425, _T_394) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_427 = or(_T_426, _T_395) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_428 = or(_T_427, _T_396) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_429 = or(_T_428, _T_397) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_430 = or(_T_429, _T_398) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_431 = or(_T_430, _T_399) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_432 = or(_T_431, _T_400) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_433 = or(_T_432, _T_401) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_434 = or(_T_433, _T_402) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_435 = or(_T_434, _T_403) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_436 = or(_T_435, _T_404) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_437 = or(_T_436, _T_405) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_438 = or(_T_437, _T_406) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_439 = or(_T_438, _T_407) @[Arithmetic_Logic_Unit.scala 171:55]
    when _T_439 : @[Arithmetic_Logic_Unit.scala 171:66]
      io.2 <= result_unsigned @[Arithmetic_Logic_Unit.scala 172:22]
      skip @[Arithmetic_Logic_Unit.scala 171:66]
    else : @[Arithmetic_Logic_Unit.scala 173:74]
      wire _T_448 : UInt<4>[5] @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[0] <= UInt<3>("h05") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[1] <= UInt<4>("h09") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[2] <= UInt<4>("h0b") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[3] <= UInt<4>("h0d") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[4] <= UInt<4>("h0f") @[Arithmetic_Logic_Unit.scala 173:24]
      node _T_456 = eq(_T_448[0], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_457 = eq(_T_448[1], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_458 = eq(_T_448[2], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_459 = eq(_T_448[3], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_460 = eq(_T_448[4], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_462 = or(UInt<1>("h00"), _T_456) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_463 = or(_T_462, _T_457) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_464 = or(_T_463, _T_458) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_465 = or(_T_464, _T_459) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_466 = or(_T_465, _T_460) @[Arithmetic_Logic_Unit.scala 173:62]
      when _T_466 : @[Arithmetic_Logic_Unit.scala 173:74]
        node _T_467 = asUInt(result_signed) @[Arithmetic_Logic_Unit.scala 174:45]
        io.2 <= _T_467 @[Arithmetic_Logic_Unit.scala 174:22]
        skip @[Arithmetic_Logic_Unit.scala 173:74]
      else : @[Arithmetic_Logic_Unit.scala 175:70]
        wire _T_484 : UInt<6>[13] @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[0] <= UInt<6>("h031") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[1] <= UInt<6>("h032") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[2] <= UInt<6>("h033") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[3] <= UInt<6>("h035") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[4] <= UInt<6>("h036") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[5] <= UInt<6>("h037") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[6] <= UInt<6>("h038") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[7] <= UInt<6>("h039") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[8] <= UInt<6>("h03a") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[9] <= UInt<6>("h03b") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[10] <= UInt<6>("h03c") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[11] <= UInt<6>("h03d") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[12] <= UInt<6>("h03e") @[Arithmetic_Logic_Unit.scala 175:22]
        node _T_500 = eq(_T_484[0], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_501 = eq(_T_484[1], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_502 = eq(_T_484[2], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_503 = eq(_T_484[3], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_504 = eq(_T_484[4], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_505 = eq(_T_484[5], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_506 = eq(_T_484[6], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_507 = eq(_T_484[7], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_508 = eq(_T_484[8], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_509 = eq(_T_484[9], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_510 = eq(_T_484[10], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_511 = eq(_T_484[11], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_512 = eq(_T_484[12], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_514 = or(UInt<1>("h00"), _T_500) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_515 = or(_T_514, _T_501) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_516 = or(_T_515, _T_502) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_517 = or(_T_516, _T_503) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_518 = or(_T_517, _T_504) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_519 = or(_T_518, _T_505) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_520 = or(_T_519, _T_506) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_521 = or(_T_520, _T_507) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_522 = or(_T_521, _T_508) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_523 = or(_T_522, _T_509) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_524 = or(_T_523, _T_510) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_525 = or(_T_524, _T_511) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_526 = or(_T_525, _T_512) @[Arithmetic_Logic_Unit.scala 175:59]
        when _T_526 : @[Arithmetic_Logic_Unit.scala 175:70]
          io.2 <= fpResult @[Arithmetic_Logic_Unit.scala 176:22]
          skip @[Arithmetic_Logic_Unit.scala 175:70]
        else : @[Arithmetic_Logic_Unit.scala 177:16]
          io.2 <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 178:22]
          skip @[Arithmetic_Logic_Unit.scala 177:16]
    node _T_528 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_530 = eq(_T_528, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 181:9]
    when _T_530 : @[Arithmetic_Logic_Unit.scala 181:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", op) @[Arithmetic_Logic_Unit.scala 181:9]
      skip @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_531 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_533 = eq(_T_531, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 182:9]
    when _T_533 : @[Arithmetic_Logic_Unit.scala 182:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.0) @[Arithmetic_Logic_Unit.scala 182:9]
      skip @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_534 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_536 = eq(_T_534, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 183:9]
    when _T_536 : @[Arithmetic_Logic_Unit.scala 183:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.1) @[Arithmetic_Logic_Unit.scala 183:9]
      skip @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_537 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_539 = eq(_T_537, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 184:9]
    when _T_539 : @[Arithmetic_Logic_Unit.scala 184:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.2) @[Arithmetic_Logic_Unit.scala 184:9]
      skip @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_540 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 185:9]
    node _T_542 = eq(_T_540, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 185:9]
    when _T_542 : @[Arithmetic_Logic_Unit.scala 185:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[Arithmetic_Logic_Unit.scala 185:9]
      skip @[Arithmetic_Logic_Unit.scala 185:9]
    
  module Delay_Pipe_Hw_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<3>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_29 : UInt<16>[6] @[Delay_Pipe.scala 50:29]
    _T_29[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[3] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[4] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_29[5] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[6], clock with : (reset => (reset, _T_29)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_83 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_84 = tail(_T_83, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_84 @[Delay_Pipe.scala 55:8]
    node _T_86 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_87 = tail(_T_86, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_87 @[Delay_Pipe.scala 56:8]
    node _T_88 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_88 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[3] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[4] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[5] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Delay_Pipe_Hw_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 2 : UInt<2>, 1 : UInt<16>, flip 0 : UInt<16>}
    
    reg head : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 45:21]
    reg tail : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 46:21]
    reg delay : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Delay_Pipe.scala 47:23]
    wire _T_26 : UInt<16>[3] @[Delay_Pipe.scala 50:29]
    _T_26[0] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[1] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    _T_26[2] <= UInt<16>("h00") @[Delay_Pipe.scala 50:29]
    reg fifo : UInt<16>[3], clock with : (reset => (reset, _T_26)) @[Delay_Pipe.scala 50:21]
    io.1 <= fifo[head] @[Delay_Pipe.scala 53:12]
    fifo[tail] <= io.0 @[Delay_Pipe.scala 54:14]
    node _T_62 = add(head, UInt<1>("h01")) @[Delay_Pipe.scala 55:16]
    node _T_63 = tail(_T_62, 1) @[Delay_Pipe.scala 55:16]
    head <= _T_63 @[Delay_Pipe.scala 55:8]
    node _T_65 = add(tail, UInt<1>("h01")) @[Delay_Pipe.scala 56:16]
    node _T_66 = tail(_T_65, 1) @[Delay_Pipe.scala 56:16]
    tail <= _T_66 @[Delay_Pipe.scala 56:8]
    node _T_67 = neq(delay, io.2) @[Delay_Pipe.scala 59:15]
    when _T_67 : @[Delay_Pipe.scala 59:32]
      fifo[0] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[1] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      fifo[2] <= UInt<1>("h00") @[Delay_Pipe.scala 61:15]
      tail <= io.2 @[Delay_Pipe.scala 63:10]
      delay <= io.2 @[Delay_Pipe.scala 64:11]
      skip @[Delay_Pipe.scala 59:32]
    
  module Arithmetic_Logic_Unit_Hw_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<5>, flip 3 : UInt<16>, 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire op : UInt<5> @[Arithmetic_Logic_Unit.scala 52:21]
    op <= io.4 @[Arithmetic_Logic_Unit.scala 53:6]
    wire operand0_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 56:29]
    wire operand1_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 57:29]
    wire operand2_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 58:29]
    wire operand0_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 60:31]
    wire operand1_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 61:31]
    wire operand2_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 62:31]
    wire result_signed : SInt<16> @[Arithmetic_Logic_Unit.scala 64:27]
    wire result_unsigned : UInt<16> @[Arithmetic_Logic_Unit.scala 65:29]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 66:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 66:40]
    operand0_unsigned <= io.0 @[Arithmetic_Logic_Unit.scala 69:21]
    operand1_unsigned <= io.1 @[Arithmetic_Logic_Unit.scala 70:21]
    operand2_unsigned <= io.3 @[Arithmetic_Logic_Unit.scala 71:55]
    node _T_31 = asSInt(io.0) @[Arithmetic_Logic_Unit.scala 72:58]
    operand0_signed <= _T_31 @[Arithmetic_Logic_Unit.scala 72:19]
    node _T_32 = asSInt(io.1) @[Arithmetic_Logic_Unit.scala 73:56]
    operand1_signed <= _T_32 @[Arithmetic_Logic_Unit.scala 73:19]
    node _T_33 = asSInt(io.3) @[Arithmetic_Logic_Unit.scala 74:84]
    operand2_signed <= _T_33 @[Arithmetic_Logic_Unit.scala 74:53]
    result_signed <= asSInt(UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 77:17]
    result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 78:19]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 91:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 92:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 93:58]
    node _T_40 = eq(op, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 95:49]
    when _T_40 : @[Arithmetic_Logic_Unit.scala 95:65]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 95:82]
      skip @[Arithmetic_Logic_Unit.scala 95:65]
    node _T_43 = eq(op, UInt<1>("h01")) @[Arithmetic_Logic_Unit.scala 96:49]
    when _T_43 : @[Arithmetic_Logic_Unit.scala 96:65]
      result_unsigned <= operand0_unsigned @[Arithmetic_Logic_Unit.scala 96:82]
      skip @[Arithmetic_Logic_Unit.scala 96:65]
    node _T_45 = eq(op, UInt<2>("h02")) @[Arithmetic_Logic_Unit.scala 97:49]
    when _T_45 : @[Arithmetic_Logic_Unit.scala 97:65]
      node _T_46 = add(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 97:103]
      node _T_47 = tail(_T_46, 1) @[Arithmetic_Logic_Unit.scala 97:103]
      result_unsigned <= _T_47 @[Arithmetic_Logic_Unit.scala 97:82]
      skip @[Arithmetic_Logic_Unit.scala 97:65]
    node _T_49 = eq(op, UInt<2>("h03")) @[Arithmetic_Logic_Unit.scala 98:49]
    when _T_49 : @[Arithmetic_Logic_Unit.scala 98:65]
      node _T_50 = sub(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_51 = asUInt(_T_50) @[Arithmetic_Logic_Unit.scala 98:103]
      node _T_52 = tail(_T_51, 1) @[Arithmetic_Logic_Unit.scala 98:103]
      result_unsigned <= _T_52 @[Arithmetic_Logic_Unit.scala 98:82]
      skip @[Arithmetic_Logic_Unit.scala 98:65]
    node _T_54 = eq(op, UInt<3>("h04")) @[Arithmetic_Logic_Unit.scala 99:49]
    when _T_54 : @[Arithmetic_Logic_Unit.scala 99:65]
      node _T_55 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 99:123]
      node _T_56 = dshl(operand0_unsigned, _T_55) @[Arithmetic_Logic_Unit.scala 99:103]
      result_unsigned <= _T_56 @[Arithmetic_Logic_Unit.scala 99:82]
      skip @[Arithmetic_Logic_Unit.scala 99:65]
    node _T_58 = eq(op, UInt<3>("h06")) @[Arithmetic_Logic_Unit.scala 100:49]
    when _T_58 : @[Arithmetic_Logic_Unit.scala 100:65]
      node _T_59 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 100:103]
      result_unsigned <= _T_59 @[Arithmetic_Logic_Unit.scala 100:82]
      skip @[Arithmetic_Logic_Unit.scala 100:65]
    node _T_61 = eq(op, UInt<3>("h07")) @[Arithmetic_Logic_Unit.scala 101:48]
    when _T_61 : @[Arithmetic_Logic_Unit.scala 101:63]
      node _T_62 = eq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 101:101]
      result_unsigned <= _T_62 @[Arithmetic_Logic_Unit.scala 101:80]
      skip @[Arithmetic_Logic_Unit.scala 101:63]
    node _T_64 = eq(op, UInt<4>("h08")) @[Arithmetic_Logic_Unit.scala 102:48]
    when _T_64 : @[Arithmetic_Logic_Unit.scala 102:63]
      node _T_65 = neq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 102:101]
      result_unsigned <= _T_65 @[Arithmetic_Logic_Unit.scala 102:80]
      skip @[Arithmetic_Logic_Unit.scala 102:63]
    node _T_67 = eq(op, UInt<4>("h0a")) @[Arithmetic_Logic_Unit.scala 103:49]
    when _T_67 : @[Arithmetic_Logic_Unit.scala 103:65]
      node _T_68 = gt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 103:103]
      result_unsigned <= _T_68 @[Arithmetic_Logic_Unit.scala 103:82]
      skip @[Arithmetic_Logic_Unit.scala 103:65]
    node _T_70 = eq(op, UInt<4>("h0c")) @[Arithmetic_Logic_Unit.scala 104:49]
    when _T_70 : @[Arithmetic_Logic_Unit.scala 104:66]
      node _T_71 = lt(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 104:104]
      result_unsigned <= _T_71 @[Arithmetic_Logic_Unit.scala 104:83]
      skip @[Arithmetic_Logic_Unit.scala 104:66]
    node _T_73 = eq(op, UInt<4>("h0e")) @[Arithmetic_Logic_Unit.scala 105:49]
    when _T_73 : @[Arithmetic_Logic_Unit.scala 105:65]
      node _T_74 = geq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 105:103]
      result_unsigned <= _T_74 @[Arithmetic_Logic_Unit.scala 105:82]
      skip @[Arithmetic_Logic_Unit.scala 105:65]
    node _T_76 = eq(op, UInt<5>("h010")) @[Arithmetic_Logic_Unit.scala 106:49]
    when _T_76 : @[Arithmetic_Logic_Unit.scala 106:65]
      node _T_77 = leq(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 106:103]
      result_unsigned <= _T_77 @[Arithmetic_Logic_Unit.scala 106:82]
      skip @[Arithmetic_Logic_Unit.scala 106:65]
    node _T_79 = eq(op, UInt<5>("h011")) @[Arithmetic_Logic_Unit.scala 107:50]
    when _T_79 : @[Arithmetic_Logic_Unit.scala 107:67]
      node _T_80 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 107:105]
      result_unsigned <= _T_80 @[Arithmetic_Logic_Unit.scala 107:84]
      skip @[Arithmetic_Logic_Unit.scala 107:67]
    node _T_82 = eq(op, UInt<5>("h012")) @[Arithmetic_Logic_Unit.scala 108:51]
    when _T_82 : @[Arithmetic_Logic_Unit.scala 108:69]
      node _T_83 = and(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 108:109]
      node _T_84 = not(_T_83) @[Arithmetic_Logic_Unit.scala 108:89]
      result_unsigned <= _T_84 @[Arithmetic_Logic_Unit.scala 108:86]
      skip @[Arithmetic_Logic_Unit.scala 108:69]
    node _T_86 = eq(op, UInt<5>("h013")) @[Arithmetic_Logic_Unit.scala 109:49]
    when _T_86 : @[Arithmetic_Logic_Unit.scala 109:65]
      node _T_87 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 109:103]
      result_unsigned <= _T_87 @[Arithmetic_Logic_Unit.scala 109:82]
      skip @[Arithmetic_Logic_Unit.scala 109:65]
    node _T_89 = eq(op, UInt<5>("h014")) @[Arithmetic_Logic_Unit.scala 110:50]
    when _T_89 : @[Arithmetic_Logic_Unit.scala 110:67]
      node _T_90 = or(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 110:107]
      node _T_91 = not(_T_90) @[Arithmetic_Logic_Unit.scala 110:87]
      result_unsigned <= _T_91 @[Arithmetic_Logic_Unit.scala 110:84]
      skip @[Arithmetic_Logic_Unit.scala 110:67]
    node _T_93 = eq(op, UInt<5>("h015")) @[Arithmetic_Logic_Unit.scala 111:50]
    when _T_93 : @[Arithmetic_Logic_Unit.scala 111:67]
      node _T_94 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 111:105]
      result_unsigned <= _T_94 @[Arithmetic_Logic_Unit.scala 111:84]
      skip @[Arithmetic_Logic_Unit.scala 111:67]
    node _T_96 = eq(op, UInt<5>("h016")) @[Arithmetic_Logic_Unit.scala 112:51]
    when _T_96 : @[Arithmetic_Logic_Unit.scala 112:69]
      node _T_97 = xor(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 112:109]
      node _T_98 = not(_T_97) @[Arithmetic_Logic_Unit.scala 112:89]
      result_unsigned <= _T_98 @[Arithmetic_Logic_Unit.scala 112:86]
      skip @[Arithmetic_Logic_Unit.scala 112:69]
    node _T_100 = eq(op, UInt<5>("h017")) @[Arithmetic_Logic_Unit.scala 113:50]
    when _T_100 : @[Arithmetic_Logic_Unit.scala 113:67]
      node _T_101 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 113:113]
      result_unsigned <= _T_101 @[Arithmetic_Logic_Unit.scala 113:84]
      skip @[Arithmetic_Logic_Unit.scala 113:67]
    node _T_103 = eq(op, UInt<5>("h018")) @[Arithmetic_Logic_Unit.scala 114:51]
    when _T_103 : @[Arithmetic_Logic_Unit.scala 114:69]
      node _T_104 = and(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 114:117]
      node _T_106 = eq(_T_104, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 114:89]
      result_unsigned <= _T_106 @[Arithmetic_Logic_Unit.scala 114:86]
      skip @[Arithmetic_Logic_Unit.scala 114:69]
    node _T_108 = eq(op, UInt<5>("h019")) @[Arithmetic_Logic_Unit.scala 115:49]
    when _T_108 : @[Arithmetic_Logic_Unit.scala 115:65]
      node _T_109 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 115:111]
      result_unsigned <= _T_109 @[Arithmetic_Logic_Unit.scala 115:82]
      skip @[Arithmetic_Logic_Unit.scala 115:65]
    node _T_111 = eq(op, UInt<5>("h01a")) @[Arithmetic_Logic_Unit.scala 116:50]
    when _T_111 : @[Arithmetic_Logic_Unit.scala 116:67]
      node _T_112 = or(logical_operand0_unsigned, logical_operand1_unsigned) @[Arithmetic_Logic_Unit.scala 116:115]
      node _T_114 = eq(_T_112, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 116:87]
      result_unsigned <= _T_114 @[Arithmetic_Logic_Unit.scala 116:84]
      skip @[Arithmetic_Logic_Unit.scala 116:67]
    node _T_116 = eq(op, UInt<5>("h01b")) @[Arithmetic_Logic_Unit.scala 117:50]
    when _T_116 : @[Arithmetic_Logic_Unit.scala 117:67]
      node _T_118 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:87]
      node _T_120 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 117:116]
      node _T_121 = xor(_T_118, _T_120) @[Arithmetic_Logic_Unit.scala 117:114]
      result_unsigned <= _T_121 @[Arithmetic_Logic_Unit.scala 117:84]
      skip @[Arithmetic_Logic_Unit.scala 117:67]
    node _T_123 = eq(op, UInt<5>("h01c")) @[Arithmetic_Logic_Unit.scala 118:51]
    when _T_123 : @[Arithmetic_Logic_Unit.scala 118:69]
      node _T_125 = eq(logical_operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:91]
      node _T_127 = eq(logical_operand1_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:120]
      node _T_128 = xor(_T_125, _T_127) @[Arithmetic_Logic_Unit.scala 118:118]
      node _T_130 = eq(_T_128, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 118:89]
      result_unsigned <= _T_130 @[Arithmetic_Logic_Unit.scala 118:86]
      skip @[Arithmetic_Logic_Unit.scala 118:69]
    node _T_132 = eq(op, UInt<6>("h021")) @[Arithmetic_Logic_Unit.scala 119:48]
    when _T_132 : @[Arithmetic_Logic_Unit.scala 119:63]
      node _T_133 = dshr(operand0_unsigned, operand1_unsigned) @[Arithmetic_Logic_Unit.scala 119:100]
      node _T_134 = bits(_T_133, 0, 0) @[Arithmetic_Logic_Unit.scala 119:100]
      result_unsigned <= _T_134 @[Arithmetic_Logic_Unit.scala 119:80]
      skip @[Arithmetic_Logic_Unit.scala 119:63]
    node _T_136 = eq(op, UInt<6>("h022")) @[Arithmetic_Logic_Unit.scala 120:48]
    when _T_136 : @[Arithmetic_Logic_Unit.scala 120:63]
      when logical_operand2_unsigned : @[Arithmetic_Logic_Unit.scala 121:38]
        node _T_138 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 122:73]
        node _T_139 = dshl(UInt<1>("h01"), _T_138) @[Arithmetic_Logic_Unit.scala 122:53]
        node _T_140 = or(operand0_unsigned, _T_139) @[Arithmetic_Logic_Unit.scala 122:46]
        result_unsigned <= _T_140 @[Arithmetic_Logic_Unit.scala 122:25]
        skip @[Arithmetic_Logic_Unit.scala 121:38]
      else : @[Arithmetic_Logic_Unit.scala 123:19]
        node _T_142 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 124:75]
        node _T_143 = dshl(UInt<1>("h01"), _T_142) @[Arithmetic_Logic_Unit.scala 124:55]
        node _T_144 = not(_T_143) @[Arithmetic_Logic_Unit.scala 124:49]
        node _T_145 = and(operand0_unsigned, _T_144) @[Arithmetic_Logic_Unit.scala 124:46]
        result_unsigned <= _T_145 @[Arithmetic_Logic_Unit.scala 124:25]
        skip @[Arithmetic_Logic_Unit.scala 123:19]
      skip @[Arithmetic_Logic_Unit.scala 120:63]
    node _T_147 = eq(op, UInt<6>("h023")) @[Arithmetic_Logic_Unit.scala 127:48]
    when _T_147 : @[Arithmetic_Logic_Unit.scala 127:63]
      node _T_149 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 127:130]
      node _T_150 = dshl(UInt<1>("h01"), _T_149) @[Arithmetic_Logic_Unit.scala 127:110]
      node _T_151 = not(_T_150) @[Arithmetic_Logic_Unit.scala 127:104]
      node _T_152 = and(operand0_unsigned, _T_151) @[Arithmetic_Logic_Unit.scala 127:101]
      result_unsigned <= _T_152 @[Arithmetic_Logic_Unit.scala 127:80]
      skip @[Arithmetic_Logic_Unit.scala 127:63]
    node _T_154 = eq(op, UInt<6>("h024")) @[Arithmetic_Logic_Unit.scala 128:48]
    when _T_154 : @[Arithmetic_Logic_Unit.scala 128:63]
      node _T_156 = bits(operand1_unsigned, 15, 0) @[Arithmetic_Logic_Unit.scala 128:128]
      node _T_157 = dshl(UInt<1>("h01"), _T_156) @[Arithmetic_Logic_Unit.scala 128:108]
      node _T_158 = or(operand0_unsigned, _T_157) @[Arithmetic_Logic_Unit.scala 128:101]
      result_unsigned <= _T_158 @[Arithmetic_Logic_Unit.scala 128:80]
      skip @[Arithmetic_Logic_Unit.scala 128:63]
    node _T_160 = eq(op, UInt<6>("h025")) @[Arithmetic_Logic_Unit.scala 129:49]
    when _T_160 : @[Arithmetic_Logic_Unit.scala 129:65]
      node _T_162 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 130:30]
      when _T_162 : @[Arithmetic_Logic_Unit.scala 130:38]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 131:25]
        skip @[Arithmetic_Logic_Unit.scala 130:38]
      else : @[Arithmetic_Logic_Unit.scala 132:18]
        node _T_166 = shl(UInt<8>("h0ff"), 8) @[Bitwise.scala 102:47]
        node _T_167 = xor(UInt<16>("h0ffff"), _T_166) @[Bitwise.scala 102:21]
        node _T_168 = shr(operand0_unsigned, 8) @[Bitwise.scala 103:21]
        node _T_169 = and(_T_168, _T_167) @[Bitwise.scala 103:31]
        node _T_170 = bits(operand0_unsigned, 7, 0) @[Bitwise.scala 103:46]
        node _T_171 = shl(_T_170, 8) @[Bitwise.scala 103:65]
        node _T_172 = not(_T_167) @[Bitwise.scala 103:77]
        node _T_173 = and(_T_171, _T_172) @[Bitwise.scala 103:75]
        node _T_174 = or(_T_169, _T_173) @[Bitwise.scala 103:39]
        node _T_175 = bits(_T_167, 11, 0) @[Bitwise.scala 102:28]
        node _T_176 = shl(_T_175, 4) @[Bitwise.scala 102:47]
        node _T_177 = xor(_T_167, _T_176) @[Bitwise.scala 102:21]
        node _T_178 = shr(_T_174, 4) @[Bitwise.scala 103:21]
        node _T_179 = and(_T_178, _T_177) @[Bitwise.scala 103:31]
        node _T_180 = bits(_T_174, 11, 0) @[Bitwise.scala 103:46]
        node _T_181 = shl(_T_180, 4) @[Bitwise.scala 103:65]
        node _T_182 = not(_T_177) @[Bitwise.scala 103:77]
        node _T_183 = and(_T_181, _T_182) @[Bitwise.scala 103:75]
        node _T_184 = or(_T_179, _T_183) @[Bitwise.scala 103:39]
        node _T_185 = bits(_T_177, 13, 0) @[Bitwise.scala 102:28]
        node _T_186 = shl(_T_185, 2) @[Bitwise.scala 102:47]
        node _T_187 = xor(_T_177, _T_186) @[Bitwise.scala 102:21]
        node _T_188 = shr(_T_184, 2) @[Bitwise.scala 103:21]
        node _T_189 = and(_T_188, _T_187) @[Bitwise.scala 103:31]
        node _T_190 = bits(_T_184, 13, 0) @[Bitwise.scala 103:46]
        node _T_191 = shl(_T_190, 2) @[Bitwise.scala 103:65]
        node _T_192 = not(_T_187) @[Bitwise.scala 103:77]
        node _T_193 = and(_T_191, _T_192) @[Bitwise.scala 103:75]
        node _T_194 = or(_T_189, _T_193) @[Bitwise.scala 103:39]
        node _T_195 = bits(_T_187, 14, 0) @[Bitwise.scala 102:28]
        node _T_196 = shl(_T_195, 1) @[Bitwise.scala 102:47]
        node _T_197 = xor(_T_187, _T_196) @[Bitwise.scala 102:21]
        node _T_198 = shr(_T_194, 1) @[Bitwise.scala 103:21]
        node _T_199 = and(_T_198, _T_197) @[Bitwise.scala 103:31]
        node _T_200 = bits(_T_194, 14, 0) @[Bitwise.scala 103:46]
        node _T_201 = shl(_T_200, 1) @[Bitwise.scala 103:65]
        node _T_202 = not(_T_197) @[Bitwise.scala 103:77]
        node _T_203 = and(_T_201, _T_202) @[Bitwise.scala 103:75]
        node _T_204 = or(_T_199, _T_203) @[Bitwise.scala 103:39]
        node _T_205 = bits(_T_204, 0, 0) @[OneHot.scala 39:40]
        node _T_206 = bits(_T_204, 1, 1) @[OneHot.scala 39:40]
        node _T_207 = bits(_T_204, 2, 2) @[OneHot.scala 39:40]
        node _T_208 = bits(_T_204, 3, 3) @[OneHot.scala 39:40]
        node _T_209 = bits(_T_204, 4, 4) @[OneHot.scala 39:40]
        node _T_210 = bits(_T_204, 5, 5) @[OneHot.scala 39:40]
        node _T_211 = bits(_T_204, 6, 6) @[OneHot.scala 39:40]
        node _T_212 = bits(_T_204, 7, 7) @[OneHot.scala 39:40]
        node _T_213 = bits(_T_204, 8, 8) @[OneHot.scala 39:40]
        node _T_214 = bits(_T_204, 9, 9) @[OneHot.scala 39:40]
        node _T_215 = bits(_T_204, 10, 10) @[OneHot.scala 39:40]
        node _T_216 = bits(_T_204, 11, 11) @[OneHot.scala 39:40]
        node _T_217 = bits(_T_204, 12, 12) @[OneHot.scala 39:40]
        node _T_218 = bits(_T_204, 13, 13) @[OneHot.scala 39:40]
        node _T_219 = bits(_T_204, 14, 14) @[OneHot.scala 39:40]
        node _T_220 = bits(_T_204, 15, 15) @[OneHot.scala 39:40]
        node _T_237 = mux(_T_219, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_238 = mux(_T_218, UInt<4>("h0d"), _T_237) @[Mux.scala 31:69]
        node _T_239 = mux(_T_217, UInt<4>("h0c"), _T_238) @[Mux.scala 31:69]
        node _T_240 = mux(_T_216, UInt<4>("h0b"), _T_239) @[Mux.scala 31:69]
        node _T_241 = mux(_T_215, UInt<4>("h0a"), _T_240) @[Mux.scala 31:69]
        node _T_242 = mux(_T_214, UInt<4>("h09"), _T_241) @[Mux.scala 31:69]
        node _T_243 = mux(_T_213, UInt<4>("h08"), _T_242) @[Mux.scala 31:69]
        node _T_244 = mux(_T_212, UInt<3>("h07"), _T_243) @[Mux.scala 31:69]
        node _T_245 = mux(_T_211, UInt<3>("h06"), _T_244) @[Mux.scala 31:69]
        node _T_246 = mux(_T_210, UInt<3>("h05"), _T_245) @[Mux.scala 31:69]
        node _T_247 = mux(_T_209, UInt<3>("h04"), _T_246) @[Mux.scala 31:69]
        node _T_248 = mux(_T_208, UInt<2>("h03"), _T_247) @[Mux.scala 31:69]
        node _T_249 = mux(_T_207, UInt<2>("h02"), _T_248) @[Mux.scala 31:69]
        node _T_250 = mux(_T_206, UInt<1>("h01"), _T_249) @[Mux.scala 31:69]
        node _T_251 = mux(_T_205, UInt<1>("h00"), _T_250) @[Mux.scala 31:69]
        result_unsigned <= _T_251 @[Arithmetic_Logic_Unit.scala 133:25]
        skip @[Arithmetic_Logic_Unit.scala 132:18]
      skip @[Arithmetic_Logic_Unit.scala 129:65]
    node _T_253 = eq(op, UInt<6>("h026")) @[Arithmetic_Logic_Unit.scala 136:49]
    when _T_253 : @[Arithmetic_Logic_Unit.scala 136:65]
      node _T_255 = eq(operand0_unsigned, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 137:30]
      when _T_255 : @[Arithmetic_Logic_Unit.scala 137:39]
        result_unsigned <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 138:25]
        skip @[Arithmetic_Logic_Unit.scala 137:39]
      else : @[Arithmetic_Logic_Unit.scala 139:18]
        node _T_257 = bits(operand0_unsigned, 0, 0) @[OneHot.scala 39:40]
        node _T_258 = bits(operand0_unsigned, 1, 1) @[OneHot.scala 39:40]
        node _T_259 = bits(operand0_unsigned, 2, 2) @[OneHot.scala 39:40]
        node _T_260 = bits(operand0_unsigned, 3, 3) @[OneHot.scala 39:40]
        node _T_261 = bits(operand0_unsigned, 4, 4) @[OneHot.scala 39:40]
        node _T_262 = bits(operand0_unsigned, 5, 5) @[OneHot.scala 39:40]
        node _T_263 = bits(operand0_unsigned, 6, 6) @[OneHot.scala 39:40]
        node _T_264 = bits(operand0_unsigned, 7, 7) @[OneHot.scala 39:40]
        node _T_265 = bits(operand0_unsigned, 8, 8) @[OneHot.scala 39:40]
        node _T_266 = bits(operand0_unsigned, 9, 9) @[OneHot.scala 39:40]
        node _T_267 = bits(operand0_unsigned, 10, 10) @[OneHot.scala 39:40]
        node _T_268 = bits(operand0_unsigned, 11, 11) @[OneHot.scala 39:40]
        node _T_269 = bits(operand0_unsigned, 12, 12) @[OneHot.scala 39:40]
        node _T_270 = bits(operand0_unsigned, 13, 13) @[OneHot.scala 39:40]
        node _T_271 = bits(operand0_unsigned, 14, 14) @[OneHot.scala 39:40]
        node _T_272 = bits(operand0_unsigned, 15, 15) @[OneHot.scala 39:40]
        node _T_289 = mux(_T_271, UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
        node _T_290 = mux(_T_270, UInt<4>("h0d"), _T_289) @[Mux.scala 31:69]
        node _T_291 = mux(_T_269, UInt<4>("h0c"), _T_290) @[Mux.scala 31:69]
        node _T_292 = mux(_T_268, UInt<4>("h0b"), _T_291) @[Mux.scala 31:69]
        node _T_293 = mux(_T_267, UInt<4>("h0a"), _T_292) @[Mux.scala 31:69]
        node _T_294 = mux(_T_266, UInt<4>("h09"), _T_293) @[Mux.scala 31:69]
        node _T_295 = mux(_T_265, UInt<4>("h08"), _T_294) @[Mux.scala 31:69]
        node _T_296 = mux(_T_264, UInt<3>("h07"), _T_295) @[Mux.scala 31:69]
        node _T_297 = mux(_T_263, UInt<3>("h06"), _T_296) @[Mux.scala 31:69]
        node _T_298 = mux(_T_262, UInt<3>("h05"), _T_297) @[Mux.scala 31:69]
        node _T_299 = mux(_T_261, UInt<3>("h04"), _T_298) @[Mux.scala 31:69]
        node _T_300 = mux(_T_260, UInt<2>("h03"), _T_299) @[Mux.scala 31:69]
        node _T_301 = mux(_T_259, UInt<2>("h02"), _T_300) @[Mux.scala 31:69]
        node _T_302 = mux(_T_258, UInt<1>("h01"), _T_301) @[Mux.scala 31:69]
        node _T_303 = mux(_T_257, UInt<1>("h00"), _T_302) @[Mux.scala 31:69]
        result_unsigned <= _T_303 @[Arithmetic_Logic_Unit.scala 140:25]
        skip @[Arithmetic_Logic_Unit.scala 139:18]
      skip @[Arithmetic_Logic_Unit.scala 136:65]
    node _T_305 = eq(op, UInt<6>("h027")) @[Arithmetic_Logic_Unit.scala 143:50]
    when _T_305 : @[Arithmetic_Logic_Unit.scala 143:67]
      result_unsigned <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 144:23]
      skip @[Arithmetic_Logic_Unit.scala 143:67]
    wire fpResult : UInt<16> @[Arithmetic_Logic_Unit.scala 149:22]
    fpResult <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 150:12]
    wire _T_343 : UInt<6>[31] @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[0] <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[1] <= UInt<1>("h01") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[2] <= UInt<2>("h02") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[3] <= UInt<2>("h03") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[4] <= UInt<3>("h04") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[5] <= UInt<3>("h06") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[6] <= UInt<3>("h07") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[7] <= UInt<4>("h08") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[8] <= UInt<4>("h0a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[9] <= UInt<4>("h0c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[10] <= UInt<4>("h0e") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[11] <= UInt<5>("h010") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[12] <= UInt<5>("h011") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[13] <= UInt<5>("h012") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[14] <= UInt<5>("h013") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[15] <= UInt<5>("h014") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[16] <= UInt<5>("h015") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[17] <= UInt<5>("h016") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[18] <= UInt<5>("h017") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[19] <= UInt<5>("h018") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[20] <= UInt<5>("h019") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[21] <= UInt<5>("h01a") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[22] <= UInt<5>("h01b") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[23] <= UInt<5>("h01c") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[24] <= UInt<6>("h021") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[25] <= UInt<6>("h022") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[26] <= UInt<6>("h023") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[27] <= UInt<6>("h024") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[28] <= UInt<6>("h025") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[29] <= UInt<6>("h026") @[Arithmetic_Logic_Unit.scala 171:15]
    _T_343[30] <= UInt<6>("h027") @[Arithmetic_Logic_Unit.scala 171:15]
    node _T_377 = eq(_T_343[0], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_378 = eq(_T_343[1], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_379 = eq(_T_343[2], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_380 = eq(_T_343[3], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_381 = eq(_T_343[4], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_382 = eq(_T_343[5], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_383 = eq(_T_343[6], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_384 = eq(_T_343[7], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_385 = eq(_T_343[8], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_386 = eq(_T_343[9], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_387 = eq(_T_343[10], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_388 = eq(_T_343[11], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_389 = eq(_T_343[12], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_390 = eq(_T_343[13], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_391 = eq(_T_343[14], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_392 = eq(_T_343[15], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_393 = eq(_T_343[16], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_394 = eq(_T_343[17], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_395 = eq(_T_343[18], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_396 = eq(_T_343[19], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_397 = eq(_T_343[20], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_398 = eq(_T_343[21], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_399 = eq(_T_343[22], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_400 = eq(_T_343[23], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_401 = eq(_T_343[24], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_402 = eq(_T_343[25], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_403 = eq(_T_343[26], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_404 = eq(_T_343[27], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_405 = eq(_T_343[28], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_406 = eq(_T_343[29], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_407 = eq(_T_343[30], op) @[Arithmetic_Logic_Unit.scala 171:58]
    node _T_409 = or(UInt<1>("h00"), _T_377) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_410 = or(_T_409, _T_378) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_411 = or(_T_410, _T_379) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_412 = or(_T_411, _T_380) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_413 = or(_T_412, _T_381) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_414 = or(_T_413, _T_382) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_415 = or(_T_414, _T_383) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_416 = or(_T_415, _T_384) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_417 = or(_T_416, _T_385) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_418 = or(_T_417, _T_386) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_419 = or(_T_418, _T_387) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_420 = or(_T_419, _T_388) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_421 = or(_T_420, _T_389) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_422 = or(_T_421, _T_390) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_423 = or(_T_422, _T_391) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_424 = or(_T_423, _T_392) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_425 = or(_T_424, _T_393) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_426 = or(_T_425, _T_394) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_427 = or(_T_426, _T_395) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_428 = or(_T_427, _T_396) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_429 = or(_T_428, _T_397) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_430 = or(_T_429, _T_398) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_431 = or(_T_430, _T_399) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_432 = or(_T_431, _T_400) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_433 = or(_T_432, _T_401) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_434 = or(_T_433, _T_402) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_435 = or(_T_434, _T_403) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_436 = or(_T_435, _T_404) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_437 = or(_T_436, _T_405) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_438 = or(_T_437, _T_406) @[Arithmetic_Logic_Unit.scala 171:55]
    node _T_439 = or(_T_438, _T_407) @[Arithmetic_Logic_Unit.scala 171:55]
    when _T_439 : @[Arithmetic_Logic_Unit.scala 171:66]
      io.2 <= result_unsigned @[Arithmetic_Logic_Unit.scala 172:22]
      skip @[Arithmetic_Logic_Unit.scala 171:66]
    else : @[Arithmetic_Logic_Unit.scala 173:74]
      wire _T_448 : UInt<4>[5] @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[0] <= UInt<3>("h05") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[1] <= UInt<4>("h09") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[2] <= UInt<4>("h0b") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[3] <= UInt<4>("h0d") @[Arithmetic_Logic_Unit.scala 173:24]
      _T_448[4] <= UInt<4>("h0f") @[Arithmetic_Logic_Unit.scala 173:24]
      node _T_456 = eq(_T_448[0], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_457 = eq(_T_448[1], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_458 = eq(_T_448[2], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_459 = eq(_T_448[3], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_460 = eq(_T_448[4], op) @[Arithmetic_Logic_Unit.scala 173:66]
      node _T_462 = or(UInt<1>("h00"), _T_456) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_463 = or(_T_462, _T_457) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_464 = or(_T_463, _T_458) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_465 = or(_T_464, _T_459) @[Arithmetic_Logic_Unit.scala 173:62]
      node _T_466 = or(_T_465, _T_460) @[Arithmetic_Logic_Unit.scala 173:62]
      when _T_466 : @[Arithmetic_Logic_Unit.scala 173:74]
        node _T_467 = asUInt(result_signed) @[Arithmetic_Logic_Unit.scala 174:45]
        io.2 <= _T_467 @[Arithmetic_Logic_Unit.scala 174:22]
        skip @[Arithmetic_Logic_Unit.scala 173:74]
      else : @[Arithmetic_Logic_Unit.scala 175:70]
        wire _T_484 : UInt<6>[13] @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[0] <= UInt<6>("h031") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[1] <= UInt<6>("h032") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[2] <= UInt<6>("h033") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[3] <= UInt<6>("h035") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[4] <= UInt<6>("h036") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[5] <= UInt<6>("h037") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[6] <= UInt<6>("h038") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[7] <= UInt<6>("h039") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[8] <= UInt<6>("h03a") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[9] <= UInt<6>("h03b") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[10] <= UInt<6>("h03c") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[11] <= UInt<6>("h03d") @[Arithmetic_Logic_Unit.scala 175:22]
        _T_484[12] <= UInt<6>("h03e") @[Arithmetic_Logic_Unit.scala 175:22]
        node _T_500 = eq(_T_484[0], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_501 = eq(_T_484[1], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_502 = eq(_T_484[2], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_503 = eq(_T_484[3], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_504 = eq(_T_484[4], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_505 = eq(_T_484[5], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_506 = eq(_T_484[6], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_507 = eq(_T_484[7], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_508 = eq(_T_484[8], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_509 = eq(_T_484[9], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_510 = eq(_T_484[10], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_511 = eq(_T_484[11], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_512 = eq(_T_484[12], op) @[Arithmetic_Logic_Unit.scala 175:62]
        node _T_514 = or(UInt<1>("h00"), _T_500) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_515 = or(_T_514, _T_501) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_516 = or(_T_515, _T_502) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_517 = or(_T_516, _T_503) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_518 = or(_T_517, _T_504) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_519 = or(_T_518, _T_505) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_520 = or(_T_519, _T_506) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_521 = or(_T_520, _T_507) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_522 = or(_T_521, _T_508) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_523 = or(_T_522, _T_509) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_524 = or(_T_523, _T_510) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_525 = or(_T_524, _T_511) @[Arithmetic_Logic_Unit.scala 175:59]
        node _T_526 = or(_T_525, _T_512) @[Arithmetic_Logic_Unit.scala 175:59]
        when _T_526 : @[Arithmetic_Logic_Unit.scala 175:70]
          io.2 <= fpResult @[Arithmetic_Logic_Unit.scala 176:22]
          skip @[Arithmetic_Logic_Unit.scala 175:70]
        else : @[Arithmetic_Logic_Unit.scala 177:16]
          io.2 <= UInt<1>("h00") @[Arithmetic_Logic_Unit.scala 178:22]
          skip @[Arithmetic_Logic_Unit.scala 177:16]
    node _T_528 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_530 = eq(_T_528, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 181:9]
    when _T_530 : @[Arithmetic_Logic_Unit.scala 181:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", op) @[Arithmetic_Logic_Unit.scala 181:9]
      skip @[Arithmetic_Logic_Unit.scala 181:9]
    node _T_531 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_533 = eq(_T_531, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 182:9]
    when _T_533 : @[Arithmetic_Logic_Unit.scala 182:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.0) @[Arithmetic_Logic_Unit.scala 182:9]
      skip @[Arithmetic_Logic_Unit.scala 182:9]
    node _T_534 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_536 = eq(_T_534, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 183:9]
    when _T_536 : @[Arithmetic_Logic_Unit.scala 183:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.1) @[Arithmetic_Logic_Unit.scala 183:9]
      skip @[Arithmetic_Logic_Unit.scala 183:9]
    node _T_537 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_539 = eq(_T_537, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 184:9]
    when _T_539 : @[Arithmetic_Logic_Unit.scala 184:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.2) @[Arithmetic_Logic_Unit.scala 184:9]
      skip @[Arithmetic_Logic_Unit.scala 184:9]
    node _T_540 = bits(reset, 0, 0) @[Arithmetic_Logic_Unit.scala 185:9]
    node _T_542 = eq(_T_540, UInt<1>("h00")) @[Arithmetic_Logic_Unit.scala 185:9]
    when _T_542 : @[Arithmetic_Logic_Unit.scala 185:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[Arithmetic_Logic_Unit.scala 185:9]
      skip @[Arithmetic_Logic_Unit.scala 185:9]
    
  module Multiplexer_Hw : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Multiplexer_Hw_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip 4 : UInt<2>, 3 : UInt<16>, flip 2 : UInt<16>, flip 1 : UInt<16>, flip 0 : UInt<16>}
    
    wire config : UInt<2> @[Multiplexer.scala 84:20]
    config <= io.4 @[Multiplexer.scala 85:10]
    io.3 <= UInt<1>("h00") @[Multiplexer.scala 97:9]
    node _T_23 = eq(config, UInt<2>("h02")) @[Multiplexer.scala 105:17]
    when _T_23 : @[Multiplexer.scala 105:30]
      io.3 <= io.2 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_25 = eq(config, UInt<1>("h01")) @[Multiplexer.scala 105:17]
    when _T_25 : @[Multiplexer.scala 105:30]
      io.3 <= io.1 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    node _T_27 = eq(config, UInt<1>("h00")) @[Multiplexer.scala 105:17]
    when _T_27 : @[Multiplexer.scala 105:30]
      io.3 <= io.0 @[Multiplexer.scala 106:24]
      skip @[Multiplexer.scala 105:30]
    
  module Dedicated_PE_Hw : 
    input clock : Clock
    input reset : UInt<1>
    output io : {24 : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<4>, read_data : UInt<16>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<4>, flip write_data : UInt<16>}, 23 : UInt<16>, 22 : UInt<16>, 21 : UInt<16>, 20 : UInt<16>, 19 : UInt<32>, 18 : UInt<32>, flip 17 : UInt<16>, flip 16 : UInt<16>, flip 15 : UInt<16>, flip 14 : UInt<16>, flip 13 : UInt<16>, flip 12 : UInt<16>, flip 11 : UInt<16>, flip 10 : UInt<16>, flip 9 : UInt<16>, flip 8 : UInt<16>, flip 7 : UInt<16>, flip 6 : UInt<16>, flip 5 : UInt<32>, flip 4 : UInt<32>, flip 3 : UInt<32>, flip 2 : UInt<32>, flip 1 : UInt<32>, flip 0 : UInt<32>}
    
    reg config_registers : UInt<16>[8], clock @[Dedicated_PE.scala 76:29]
    inst Delay_Pipe_Hw of Delay_Pipe_Hw @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw.clock <= clock
    Delay_Pipe_Hw.reset <= reset
    inst Delay_Pipe_Hw_1 of Delay_Pipe_Hw_1 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_1.clock <= clock
    Delay_Pipe_Hw_1.reset <= reset
    inst Delay_Pipe_Hw_2 of Delay_Pipe_Hw_2 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_2.clock <= clock
    Delay_Pipe_Hw_2.reset <= reset
    inst Arithmetic_Logic_Unit_Hw of Arithmetic_Logic_Unit_Hw @[Dedicated_PE.scala 85:32]
    Arithmetic_Logic_Unit_Hw.clock <= clock
    Arithmetic_Logic_Unit_Hw.reset <= reset
    inst Delay_Pipe_Hw_3 of Delay_Pipe_Hw_3 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_3.clock <= clock
    Delay_Pipe_Hw_3.reset <= reset
    inst Delay_Pipe_Hw_4 of Delay_Pipe_Hw_4 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_4.clock <= clock
    Delay_Pipe_Hw_4.reset <= reset
    inst Delay_Pipe_Hw_5 of Delay_Pipe_Hw_5 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_5.clock <= clock
    Delay_Pipe_Hw_5.reset <= reset
    inst Arithmetic_Logic_Unit_Hw_1 of Arithmetic_Logic_Unit_Hw_1 @[Dedicated_PE.scala 85:32]
    Arithmetic_Logic_Unit_Hw_1.clock <= clock
    Arithmetic_Logic_Unit_Hw_1.reset <= reset
    inst Delay_Pipe_Hw_6 of Delay_Pipe_Hw_6 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_6.clock <= clock
    Delay_Pipe_Hw_6.reset <= reset
    inst Delay_Pipe_Hw_7 of Delay_Pipe_Hw_7 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_7.clock <= clock
    Delay_Pipe_Hw_7.reset <= reset
    inst Delay_Pipe_Hw_8 of Delay_Pipe_Hw_8 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_8.clock <= clock
    Delay_Pipe_Hw_8.reset <= reset
    inst Arithmetic_Logic_Unit_Hw_2 of Arithmetic_Logic_Unit_Hw_2 @[Dedicated_PE.scala 85:32]
    Arithmetic_Logic_Unit_Hw_2.clock <= clock
    Arithmetic_Logic_Unit_Hw_2.reset <= reset
    inst Delay_Pipe_Hw_9 of Delay_Pipe_Hw_9 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_9.clock <= clock
    Delay_Pipe_Hw_9.reset <= reset
    inst Delay_Pipe_Hw_10 of Delay_Pipe_Hw_10 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_10.clock <= clock
    Delay_Pipe_Hw_10.reset <= reset
    inst Delay_Pipe_Hw_11 of Delay_Pipe_Hw_11 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_11.clock <= clock
    Delay_Pipe_Hw_11.reset <= reset
    inst Arithmetic_Logic_Unit_Hw_3 of Arithmetic_Logic_Unit_Hw_3 @[Dedicated_PE.scala 85:32]
    Arithmetic_Logic_Unit_Hw_3.clock <= clock
    Arithmetic_Logic_Unit_Hw_3.reset <= reset
    inst Delay_Pipe_Hw_12 of Delay_Pipe_Hw_12 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_12.clock <= clock
    Delay_Pipe_Hw_12.reset <= reset
    inst Delay_Pipe_Hw_13 of Delay_Pipe_Hw_13 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_13.clock <= clock
    Delay_Pipe_Hw_13.reset <= reset
    inst Delay_Pipe_Hw_14 of Delay_Pipe_Hw_14 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_14.clock <= clock
    Delay_Pipe_Hw_14.reset <= reset
    inst Arithmetic_Logic_Unit_Hw_4 of Arithmetic_Logic_Unit_Hw_4 @[Dedicated_PE.scala 85:32]
    Arithmetic_Logic_Unit_Hw_4.clock <= clock
    Arithmetic_Logic_Unit_Hw_4.reset <= reset
    inst Delay_Pipe_Hw_15 of Delay_Pipe_Hw_15 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_15.clock <= clock
    Delay_Pipe_Hw_15.reset <= reset
    inst Delay_Pipe_Hw_16 of Delay_Pipe_Hw_16 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_16.clock <= clock
    Delay_Pipe_Hw_16.reset <= reset
    inst Delay_Pipe_Hw_17 of Delay_Pipe_Hw_17 @[Dedicated_PE.scala 86:39]
    Delay_Pipe_Hw_17.clock <= clock
    Delay_Pipe_Hw_17.reset <= reset
    inst Arithmetic_Logic_Unit_Hw_5 of Arithmetic_Logic_Unit_Hw_5 @[Dedicated_PE.scala 85:32]
    Arithmetic_Logic_Unit_Hw_5.clock <= clock
    Arithmetic_Logic_Unit_Hw_5.reset <= reset
    inst Multiplexer_Hw of Multiplexer_Hw @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw.clock <= clock
    Multiplexer_Hw.reset <= reset
    inst Multiplexer_Hw_1 of Multiplexer_Hw_1 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_1.clock <= clock
    Multiplexer_Hw_1.reset <= reset
    inst Multiplexer_Hw_2 of Multiplexer_Hw_2 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_2.clock <= clock
    Multiplexer_Hw_2.reset <= reset
    inst Multiplexer_Hw_3 of Multiplexer_Hw_3 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_3.clock <= clock
    Multiplexer_Hw_3.reset <= reset
    inst Multiplexer_Hw_4 of Multiplexer_Hw_4 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_4.clock <= clock
    Multiplexer_Hw_4.reset <= reset
    inst Multiplexer_Hw_5 of Multiplexer_Hw_5 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_5.clock <= clock
    Multiplexer_Hw_5.reset <= reset
    inst Multiplexer_Hw_6 of Multiplexer_Hw_6 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_6.clock <= clock
    Multiplexer_Hw_6.reset <= reset
    inst Multiplexer_Hw_7 of Multiplexer_Hw_7 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_7.clock <= clock
    Multiplexer_Hw_7.reset <= reset
    inst Multiplexer_Hw_8 of Multiplexer_Hw_8 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_8.clock <= clock
    Multiplexer_Hw_8.reset <= reset
    inst Multiplexer_Hw_9 of Multiplexer_Hw_9 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_9.clock <= clock
    Multiplexer_Hw_9.reset <= reset
    inst Multiplexer_Hw_10 of Multiplexer_Hw_10 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_10.clock <= clock
    Multiplexer_Hw_10.reset <= reset
    inst Multiplexer_Hw_11 of Multiplexer_Hw_11 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_11.clock <= clock
    Multiplexer_Hw_11.reset <= reset
    inst Multiplexer_Hw_12 of Multiplexer_Hw_12 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_12.clock <= clock
    Multiplexer_Hw_12.reset <= reset
    inst Multiplexer_Hw_13 of Multiplexer_Hw_13 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_13.clock <= clock
    Multiplexer_Hw_13.reset <= reset
    inst Multiplexer_Hw_14 of Multiplexer_Hw_14 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_14.clock <= clock
    Multiplexer_Hw_14.reset <= reset
    inst Multiplexer_Hw_15 of Multiplexer_Hw_15 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_15.clock <= clock
    Multiplexer_Hw_15.reset <= reset
    inst Multiplexer_Hw_16 of Multiplexer_Hw_16 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_16.clock <= clock
    Multiplexer_Hw_16.reset <= reset
    inst Multiplexer_Hw_17 of Multiplexer_Hw_17 @[Dedicated_PE.scala 84:32]
    Multiplexer_Hw_17.clock <= clock
    Multiplexer_Hw_17.reset <= reset
    Arithmetic_Logic_Unit_Hw.io.0 <= Delay_Pipe_Hw.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw.io.1 <= Delay_Pipe_Hw_1.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw.io.3 <= Delay_Pipe_Hw_2.io.1 @[Dedicated_PE.scala 121:15]
    io.18 <= Arithmetic_Logic_Unit_Hw.io.2 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_1.io.0 <= Delay_Pipe_Hw_3.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_1.io.1 <= Delay_Pipe_Hw_4.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_1.io.3 <= Delay_Pipe_Hw_5.io.1 @[Dedicated_PE.scala 121:15]
    io.19 <= Arithmetic_Logic_Unit_Hw_1.io.2 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_2.io.0 <= Delay_Pipe_Hw_6.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_2.io.1 <= Delay_Pipe_Hw_7.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_2.io.3 <= Delay_Pipe_Hw_8.io.1 @[Dedicated_PE.scala 121:15]
    io.20 <= Arithmetic_Logic_Unit_Hw_2.io.2 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_3.io.0 <= Delay_Pipe_Hw_9.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_3.io.1 <= Delay_Pipe_Hw_10.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_3.io.3 <= Delay_Pipe_Hw_11.io.1 @[Dedicated_PE.scala 121:15]
    io.21 <= Arithmetic_Logic_Unit_Hw_3.io.2 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_4.io.0 <= Delay_Pipe_Hw_12.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_4.io.1 <= Delay_Pipe_Hw_13.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_4.io.3 <= Delay_Pipe_Hw_14.io.1 @[Dedicated_PE.scala 121:15]
    io.22 <= Arithmetic_Logic_Unit_Hw_4.io.2 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_5.io.0 <= Delay_Pipe_Hw_15.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_5.io.1 <= Delay_Pipe_Hw_16.io.1 @[Dedicated_PE.scala 121:15]
    Arithmetic_Logic_Unit_Hw_5.io.3 <= Delay_Pipe_Hw_17.io.1 @[Dedicated_PE.scala 121:15]
    io.23 <= Arithmetic_Logic_Unit_Hw_5.io.2 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw.io.0 <= io.0 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw.io.1 <= io.2 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw.io.2 <= io.4 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw.io.0 <= Multiplexer_Hw.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_1.io.0 <= io.0 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_1.io.1 <= io.2 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_1.io.2 <= io.4 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_1.io.0 <= Multiplexer_Hw_1.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_2.io.0 <= io.0 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_2.io.1 <= io.2 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_2.io.2 <= io.4 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_2.io.0 <= Multiplexer_Hw_2.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_3.io.0 <= io.1 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_3.io.1 <= io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_3.io.2 <= io.5 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_3.io.0 <= Multiplexer_Hw_3.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_4.io.0 <= io.1 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_4.io.1 <= io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_4.io.2 <= io.5 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_4.io.0 <= Multiplexer_Hw_4.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_5.io.0 <= io.1 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_5.io.1 <= io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_5.io.2 <= io.5 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_5.io.0 <= Multiplexer_Hw_5.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_6.io.0 <= io.6 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_6.io.1 <= io.10 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_6.io.2 <= io.14 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_6.io.0 <= Multiplexer_Hw_6.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_7.io.0 <= io.6 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_7.io.1 <= io.10 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_7.io.2 <= io.14 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_7.io.0 <= Multiplexer_Hw_7.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_8.io.0 <= io.6 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_8.io.1 <= io.10 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_8.io.2 <= io.14 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_8.io.0 <= Multiplexer_Hw_8.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_9.io.0 <= io.7 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_9.io.1 <= io.11 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_9.io.2 <= io.15 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_9.io.0 <= Multiplexer_Hw_9.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_10.io.0 <= io.7 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_10.io.1 <= io.11 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_10.io.2 <= io.15 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_10.io.0 <= Multiplexer_Hw_10.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_11.io.0 <= io.7 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_11.io.1 <= io.11 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_11.io.2 <= io.15 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_11.io.0 <= Multiplexer_Hw_11.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_12.io.0 <= io.8 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_12.io.1 <= io.12 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_12.io.2 <= io.16 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_12.io.0 <= Multiplexer_Hw_12.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_13.io.0 <= io.8 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_13.io.1 <= io.12 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_13.io.2 <= io.16 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_13.io.0 <= Multiplexer_Hw_13.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_14.io.0 <= io.8 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_14.io.1 <= io.12 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_14.io.2 <= io.16 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_14.io.0 <= Multiplexer_Hw_14.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_15.io.0 <= io.9 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_15.io.1 <= io.13 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_15.io.2 <= io.17 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_15.io.0 <= Multiplexer_Hw_15.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_16.io.0 <= io.9 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_16.io.1 <= io.13 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_16.io.2 <= io.17 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_16.io.0 <= Multiplexer_Hw_16.io.3 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_17.io.0 <= io.9 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_17.io.1 <= io.13 @[Dedicated_PE.scala 121:15]
    Multiplexer_Hw_17.io.2 <= io.17 @[Dedicated_PE.scala 121:15]
    Delay_Pipe_Hw_17.io.0 <= Multiplexer_Hw_17.io.3 @[Dedicated_PE.scala 121:15]
    node _T_124 = bits(config_registers[0], 2, 0) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw.io.2 <= _T_124 @[Dedicated_PE.scala 130:45]
    node _T_125 = bits(config_registers[0], 4, 3) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_1.io.2 <= _T_125 @[Dedicated_PE.scala 130:45]
    node _T_126 = bits(config_registers[0], 6, 5) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_2.io.2 <= _T_126 @[Dedicated_PE.scala 130:45]
    node _T_127 = bits(config_registers[0], 11, 7) @[Dedicated_PE.scala 130:76]
    Arithmetic_Logic_Unit_Hw.io.4 <= _T_127 @[Dedicated_PE.scala 130:45]
    node _T_128 = bits(config_registers[0], 14, 12) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_3.io.2 <= _T_128 @[Dedicated_PE.scala 130:45]
    node _T_129 = bits(config_registers[1], 1, 0) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_4.io.2 <= _T_129 @[Dedicated_PE.scala 130:45]
    node _T_130 = bits(config_registers[1], 3, 2) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_5.io.2 <= _T_130 @[Dedicated_PE.scala 130:45]
    node _T_131 = bits(config_registers[1], 8, 4) @[Dedicated_PE.scala 130:76]
    Arithmetic_Logic_Unit_Hw_1.io.4 <= _T_131 @[Dedicated_PE.scala 130:45]
    node _T_132 = bits(config_registers[1], 11, 9) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_6.io.2 <= _T_132 @[Dedicated_PE.scala 130:45]
    node _T_133 = bits(config_registers[1], 13, 12) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_7.io.2 <= _T_133 @[Dedicated_PE.scala 130:45]
    node _T_134 = bits(config_registers[1], 15, 14) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_8.io.2 <= _T_134 @[Dedicated_PE.scala 130:45]
    node _T_135 = bits(config_registers[2], 4, 0) @[Dedicated_PE.scala 130:76]
    Arithmetic_Logic_Unit_Hw_2.io.4 <= _T_135 @[Dedicated_PE.scala 130:45]
    node _T_136 = bits(config_registers[2], 7, 5) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_9.io.2 <= _T_136 @[Dedicated_PE.scala 130:45]
    node _T_137 = bits(config_registers[2], 9, 8) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_10.io.2 <= _T_137 @[Dedicated_PE.scala 130:45]
    node _T_138 = bits(config_registers[2], 11, 10) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_11.io.2 <= _T_138 @[Dedicated_PE.scala 130:45]
    node _T_139 = bits(config_registers[3], 4, 0) @[Dedicated_PE.scala 130:76]
    Arithmetic_Logic_Unit_Hw_3.io.4 <= _T_139 @[Dedicated_PE.scala 130:45]
    node _T_140 = bits(config_registers[3], 7, 5) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_12.io.2 <= _T_140 @[Dedicated_PE.scala 130:45]
    node _T_141 = bits(config_registers[3], 9, 8) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_13.io.2 <= _T_141 @[Dedicated_PE.scala 130:45]
    node _T_142 = bits(config_registers[3], 11, 10) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_14.io.2 <= _T_142 @[Dedicated_PE.scala 130:45]
    node _T_143 = bits(config_registers[4], 4, 0) @[Dedicated_PE.scala 130:76]
    Arithmetic_Logic_Unit_Hw_4.io.4 <= _T_143 @[Dedicated_PE.scala 130:45]
    node _T_144 = bits(config_registers[4], 7, 5) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_15.io.2 <= _T_144 @[Dedicated_PE.scala 130:45]
    node _T_145 = bits(config_registers[4], 9, 8) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_16.io.2 <= _T_145 @[Dedicated_PE.scala 130:45]
    node _T_146 = bits(config_registers[4], 11, 10) @[Dedicated_PE.scala 130:76]
    Delay_Pipe_Hw_17.io.2 <= _T_146 @[Dedicated_PE.scala 130:45]
    node _T_147 = bits(config_registers[5], 4, 0) @[Dedicated_PE.scala 130:76]
    Arithmetic_Logic_Unit_Hw_5.io.4 <= _T_147 @[Dedicated_PE.scala 130:45]
    node _T_148 = bits(config_registers[5], 6, 5) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw.io.4 <= _T_148 @[Dedicated_PE.scala 130:45]
    node _T_149 = bits(config_registers[5], 8, 7) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_1.io.4 <= _T_149 @[Dedicated_PE.scala 130:45]
    node _T_150 = bits(config_registers[5], 10, 9) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_2.io.4 <= _T_150 @[Dedicated_PE.scala 130:45]
    node _T_151 = bits(config_registers[5], 12, 11) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_3.io.4 <= _T_151 @[Dedicated_PE.scala 130:45]
    node _T_152 = bits(config_registers[5], 14, 13) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_4.io.4 <= _T_152 @[Dedicated_PE.scala 130:45]
    node _T_153 = bits(config_registers[6], 1, 0) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_5.io.4 <= _T_153 @[Dedicated_PE.scala 130:45]
    node _T_154 = bits(config_registers[6], 3, 2) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_6.io.4 <= _T_154 @[Dedicated_PE.scala 130:45]
    node _T_155 = bits(config_registers[6], 5, 4) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_7.io.4 <= _T_155 @[Dedicated_PE.scala 130:45]
    node _T_156 = bits(config_registers[6], 7, 6) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_8.io.4 <= _T_156 @[Dedicated_PE.scala 130:45]
    node _T_157 = bits(config_registers[6], 9, 8) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_9.io.4 <= _T_157 @[Dedicated_PE.scala 130:45]
    node _T_158 = bits(config_registers[6], 11, 10) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_10.io.4 <= _T_158 @[Dedicated_PE.scala 130:45]
    node _T_159 = bits(config_registers[6], 13, 12) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_11.io.4 <= _T_159 @[Dedicated_PE.scala 130:45]
    node _T_160 = bits(config_registers[6], 15, 14) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_12.io.4 <= _T_160 @[Dedicated_PE.scala 130:45]
    node _T_161 = bits(config_registers[7], 1, 0) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_13.io.4 <= _T_161 @[Dedicated_PE.scala 130:45]
    node _T_162 = bits(config_registers[7], 3, 2) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_14.io.4 <= _T_162 @[Dedicated_PE.scala 130:45]
    node _T_163 = bits(config_registers[7], 5, 4) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_15.io.4 <= _T_163 @[Dedicated_PE.scala 130:45]
    node _T_164 = bits(config_registers[7], 7, 6) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_16.io.4 <= _T_164 @[Dedicated_PE.scala 130:45]
    node _T_165 = bits(config_registers[7], 9, 8) @[Dedicated_PE.scala 130:76]
    Multiplexer_Hw_17.io.4 <= _T_165 @[Dedicated_PE.scala 130:45]
    when io.24.write_req : @[Dedicated_PE.scala 136:30]
      node _T_167 = bits(io.24.write_index, 2, 0)
      config_registers[_T_167] <= io.24.write_data @[Dedicated_PE.scala 137:47]
      skip @[Dedicated_PE.scala 136:30]
    io.24.write_ack <= UInt<1>("h01") @[Dedicated_PE.scala 139:25]
    io.24.read_ack <= UInt<1>("h00") @[Dedicated_PE.scala 140:24]
    io.24.read_data <= UInt<1>("h00") @[Dedicated_PE.scala 141:25]
    
