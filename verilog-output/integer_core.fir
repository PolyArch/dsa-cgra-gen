;buildInfoPackage: chisel3, version: 3.1.6, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-12-21 23:42:51.273, builtAtMillis: 1545435771273
circuit integer_core : 
  module unused_host_interface : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}
    
    io.read_ack <= UInt<1>("h00") @[mmio_if.scala 35:15]
    io.read_data <= UInt<1>("h00") @[mmio_if.scala 36:16]
    io.write_ack <= UInt<1>("h00") @[mmio_if.scala 37:16]
    
  module channel_buffer : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module input_channel_buffer : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip req : UInt<1>, ack : UInt<1>, flip packet : {tag : UInt<2>, data : UInt<32>}}, out : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer @[channel_buffer.scala 117:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    channel_buffer.io.receiver.enqueue <= io.in.req @[channel_buffer.scala 120:35]
    channel_buffer.io.receiver.pack.tag <= io.in.packet.tag @[channel_buffer.scala 121:36]
    channel_buffer.io.receiver.pack.data <= io.in.packet.data @[channel_buffer.scala 122:37]
    node _T_26 = eq(channel_buffer.io.receiver.full, UInt<1>("h00")) @[channel_buffer.scala 123:16]
    io.in.ack <= _T_26 @[channel_buffer.scala 123:13]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 126:25]
    io.out.count <= channel_buffer.io.sender.count @[channel_buffer.scala 127:10]
    io.out.empty <= channel_buffer.io.sender.empty @[channel_buffer.scala 127:10]
    channel_buffer.io.sender.dequeue <= io.out.dequeue @[channel_buffer.scala 127:10]
    io.out.next_pack.data <= channel_buffer.io.sender.next_pack.data @[channel_buffer.scala 127:10]
    io.out.next_pack.tag <= channel_buffer.io.sender.next_pack.tag @[channel_buffer.scala 127:10]
    io.out.pack.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 127:10]
    io.out.pack.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 127:10]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 128:16]
    
  module channel_buffer_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module input_channel_buffer_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip req : UInt<1>, ack : UInt<1>, flip packet : {tag : UInt<2>, data : UInt<32>}}, out : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_1 @[channel_buffer.scala 117:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    channel_buffer.io.receiver.enqueue <= io.in.req @[channel_buffer.scala 120:35]
    channel_buffer.io.receiver.pack.tag <= io.in.packet.tag @[channel_buffer.scala 121:36]
    channel_buffer.io.receiver.pack.data <= io.in.packet.data @[channel_buffer.scala 122:37]
    node _T_26 = eq(channel_buffer.io.receiver.full, UInt<1>("h00")) @[channel_buffer.scala 123:16]
    io.in.ack <= _T_26 @[channel_buffer.scala 123:13]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 126:25]
    io.out.count <= channel_buffer.io.sender.count @[channel_buffer.scala 127:10]
    io.out.empty <= channel_buffer.io.sender.empty @[channel_buffer.scala 127:10]
    channel_buffer.io.sender.dequeue <= io.out.dequeue @[channel_buffer.scala 127:10]
    io.out.next_pack.data <= channel_buffer.io.sender.next_pack.data @[channel_buffer.scala 127:10]
    io.out.next_pack.tag <= channel_buffer.io.sender.next_pack.tag @[channel_buffer.scala 127:10]
    io.out.pack.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 127:10]
    io.out.pack.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 127:10]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 128:16]
    
  module channel_buffer_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module input_channel_buffer_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip req : UInt<1>, ack : UInt<1>, flip packet : {tag : UInt<2>, data : UInt<32>}}, out : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_2 @[channel_buffer.scala 117:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    channel_buffer.io.receiver.enqueue <= io.in.req @[channel_buffer.scala 120:35]
    channel_buffer.io.receiver.pack.tag <= io.in.packet.tag @[channel_buffer.scala 121:36]
    channel_buffer.io.receiver.pack.data <= io.in.packet.data @[channel_buffer.scala 122:37]
    node _T_26 = eq(channel_buffer.io.receiver.full, UInt<1>("h00")) @[channel_buffer.scala 123:16]
    io.in.ack <= _T_26 @[channel_buffer.scala 123:13]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 126:25]
    io.out.count <= channel_buffer.io.sender.count @[channel_buffer.scala 127:10]
    io.out.empty <= channel_buffer.io.sender.empty @[channel_buffer.scala 127:10]
    channel_buffer.io.sender.dequeue <= io.out.dequeue @[channel_buffer.scala 127:10]
    io.out.next_pack.data <= channel_buffer.io.sender.next_pack.data @[channel_buffer.scala 127:10]
    io.out.next_pack.tag <= channel_buffer.io.sender.next_pack.tag @[channel_buffer.scala 127:10]
    io.out.pack.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 127:10]
    io.out.pack.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 127:10]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 128:16]
    
  module channel_buffer_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module input_channel_buffer_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip req : UInt<1>, ack : UInt<1>, flip packet : {tag : UInt<2>, data : UInt<32>}}, out : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_3 @[channel_buffer.scala 117:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    channel_buffer.io.receiver.enqueue <= io.in.req @[channel_buffer.scala 120:35]
    channel_buffer.io.receiver.pack.tag <= io.in.packet.tag @[channel_buffer.scala 121:36]
    channel_buffer.io.receiver.pack.data <= io.in.packet.data @[channel_buffer.scala 122:37]
    node _T_26 = eq(channel_buffer.io.receiver.full, UInt<1>("h00")) @[channel_buffer.scala 123:16]
    io.in.ack <= _T_26 @[channel_buffer.scala 123:13]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 126:25]
    io.out.count <= channel_buffer.io.sender.count @[channel_buffer.scala 127:10]
    io.out.empty <= channel_buffer.io.sender.empty @[channel_buffer.scala 127:10]
    channel_buffer.io.sender.dequeue <= io.out.dequeue @[channel_buffer.scala 127:10]
    io.out.next_pack.data <= channel_buffer.io.sender.next_pack.data @[channel_buffer.scala 127:10]
    io.out.next_pack.tag <= channel_buffer.io.sender.next_pack.tag @[channel_buffer.scala 127:10]
    io.out.pack.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 127:10]
    io.out.pack.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 127:10]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 128:16]
    
  module channel_buffer_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module output_channel_buffer : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}, out : {flip req : UInt<1>, ack : UInt<1>, packet : {tag : UInt<2>, data : UInt<32>}}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_4 @[channel_buffer.scala 93:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    io.out.packet.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 96:21]
    io.out.packet.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 97:22]
    channel_buffer.io.sender.dequeue <= io.out.req @[channel_buffer.scala 98:33]
    node _T_24 = eq(channel_buffer.io.sender.empty, UInt<1>("h00")) @[channel_buffer.scala 99:17]
    io.out.ack <= _T_24 @[channel_buffer.scala 99:14]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 102:25]
    io.in.count <= channel_buffer.io.receiver.count @[channel_buffer.scala 103:27]
    io.in.full <= channel_buffer.io.receiver.full @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.enqueue <= io.in.enqueue @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.data <= io.in.pack.data @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.tag <= io.in.pack.tag @[channel_buffer.scala 103:27]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 104:16]
    
  module channel_buffer_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module output_channel_buffer_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}, out : {flip req : UInt<1>, ack : UInt<1>, packet : {tag : UInt<2>, data : UInt<32>}}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_5 @[channel_buffer.scala 93:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    io.out.packet.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 96:21]
    io.out.packet.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 97:22]
    channel_buffer.io.sender.dequeue <= io.out.req @[channel_buffer.scala 98:33]
    node _T_24 = eq(channel_buffer.io.sender.empty, UInt<1>("h00")) @[channel_buffer.scala 99:17]
    io.out.ack <= _T_24 @[channel_buffer.scala 99:14]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 102:25]
    io.in.count <= channel_buffer.io.receiver.count @[channel_buffer.scala 103:27]
    io.in.full <= channel_buffer.io.receiver.full @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.enqueue <= io.in.enqueue @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.data <= io.in.pack.data @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.tag <= io.in.pack.tag @[channel_buffer.scala 103:27]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 104:16]
    
  module channel_buffer_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module output_channel_buffer_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}, out : {flip req : UInt<1>, ack : UInt<1>, packet : {tag : UInt<2>, data : UInt<32>}}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_6 @[channel_buffer.scala 93:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    io.out.packet.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 96:21]
    io.out.packet.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 97:22]
    channel_buffer.io.sender.dequeue <= io.out.req @[channel_buffer.scala 98:33]
    node _T_24 = eq(channel_buffer.io.sender.empty, UInt<1>("h00")) @[channel_buffer.scala 99:17]
    io.out.ack <= _T_24 @[channel_buffer.scala 99:14]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 102:25]
    io.in.count <= channel_buffer.io.receiver.count @[channel_buffer.scala 103:27]
    io.in.full <= channel_buffer.io.receiver.full @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.enqueue <= io.in.enqueue @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.data <= io.in.pack.data @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.tag <= io.in.pack.tag @[channel_buffer.scala 103:27]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 104:16]
    
  module channel_buffer_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, sender : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, flip dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}, receiver : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}}
    
    wire _T_30 : UInt<34>[2] @[channel_buffer.scala 15:29]
    _T_30[0] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    _T_30[1] <= UInt<34>("h00") @[channel_buffer.scala 15:29]
    reg fifo : UInt<34>[2], clock with : (reset => (reset, _T_30)) @[channel_buffer.scala 15:21]
    reg count : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[channel_buffer.scala 18:22]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 19:21]
    node _T_58 = add(head, UInt<1>("h01")) @[channel_buffer.scala 20:24]
    node neck = tail(_T_58, 1) @[channel_buffer.scala 20:24]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[channel_buffer.scala 21:21]
    node isEmpty = eq(count, UInt<1>("h00")) @[channel_buffer.scala 23:28]
    node isFull = eq(count, UInt<2>("h02")) @[channel_buffer.scala 24:27]
    wire out_tag_data : UInt<34> @[channel_buffer.scala 29:26]
    wire out_tag : UInt<2> @[channel_buffer.scala 30:21]
    wire out_data : UInt<32> @[channel_buffer.scala 31:22]
    node _T_66 = bits(out_tag_data, 33, 32) @[channel_buffer.scala 32:26]
    out_tag <= _T_66 @[channel_buffer.scala 32:11]
    node _T_67 = bits(out_tag_data, 31, 0) @[channel_buffer.scala 33:27]
    out_data <= _T_67 @[channel_buffer.scala 33:12]
    wire outNext_tag_data : UInt<34> @[channel_buffer.scala 36:30]
    wire outNext_tag : UInt<2> @[channel_buffer.scala 37:25]
    wire outNext_data : UInt<32> @[channel_buffer.scala 38:26]
    node _T_71 = bits(outNext_tag_data, 33, 32) @[channel_buffer.scala 39:34]
    outNext_tag <= _T_71 @[channel_buffer.scala 39:15]
    node _T_72 = bits(outNext_tag_data, 31, 0) @[channel_buffer.scala 40:35]
    outNext_data <= _T_72 @[channel_buffer.scala 40:16]
    out_tag_data <= fifo[head] @[channel_buffer.scala 43:16]
    node _T_77 = gt(count, UInt<1>("h01")) @[channel_buffer.scala 44:32]
    node _T_82 = mux(_T_77, fifo[neck], UInt<1>("h00")) @[channel_buffer.scala 44:26]
    outNext_tag_data <= _T_82 @[channel_buffer.scala 44:20]
    io.sender.pack.tag <= out_tag @[channel_buffer.scala 45:22]
    io.sender.pack.data <= out_data @[channel_buffer.scala 46:23]
    io.sender.next_pack.tag <= outNext_tag @[channel_buffer.scala 47:27]
    io.sender.next_pack.data <= outNext_data @[channel_buffer.scala 48:28]
    io.sender.empty <= isEmpty @[channel_buffer.scala 49:19]
    io.sender.count <= count @[channel_buffer.scala 50:19]
    wire in_tag_data : UInt<34> @[channel_buffer.scala 53:25]
    node _T_84 = cat(io.receiver.pack.tag, io.receiver.pack.data) @[Cat.scala 30:58]
    in_tag_data <= _T_84 @[channel_buffer.scala 54:15]
    io.receiver.full <= isFull @[channel_buffer.scala 55:20]
    io.receiver.count <= count @[channel_buffer.scala 56:21]
    node _T_85 = bits(reset, 0, 0) @[channel_buffer.scala 59:20]
    when _T_85 : @[channel_buffer.scala 59:23]
      count <= UInt<1>("h00") @[channel_buffer.scala 60:11]
      head <= UInt<1>("h00") @[channel_buffer.scala 61:10]
      tail <= UInt<1>("h00") @[channel_buffer.scala 62:10]
      skip @[channel_buffer.scala 59:23]
    else : @[channel_buffer.scala 63:24]
      when io.enable : @[channel_buffer.scala 63:24]
        when io.sender.dequeue : @[channel_buffer.scala 64:14]
          node _T_90 = eq(isEmpty, UInt<1>("h00")) @[channel_buffer.scala 65:12]
          when _T_90 : @[channel_buffer.scala 65:21]
            when io.receiver.enqueue : @[channel_buffer.scala 66:18]
              fifo[tail] <= in_tag_data @[channel_buffer.scala 67:22]
              node _T_95 = add(head, UInt<1>("h01")) @[channel_buffer.scala 68:24]
              node _T_96 = tail(_T_95, 1) @[channel_buffer.scala 68:24]
              head <= _T_96 @[channel_buffer.scala 68:16]
              node _T_98 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 69:24]
              node _T_99 = tail(_T_98, 1) @[channel_buffer.scala 69:24]
              tail <= _T_99 @[channel_buffer.scala 69:16]
              skip @[channel_buffer.scala 66:18]
            else : @[channel_buffer.scala 70:20]
              node _T_101 = add(head, UInt<1>("h01")) @[channel_buffer.scala 71:24]
              node _T_102 = tail(_T_101, 1) @[channel_buffer.scala 71:24]
              head <= _T_102 @[channel_buffer.scala 71:16]
              node _T_104 = sub(count, UInt<1>("h01")) @[channel_buffer.scala 72:26]
              node _T_105 = asUInt(_T_104) @[channel_buffer.scala 72:26]
              node _T_106 = tail(_T_105, 1) @[channel_buffer.scala 72:26]
              count <= _T_106 @[channel_buffer.scala 72:17]
              skip @[channel_buffer.scala 70:20]
            skip @[channel_buffer.scala 65:21]
          skip @[channel_buffer.scala 64:14]
        else : @[channel_buffer.scala 75:31]
          node _T_108 = eq(isFull, UInt<1>("h00")) @[channel_buffer.scala 75:23]
          node _T_109 = and(io.receiver.enqueue, _T_108) @[channel_buffer.scala 75:20]
          when _T_109 : @[channel_buffer.scala 75:31]
            fifo[tail] <= in_tag_data @[channel_buffer.scala 76:18]
            node _T_114 = add(tail, UInt<1>("h01")) @[channel_buffer.scala 77:20]
            node _T_115 = tail(_T_114, 1) @[channel_buffer.scala 77:20]
            tail <= _T_115 @[channel_buffer.scala 77:12]
            node _T_117 = add(count, UInt<1>("h01")) @[channel_buffer.scala 78:22]
            node _T_118 = tail(_T_117, 1) @[channel_buffer.scala 78:22]
            count <= _T_118 @[channel_buffer.scala 78:13]
            skip @[channel_buffer.scala 75:31]
        skip @[channel_buffer.scala 63:24]
    
  module output_channel_buffer_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, in : {flip pack : {tag : UInt<2>, data : UInt<32>}, flip enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}, out : {flip req : UInt<1>, ack : UInt<1>, packet : {tag : UInt<2>, data : UInt<32>}}, quiescent : UInt<1>}
    
    inst channel_buffer of channel_buffer_7 @[channel_buffer.scala 93:30]
    channel_buffer.clock <= clock
    channel_buffer.reset <= reset
    io.out.packet.tag <= channel_buffer.io.sender.pack.tag @[channel_buffer.scala 96:21]
    io.out.packet.data <= channel_buffer.io.sender.pack.data @[channel_buffer.scala 97:22]
    channel_buffer.io.sender.dequeue <= io.out.req @[channel_buffer.scala 98:33]
    node _T_24 = eq(channel_buffer.io.sender.empty, UInt<1>("h00")) @[channel_buffer.scala 99:17]
    io.out.ack <= _T_24 @[channel_buffer.scala 99:14]
    channel_buffer.io.enable <= io.enable @[channel_buffer.scala 102:25]
    io.in.count <= channel_buffer.io.receiver.count @[channel_buffer.scala 103:27]
    io.in.full <= channel_buffer.io.receiver.full @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.enqueue <= io.in.enqueue @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.data <= io.in.pack.data @[channel_buffer.scala 103:27]
    channel_buffer.io.receiver.pack.tag <= io.in.pack.tag @[channel_buffer.scala 103:27]
    io.quiescent <= channel_buffer.io.sender.empty @[channel_buffer.scala 104:16]
    
  module zero_datapath_instruction : 
    input clock : Clock
    input reset : UInt<1>
    output io : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}
    
    io.vi <= UInt<1>("h00") @[instruction_t.scala 130:9]
    io.op <= UInt<1>("h00") @[instruction_t.scala 131:9]
    io.st <= UInt<1>("h00") @[instruction_t.scala 132:9]
    io.si <= UInt<1>("h00") @[instruction_t.scala 133:9]
    io.dt <= UInt<1>("h00") @[instruction_t.scala 134:9]
    io.di <= UInt<1>("h00") @[instruction_t.scala 135:9]
    io.oci <= UInt<1>("h00") @[instruction_t.scala 136:10]
    io.oct <= UInt<1>("h00") @[instruction_t.scala 137:10]
    io.icd <= UInt<1>("h00") @[instruction_t.scala 138:10]
    io.pum <= UInt<1>("h00") @[instruction_t.scala 139:10]
    io.immediate <= UInt<1>("h00") @[instruction_t.scala 140:16]
    
  module core_mapper : 
    input clock : Clock
    input reset : UInt<1>
    output io : {host_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip monitor_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip performance_counters_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip register_file_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip instruction_memory_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip scratchpad_memory_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}}
    
    io.host_interface.read_ack <= UInt<1>("h00") @[core_mapper.scala 25:27]
    io.host_interface.read_data <= UInt<1>("h00") @[core_mapper.scala 26:28]
    io.monitor_interface.read_req <= UInt<1>("h00") @[core_mapper.scala 27:30]
    io.monitor_interface.read_index <= UInt<1>("h00") @[core_mapper.scala 28:32]
    io.performance_counters_interface.read_req <= UInt<1>("h00") @[core_mapper.scala 29:43]
    io.performance_counters_interface.read_index <= UInt<1>("h00") @[core_mapper.scala 30:45]
    io.register_file_interface.read_req <= UInt<1>("h00") @[core_mapper.scala 31:36]
    io.register_file_interface.read_index <= UInt<1>("h00") @[core_mapper.scala 32:38]
    io.instruction_memory_interface.read_req <= UInt<1>("h00") @[core_mapper.scala 33:41]
    io.instruction_memory_interface.read_index <= UInt<1>("h00") @[core_mapper.scala 34:43]
    io.scratchpad_memory_interface.read_req <= UInt<1>("h00") @[core_mapper.scala 35:40]
    io.scratchpad_memory_interface.read_index <= UInt<1>("h00") @[core_mapper.scala 36:42]
    io.host_interface.write_ack <= UInt<1>("h00") @[core_mapper.scala 39:28]
    io.monitor_interface.write_req <= UInt<1>("h00") @[core_mapper.scala 40:31]
    io.monitor_interface.write_index <= UInt<1>("h00") @[core_mapper.scala 41:33]
    io.monitor_interface.write_data <= UInt<1>("h00") @[core_mapper.scala 42:32]
    io.performance_counters_interface.write_req <= UInt<1>("h00") @[core_mapper.scala 43:44]
    io.performance_counters_interface.write_index <= UInt<1>("h00") @[core_mapper.scala 44:46]
    io.performance_counters_interface.write_data <= UInt<1>("h00") @[core_mapper.scala 45:45]
    io.register_file_interface.write_req <= UInt<1>("h00") @[core_mapper.scala 46:37]
    io.register_file_interface.write_index <= UInt<1>("h00") @[core_mapper.scala 47:39]
    io.register_file_interface.write_data <= UInt<1>("h00") @[core_mapper.scala 48:38]
    io.instruction_memory_interface.write_req <= UInt<1>("h00") @[core_mapper.scala 49:42]
    io.instruction_memory_interface.write_index <= UInt<1>("h00") @[core_mapper.scala 50:44]
    io.instruction_memory_interface.write_data <= UInt<1>("h00") @[core_mapper.scala 51:43]
    io.scratchpad_memory_interface.write_req <= UInt<1>("h00") @[core_mapper.scala 52:41]
    io.scratchpad_memory_interface.write_index <= UInt<1>("h00") @[core_mapper.scala 53:43]
    io.scratchpad_memory_interface.write_data <= UInt<1>("h00") @[core_mapper.scala 54:42]
    when io.host_interface.read_req : @[core_mapper.scala 57:35]
      node _T_220 = lt(io.host_interface.read_index, UInt<4>("h0a")) @[core_mapper.scala 58:36]
      when _T_220 : @[core_mapper.scala 58:69]
        io.monitor_interface.read_req <= io.host_interface.read_req @[core_mapper.scala 59:34]
        io.monitor_interface.read_index <= io.host_interface.read_index @[core_mapper.scala 60:36]
        io.host_interface.read_ack <= io.monitor_interface.read_ack @[core_mapper.scala 61:31]
        io.host_interface.read_data <= io.monitor_interface.read_data @[core_mapper.scala 62:32]
        skip @[core_mapper.scala 58:69]
      node _T_222 = geq(io.host_interface.read_index, UInt<4>("h0a")) @[core_mapper.scala 64:36]
      node _T_224 = lt(io.host_interface.read_index, UInt<5>("h017")) @[core_mapper.scala 65:36]
      node _T_225 = and(_T_222, _T_224) @[core_mapper.scala 65:7]
      when _T_225 : @[core_mapper.scala 65:82]
        io.performance_counters_interface.read_req <= io.host_interface.read_req @[core_mapper.scala 66:47]
        node _T_227 = sub(io.host_interface.read_index, UInt<4>("h0a")) @[core_mapper.scala 67:78]
        node _T_228 = asUInt(_T_227) @[core_mapper.scala 67:78]
        node _T_229 = tail(_T_228, 1) @[core_mapper.scala 67:78]
        io.performance_counters_interface.read_index <= _T_229 @[core_mapper.scala 67:49]
        io.host_interface.read_ack <= io.performance_counters_interface.read_ack @[core_mapper.scala 68:31]
        io.host_interface.read_data <= io.performance_counters_interface.read_data @[core_mapper.scala 69:32]
        skip @[core_mapper.scala 65:82]
      node _T_231 = geq(io.host_interface.read_index, UInt<5>("h017")) @[core_mapper.scala 71:36]
      node _T_233 = lt(io.host_interface.read_index, UInt<5>("h01f")) @[core_mapper.scala 72:36]
      node _T_234 = and(_T_231, _T_233) @[core_mapper.scala 72:7]
      when _T_234 : @[core_mapper.scala 72:75]
        io.register_file_interface.read_req <= io.host_interface.read_req @[core_mapper.scala 73:40]
        node _T_236 = sub(io.host_interface.read_index, UInt<5>("h017")) @[core_mapper.scala 74:71]
        node _T_237 = asUInt(_T_236) @[core_mapper.scala 74:71]
        node _T_238 = tail(_T_237, 1) @[core_mapper.scala 74:71]
        io.register_file_interface.read_index <= _T_238 @[core_mapper.scala 74:42]
        io.host_interface.read_ack <= io.register_file_interface.read_ack @[core_mapper.scala 75:31]
        io.host_interface.read_data <= io.register_file_interface.read_data @[core_mapper.scala 76:32]
        skip @[core_mapper.scala 72:75]
      node _T_240 = geq(io.host_interface.read_index, UInt<5>("h01f")) @[core_mapper.scala 78:36]
      node _T_242 = lt(io.host_interface.read_index, UInt<7>("h05f")) @[core_mapper.scala 79:36]
      node _T_243 = and(_T_240, _T_242) @[core_mapper.scala 79:7]
      when _T_243 : @[core_mapper.scala 79:80]
        io.instruction_memory_interface.read_req <= io.host_interface.read_req @[core_mapper.scala 80:45]
        io.instruction_memory_interface.read_index <= io.host_interface.read_index @[core_mapper.scala 81:47]
        io.host_interface.read_ack <= io.instruction_memory_interface.read_ack @[core_mapper.scala 83:31]
        io.host_interface.read_data <= io.instruction_memory_interface.read_data @[core_mapper.scala 84:32]
        skip @[core_mapper.scala 79:80]
      node _T_245 = geq(io.host_interface.read_index, UInt<7>("h05f")) @[core_mapper.scala 86:36]
      node _T_247 = lt(io.host_interface.read_index, UInt<10>("h025f")) @[core_mapper.scala 87:36]
      node _T_248 = and(_T_245, _T_247) @[core_mapper.scala 87:7]
      when _T_248 : @[core_mapper.scala 87:79]
        io.scratchpad_memory_interface.read_req <= io.host_interface.read_req @[core_mapper.scala 88:44]
        io.scratchpad_memory_interface.read_index <= io.host_interface.read_index @[core_mapper.scala 89:46]
        io.host_interface.read_ack <= io.scratchpad_memory_interface.read_ack @[core_mapper.scala 91:31]
        io.host_interface.read_data <= io.scratchpad_memory_interface.read_data @[core_mapper.scala 92:32]
        skip @[core_mapper.scala 87:79]
      skip @[core_mapper.scala 57:35]
    when io.host_interface.write_req : @[core_mapper.scala 97:33]
      node _T_250 = lt(io.host_interface.write_index, UInt<4>("h0a")) @[core_mapper.scala 98:37]
      when _T_250 : @[core_mapper.scala 98:70]
        io.monitor_interface.write_req <= io.host_interface.write_req @[core_mapper.scala 99:35]
        io.monitor_interface.write_index <= io.host_interface.write_index @[core_mapper.scala 100:37]
        io.monitor_interface.write_data <= io.host_interface.write_data @[core_mapper.scala 101:36]
        io.host_interface.write_ack <= io.monitor_interface.write_ack @[core_mapper.scala 102:32]
        skip @[core_mapper.scala 98:70]
      node _T_252 = geq(io.host_interface.write_index, UInt<4>("h0a")) @[core_mapper.scala 104:37]
      node _T_254 = lt(io.host_interface.write_index, UInt<5>("h017")) @[core_mapper.scala 105:37]
      node _T_255 = and(_T_252, _T_254) @[core_mapper.scala 105:7]
      when _T_255 : @[core_mapper.scala 105:83]
        io.performance_counters_interface.write_req <= io.host_interface.write_req @[core_mapper.scala 106:48]
        io.performance_counters_interface.write_index <= io.host_interface.write_index @[core_mapper.scala 107:50]
        node _T_258 = sub(UInt<1>("h00"), UInt<4>("h0a")) @[core_mapper.scala 108:7]
        node _T_259 = asUInt(_T_258) @[core_mapper.scala 108:7]
        node _T_260 = tail(_T_259, 1) @[core_mapper.scala 108:7]
        io.performance_counters_interface.write_data <= io.host_interface.write_data @[core_mapper.scala 109:49]
        io.host_interface.write_ack <= io.performance_counters_interface.write_ack @[core_mapper.scala 110:32]
        skip @[core_mapper.scala 105:83]
      node _T_262 = geq(io.host_interface.write_index, UInt<5>("h017")) @[core_mapper.scala 112:37]
      node _T_264 = lt(io.host_interface.write_index, UInt<5>("h01f")) @[core_mapper.scala 113:37]
      node _T_265 = and(_T_262, _T_264) @[core_mapper.scala 113:7]
      when _T_265 : @[core_mapper.scala 113:76]
        io.register_file_interface.write_req <= io.host_interface.write_req @[core_mapper.scala 114:41]
        io.register_file_interface.write_index <= io.host_interface.write_index @[core_mapper.scala 115:43]
        node _T_268 = sub(UInt<1>("h00"), UInt<5>("h017")) @[core_mapper.scala 116:7]
        node _T_269 = asUInt(_T_268) @[core_mapper.scala 116:7]
        node _T_270 = tail(_T_269, 1) @[core_mapper.scala 116:7]
        io.register_file_interface.write_data <= io.host_interface.write_data @[core_mapper.scala 117:42]
        io.host_interface.write_ack <= io.register_file_interface.write_ack @[core_mapper.scala 118:32]
        skip @[core_mapper.scala 113:76]
      node _T_272 = geq(io.host_interface.write_index, UInt<5>("h01f")) @[core_mapper.scala 120:37]
      node _T_274 = lt(io.host_interface.write_index, UInt<7>("h05f")) @[core_mapper.scala 121:37]
      node _T_275 = and(_T_272, _T_274) @[core_mapper.scala 121:7]
      when _T_275 : @[core_mapper.scala 121:81]
        io.instruction_memory_interface.write_req <= io.host_interface.write_req @[core_mapper.scala 122:46]
        io.instruction_memory_interface.write_index <= io.host_interface.write_index @[core_mapper.scala 123:48]
        node _T_278 = sub(UInt<1>("h00"), UInt<5>("h01f")) @[core_mapper.scala 124:7]
        node _T_279 = asUInt(_T_278) @[core_mapper.scala 124:7]
        node _T_280 = tail(_T_279, 1) @[core_mapper.scala 124:7]
        io.instruction_memory_interface.write_data <= io.host_interface.write_data @[core_mapper.scala 125:47]
        io.host_interface.write_ack <= io.instruction_memory_interface.write_ack @[core_mapper.scala 126:32]
        skip @[core_mapper.scala 121:81]
      node _T_282 = geq(io.host_interface.write_index, UInt<7>("h05f")) @[core_mapper.scala 128:37]
      node _T_284 = lt(io.host_interface.write_index, UInt<10>("h025f")) @[core_mapper.scala 129:37]
      node _T_285 = and(_T_282, _T_284) @[core_mapper.scala 129:7]
      when _T_285 : @[core_mapper.scala 129:80]
        io.scratchpad_memory_interface.write_req <= io.host_interface.write_req @[core_mapper.scala 130:45]
        io.scratchpad_memory_interface.write_index <= io.host_interface.write_index @[core_mapper.scala 131:47]
        node _T_288 = sub(UInt<1>("h00"), UInt<10>("h025f")) @[core_mapper.scala 132:7]
        node _T_289 = asUInt(_T_288) @[core_mapper.scala 132:7]
        node _T_290 = tail(_T_289, 1) @[core_mapper.scala 132:7]
        io.scratchpad_memory_interface.write_data <= io.host_interface.write_data @[core_mapper.scala 133:46]
        io.host_interface.write_ack <= io.scratchpad_memory_interface.write_ack @[core_mapper.scala 134:32]
        skip @[core_mapper.scala 129:80]
      skip @[core_mapper.scala 97:33]
    
  module execution_control_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip execute : UInt<1>, flip opcode : UInt<6>, flip input_channel_quiescent_status : UInt<4>, flip output_channel_quiescent_status : UInt<4>, internal_reset : UInt<1>, internal_enable : UInt<1>, halted : UInt<1>, channels_quiescent : UInt<1>}
    
    wire halted : UInt<1> @[execution_control.scala 22:20]
    halted <= UInt<1>("h00") @[execution_control.scala 25:10]
    io.channels_quiescent <= UInt<1>("h00") @[execution_control.scala 26:25]
    io.internal_reset <= reset @[execution_control.scala 29:21]
    node _T_26 = and(io.enable, io.execute) @[execution_control.scala 30:36]
    node _T_27 = and(_T_26, halted) @[execution_control.scala 30:50]
    io.internal_enable <= _T_27 @[execution_control.scala 30:22]
    node _T_28 = bits(reset, 0, 0) @[execution_control.scala 33:20]
    when _T_28 : @[execution_control.scala 33:23]
      halted <= UInt<1>("h00") @[execution_control.scala 34:12]
      skip @[execution_control.scala 33:23]
    else : @[execution_control.scala 35:38]
      node _T_30 = and(io.enable, io.execute) @[execution_control.scala 35:24]
      when _T_30 : @[execution_control.scala 35:38]
        node _T_32 = eq(io.opcode, UInt<6>("h027")) @[execution_control.scala 36:20]
        when _T_32 : @[execution_control.scala 36:38]
          halted <= UInt<1>("h01") @[execution_control.scala 37:14]
          skip @[execution_control.scala 36:38]
        skip @[execution_control.scala 35:38]
    node _T_34 = bits(reset, 0, 0) @[execution_control.scala 42:20]
    when _T_34 : @[execution_control.scala 42:23]
      io.channels_quiescent <= UInt<1>("h00") @[execution_control.scala 43:27]
      skip @[execution_control.scala 42:23]
    else : @[execution_control.scala 44:24]
      when io.enable : @[execution_control.scala 44:24]
        node _T_36 = cat(io.input_channel_quiescent_status, io.output_channel_quiescent_status) @[Cat.scala 30:58]
        node _T_37 = not(_T_36) @[execution_control.scala 45:108]
        node _T_39 = eq(_T_37, UInt<1>("h00")) @[execution_control.scala 45:108]
        io.channels_quiescent <= _T_39 @[execution_control.scala 45:27]
        skip @[execution_control.scala 44:24]
    io.halted <= halted @[execution_control.scala 49:13]
    
  module predicate_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip datapath_dt : UInt<2>, flip datapath_di : UInt<3>, flip datapath_result : UInt<32>, flip instruction_pum : UInt<16>, predicates : UInt<8>}
    
    reg predicates : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[predicate_unit.scala 19:27]
    wire datapath_pum : UInt<16> @[predicate_unit.scala 21:30]
    wire pum : UInt<16> @[predicate_unit.scala 21:30]
    wire predicate_set_mask : UInt<8> @[predicate_unit.scala 24:9]
    wire predicate_unset_mask : UInt<8> @[predicate_unit.scala 24:9]
    wire next_predicate : UInt<8> @[predicate_unit.scala 24:9]
    node _T_25 = eq(io.datapath_dt, UInt<2>("h03")) @[predicate_unit.scala 26:23]
    when _T_25 : @[predicate_unit.scala 26:60]
      node _T_27 = neq(io.datapath_result, UInt<1>("h00")) @[predicate_unit.scala 27:29]
      when _T_27 : @[predicate_unit.scala 27:33]
        node _T_28 = bits(io.datapath_di, 2, 0) @[OneHot.scala 51:49]
        node _T_30 = dshl(UInt<1>("h01"), _T_28) @[OneHot.scala 52:12]
        node _T_31 = bits(_T_30, 7, 0) @[OneHot.scala 52:27]
        node _T_33 = cat(_T_31, UInt<1>("h00")) @[Cat.scala 30:58]
        datapath_pum <= _T_33 @[predicate_unit.scala 28:20]
        skip @[predicate_unit.scala 27:33]
      else : @[predicate_unit.scala 29:16]
        node _T_35 = bits(io.datapath_di, 2, 0) @[OneHot.scala 51:49]
        node _T_37 = dshl(UInt<1>("h01"), _T_35) @[OneHot.scala 52:12]
        node _T_38 = bits(_T_37, 7, 0) @[OneHot.scala 52:27]
        node _T_39 = cat(UInt<1>("h00"), _T_38) @[Cat.scala 30:58]
        datapath_pum <= _T_39 @[predicate_unit.scala 30:20]
        skip @[predicate_unit.scala 29:16]
      skip @[predicate_unit.scala 26:60]
    else : @[predicate_unit.scala 32:14]
      datapath_pum <= UInt<1>("h00") @[predicate_unit.scala 33:18]
      skip @[predicate_unit.scala 32:14]
    node _T_41 = or(io.instruction_pum, datapath_pum) @[predicate_unit.scala 36:29]
    pum <= _T_41 @[predicate_unit.scala 36:7]
    node _T_42 = bits(pum, 15, 8) @[predicate_unit.scala 38:28]
    predicate_set_mask <= _T_42 @[predicate_unit.scala 38:22]
    node _T_43 = bits(pum, 7, 0) @[predicate_unit.scala 39:30]
    predicate_unset_mask <= _T_43 @[predicate_unit.scala 39:24]
    node _T_44 = or(predicates, predicate_set_mask) @[predicate_unit.scala 40:33]
    node _T_45 = not(predicate_unset_mask) @[predicate_unit.scala 40:58]
    node _T_46 = and(_T_44, _T_45) @[predicate_unit.scala 40:55]
    next_predicate <= _T_46 @[predicate_unit.scala 40:18]
    when io.enable : @[predicate_unit.scala 42:18]
      predicates <= next_predicate @[predicate_unit.scala 43:16]
      skip @[predicate_unit.scala 42:18]
    io.predicates <= predicates @[predicate_unit.scala 45:17]
    
  module pessimistic_one_stage_input_channel_empty_status_updater : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip input_channel_empty_status : UInt<4>, flip downstream_icd : UInt<4>, updated_input_channel_empty_status : UInt<4>}
    
    node _T_11 = or(io.input_channel_empty_status, io.downstream_icd) @[channel_input_empty_output_full_updater.scala 12:74]
    io.updated_input_channel_empty_status <= _T_11 @[channel_input_empty_output_full_updater.scala 12:41]
    
  module pessimistic_two_stage_output_channel_full_status_updater : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip output_channel_full_status : UInt<4>, flip first_downstream_oci : UInt<4>, flip second_downstream_oci : UInt<4>, updated_output_channel_full_status : UInt<4>}
    
    node _T_13 = or(io.output_channel_full_status, io.first_downstream_oci) @[channel_input_empty_output_full_updater.scala 22:74]
    node _T_14 = or(_T_13, io.second_downstream_oci) @[channel_input_empty_output_full_updater.scala 22:100]
    io.updated_output_channel_full_status <= _T_14 @[channel_input_empty_output_full_updater.scala 22:41]
    
  module input_channel_tag_lookahead_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip pending_dequeue_signals : UInt<4>, flip original_tags : UInt<2>[4], flip next_tags : UInt<2>[4], resolved_tags : UInt<2>[4]}
    
    node _T_61 = bits(io.pending_dequeue_signals, 0, 0) @[input_channel_tag_lookahead_unit.scala 16:58]
    node _T_62 = mux(_T_61, io.next_tags[0], io.original_tags[0]) @[input_channel_tag_lookahead_unit.scala 16:31]
    io.resolved_tags[0] <= _T_62 @[input_channel_tag_lookahead_unit.scala 16:25]
    node _T_63 = bits(io.pending_dequeue_signals, 1, 1) @[input_channel_tag_lookahead_unit.scala 16:58]
    node _T_64 = mux(_T_63, io.next_tags[1], io.original_tags[1]) @[input_channel_tag_lookahead_unit.scala 16:31]
    io.resolved_tags[1] <= _T_64 @[input_channel_tag_lookahead_unit.scala 16:25]
    node _T_65 = bits(io.pending_dequeue_signals, 2, 2) @[input_channel_tag_lookahead_unit.scala 16:58]
    node _T_66 = mux(_T_65, io.next_tags[2], io.original_tags[2]) @[input_channel_tag_lookahead_unit.scala 16:31]
    io.resolved_tags[2] <= _T_66 @[input_channel_tag_lookahead_unit.scala 16:25]
    node _T_67 = bits(io.pending_dequeue_signals, 3, 3) @[input_channel_tag_lookahead_unit.scala 16:58]
    node _T_68 = mux(_T_67, io.next_tags[3], io.original_tags[3]) @[input_channel_tag_lookahead_unit.scala 16:31]
    io.resolved_tags[3] <= _T_68 @[input_channel_tag_lookahead_unit.scala 16:25]
    
  module trigger_resolver : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolver_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}
    
    wire valid_trigger : UInt<1> @[trigger_resolver.scala 22:27]
    valid_trigger <= io.trigger.vi @[trigger_resolver.scala 23:17]
    wire true_ptm : UInt<8> @[trigger_resolver.scala 26:22]
    wire false_ptm : UInt<8> @[trigger_resolver.scala 27:23]
    wire true_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire false_predicates : UInt<8> @[trigger_resolver.scala 28:46]
    wire valid_predicate_state : UInt<1> @[trigger_resolver.scala 29:35]
    wire valid_input_channel_empty_status_array : UInt<1>[2] @[trigger_resolver.scala 32:52]
    wire valid_input_channel_empty_status : UInt<1> @[trigger_resolver.scala 33:46]
    wire valid_input_channel_tags_array : UInt<1>[2] @[trigger_resolver.scala 36:44]
    wire valid_input_channel_tags : UInt<1> @[trigger_resolver.scala 37:38]
    wire valid_output_channel_full_status : UInt<1> @[trigger_resolver.scala 40:46]
    node _T_56 = bits(io.trigger.ptm, 15, 8) @[trigger_resolver.scala 42:29]
    true_ptm <= _T_56 @[trigger_resolver.scala 42:12]
    node _T_57 = bits(io.trigger.ptm, 7, 0) @[trigger_resolver.scala 43:30]
    false_ptm <= _T_57 @[trigger_resolver.scala 43:13]
    node _T_58 = not(true_ptm) @[trigger_resolver.scala 44:39]
    node _T_59 = or(io.predicates, _T_58) @[trigger_resolver.scala 44:36]
    true_predicates <= _T_59 @[trigger_resolver.scala 44:19]
    node _T_60 = not(io.predicates) @[trigger_resolver.scala 45:24]
    node _T_61 = not(false_ptm) @[trigger_resolver.scala 45:52]
    node _T_62 = or(_T_60, _T_61) @[trigger_resolver.scala 45:49]
    false_predicates <= _T_62 @[trigger_resolver.scala 45:20]
    node _T_63 = cat(true_predicates, false_predicates) @[Cat.scala 30:58]
    node _T_64 = not(_T_63) @[trigger_resolver.scala 46:71]
    node _T_66 = eq(_T_64, UInt<1>("h00")) @[trigger_resolver.scala 46:71]
    valid_predicate_state <= _T_66 @[trigger_resolver.scala 46:25]
    node _T_67 = bits(io.trigger.ici, 2, 0) @[trigger_resolver.scala 52:21]
    node _T_69 = neq(_T_67, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_69 : @[trigger_resolver.scala 55:43]
      node _T_71 = sub(_T_67, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_72 = asUInt(_T_71) @[trigger_resolver.scala 57:63]
      node _T_73 = tail(_T_72, 1) @[trigger_resolver.scala 57:63]
      node _T_74 = dshr(io.input_channel_empty_status, _T_73) @[trigger_resolver.scala 61:42]
      node _T_75 = bits(_T_74, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_77 = eq(_T_75, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_77 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[0] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_80 = bits(io.trigger.ictv, 1, 0) @[trigger_resolver.scala 69:52]
      node _T_82 = bits(_T_73, 1, 0)
      node _T_83 = eq(io.input_channel_tags[_T_82], _T_80) @[trigger_resolver.scala 72:60]
      when _T_83 : @[trigger_resolver.scala 72:88]
        node _T_84 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[0] <= _T_84 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_85 = bits(io.trigger.ictb, 0, 0) @[trigger_resolver.scala 75:62]
        node _T_86 = not(_T_85) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[0] <= _T_86 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[0] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_89 = bits(io.trigger.ici, 5, 3) @[trigger_resolver.scala 52:21]
    node _T_91 = neq(_T_89, UInt<1>("h00")) @[trigger_resolver.scala 55:35]
    when _T_91 : @[trigger_resolver.scala 55:43]
      node _T_93 = sub(_T_89, UInt<1>("h01")) @[trigger_resolver.scala 57:63]
      node _T_94 = asUInt(_T_93) @[trigger_resolver.scala 57:63]
      node _T_95 = tail(_T_94, 1) @[trigger_resolver.scala 57:63]
      node _T_96 = dshr(io.input_channel_empty_status, _T_95) @[trigger_resolver.scala 61:42]
      node _T_97 = bits(_T_96, 0, 0) @[trigger_resolver.scala 61:42]
      node _T_99 = eq(_T_97, UInt<1>("h00")) @[trigger_resolver.scala 61:12]
      when _T_99 : @[trigger_resolver.scala 61:69]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 62:51]
        skip @[trigger_resolver.scala 61:69]
      else : @[trigger_resolver.scala 63:18]
        valid_input_channel_empty_status_array[1] <= UInt<1>("h00") @[trigger_resolver.scala 64:51]
        skip @[trigger_resolver.scala 63:18]
      node _T_102 = bits(io.trigger.ictv, 3, 2) @[trigger_resolver.scala 69:52]
      node _T_104 = bits(_T_95, 1, 0)
      node _T_105 = eq(io.input_channel_tags[_T_104], _T_102) @[trigger_resolver.scala 72:60]
      when _T_105 : @[trigger_resolver.scala 72:88]
        node _T_106 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 73:61]
        valid_input_channel_tags_array[1] <= _T_106 @[trigger_resolver.scala 73:43]
        skip @[trigger_resolver.scala 72:88]
      else : @[trigger_resolver.scala 74:18]
        node _T_107 = bits(io.trigger.ictb, 1, 1) @[trigger_resolver.scala 75:62]
        node _T_108 = not(_T_107) @[trigger_resolver.scala 75:46]
        valid_input_channel_tags_array[1] <= _T_108 @[trigger_resolver.scala 75:43]
        skip @[trigger_resolver.scala 74:18]
      skip @[trigger_resolver.scala 55:43]
    else : @[trigger_resolver.scala 77:16]
      valid_input_channel_empty_status_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 79:49]
      valid_input_channel_tags_array[1] <= UInt<1>("h01") @[trigger_resolver.scala 80:41]
      skip @[trigger_resolver.scala 77:16]
    node _T_111 = cat(valid_input_channel_empty_status_array[1], valid_input_channel_empty_status_array[0]) @[trigger_resolver.scala 85:84]
    node _T_112 = not(_T_111) @[trigger_resolver.scala 85:91]
    node _T_114 = eq(_T_112, UInt<1>("h00")) @[trigger_resolver.scala 85:91]
    valid_input_channel_empty_status <= _T_114 @[trigger_resolver.scala 85:36]
    node _T_115 = cat(valid_input_channel_tags_array[1], valid_input_channel_tags_array[0]) @[trigger_resolver.scala 86:68]
    node _T_116 = not(_T_115) @[trigger_resolver.scala 86:75]
    node _T_118 = eq(_T_116, UInt<1>("h00")) @[trigger_resolver.scala 86:75]
    valid_input_channel_tags <= _T_118 @[trigger_resolver.scala 86:28]
    node _T_119 = and(io.trigger.oci, io.output_channel_full_status) @[trigger_resolver.scala 89:55]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[trigger_resolver.scala 89:88]
    valid_output_channel_full_status <= _T_121 @[trigger_resolver.scala 89:36]
    node _T_122 = and(valid_trigger, valid_predicate_state) @[trigger_resolver.scala 91:29]
    node _T_123 = and(_T_122, valid_input_channel_empty_status) @[trigger_resolver.scala 91:53]
    node _T_124 = and(_T_123, valid_input_channel_tags) @[trigger_resolver.scala 91:88]
    node _T_125 = and(_T_124, valid_output_channel_full_status) @[trigger_resolver.scala 92:30]
    io.valid <= _T_125 @[trigger_resolver.scala 91:12]
    
  module trigger_resolution_priority_encoder : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip trigger_states : UInt<1>[16], trigger_inst_valid : UInt<1>, triggered_inst_index : UInt<4>}
    
    wire triggered_inst_index : UInt<4> @[trigger_resolution_priority_encoder.scala 14:34]
    node _T_68 = mux(io.trigger_states[14], UInt<4>("h0e"), UInt<4>("h0f")) @[Mux.scala 31:69]
    node _T_69 = mux(io.trigger_states[13], UInt<4>("h0d"), _T_68) @[Mux.scala 31:69]
    node _T_70 = mux(io.trigger_states[12], UInt<4>("h0c"), _T_69) @[Mux.scala 31:69]
    node _T_71 = mux(io.trigger_states[11], UInt<4>("h0b"), _T_70) @[Mux.scala 31:69]
    node _T_72 = mux(io.trigger_states[10], UInt<4>("h0a"), _T_71) @[Mux.scala 31:69]
    node _T_73 = mux(io.trigger_states[9], UInt<4>("h09"), _T_72) @[Mux.scala 31:69]
    node _T_74 = mux(io.trigger_states[8], UInt<4>("h08"), _T_73) @[Mux.scala 31:69]
    node _T_75 = mux(io.trigger_states[7], UInt<3>("h07"), _T_74) @[Mux.scala 31:69]
    node _T_76 = mux(io.trigger_states[6], UInt<3>("h06"), _T_75) @[Mux.scala 31:69]
    node _T_77 = mux(io.trigger_states[5], UInt<3>("h05"), _T_76) @[Mux.scala 31:69]
    node _T_78 = mux(io.trigger_states[4], UInt<3>("h04"), _T_77) @[Mux.scala 31:69]
    node _T_79 = mux(io.trigger_states[3], UInt<2>("h03"), _T_78) @[Mux.scala 31:69]
    node _T_80 = mux(io.trigger_states[2], UInt<2>("h02"), _T_79) @[Mux.scala 31:69]
    node _T_81 = mux(io.trigger_states[1], UInt<1>("h01"), _T_80) @[Mux.scala 31:69]
    node _T_82 = mux(io.trigger_states[0], UInt<1>("h00"), _T_81) @[Mux.scala 31:69]
    triggered_inst_index <= _T_82 @[trigger_resolution_priority_encoder.scala 15:24]
    node _T_84 = eq(triggered_inst_index, UInt<5>("h010")) @[trigger_resolution_priority_encoder.scala 17:29]
    when _T_84 : @[trigger_resolution_priority_encoder.scala 17:60]
      when io.trigger_states[15] : @[trigger_resolution_priority_encoder.scala 18:58]
        io.trigger_inst_valid <= UInt<1>("h01") @[trigger_resolution_priority_encoder.scala 19:29]
        io.triggered_inst_index <= triggered_inst_index @[trigger_resolution_priority_encoder.scala 20:31]
        skip @[trigger_resolution_priority_encoder.scala 18:58]
      else : @[trigger_resolution_priority_encoder.scala 21:16]
        io.trigger_inst_valid <= UInt<1>("h00") @[trigger_resolution_priority_encoder.scala 22:29]
        io.triggered_inst_index <= UInt<1>("h00") @[trigger_resolution_priority_encoder.scala 23:31]
        skip @[trigger_resolution_priority_encoder.scala 21:16]
      skip @[trigger_resolution_priority_encoder.scala 17:60]
    else : @[trigger_resolution_priority_encoder.scala 25:14]
      io.trigger_inst_valid <= UInt<1>("h01") @[trigger_resolution_priority_encoder.scala 26:27]
      io.triggered_inst_index <= triggered_inst_index @[trigger_resolution_priority_encoder.scala 27:29]
      skip @[trigger_resolution_priority_encoder.scala 25:14]
    node _T_89 = bits(reset, 0, 0) @[trigger_resolution_priority_encoder.scala 29:9]
    node _T_91 = eq(_T_89, UInt<1>("h00")) @[trigger_resolution_priority_encoder.scala 29:9]
    when _T_91 : @[trigger_resolution_priority_encoder.scala 29:9]
      printf(clock, UInt<1>(1), "trigger states = Vec(%d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d)\n", io.trigger_states[0], io.trigger_states[1], io.trigger_states[2], io.trigger_states[3], io.trigger_states[4], io.trigger_states[5], io.trigger_states[6], io.trigger_states[7], io.trigger_states[8], io.trigger_states[9], io.trigger_states[10], io.trigger_states[11], io.trigger_states[12], io.trigger_states[13], io.trigger_states[14], io.trigger_states[15]) @[trigger_resolution_priority_encoder.scala 29:9]
      skip @[trigger_resolution_priority_encoder.scala 29:9]
    node _T_92 = bits(reset, 0, 0) @[trigger_resolution_priority_encoder.scala 30:9]
    node _T_94 = eq(_T_92, UInt<1>("h00")) @[trigger_resolution_priority_encoder.scala 30:9]
    when _T_94 : @[trigger_resolution_priority_encoder.scala 30:9]
      printf(clock, UInt<1>(1), "the triggered instruction index is = %d\n", triggered_inst_index) @[trigger_resolution_priority_encoder.scala 30:9]
      skip @[trigger_resolution_priority_encoder.scala 30:9]
    node _T_95 = bits(reset, 0, 0) @[trigger_resolution_priority_encoder.scala 31:9]
    node _T_97 = eq(_T_95, UInt<1>("h00")) @[trigger_resolution_priority_encoder.scala 31:9]
    when _T_97 : @[trigger_resolution_priority_encoder.scala 31:9]
      printf(clock, UInt<1>(1), "-------------------------\n") @[trigger_resolution_priority_encoder.scala 31:9]
      skip @[trigger_resolution_priority_encoder.scala 31:9]
    
  module trigger_resolution_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip execute : UInt<1>, flip halted : UInt<1>, flip triggers : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}[16], flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, triggered_instruction_valid : UInt<1>, triggered_instruction_index : UInt<4>}
    
    wire halt_insensitive_triggered_instruction_valid : UInt<1> @[trigger_resolution_unit.scala 26:58]
    wire trigger_states : UInt<1>[16] @[trigger_resolution_unit.scala 29:28]
    inst trigger_resolver of trigger_resolver @[trigger_resolution_unit.scala 32:77]
    trigger_resolver.clock <= clock
    trigger_resolver.reset <= reset
    inst trigger_resolver_1 of trigger_resolver_1 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_1.clock <= clock
    trigger_resolver_1.reset <= reset
    inst trigger_resolver_2 of trigger_resolver_2 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_2.clock <= clock
    trigger_resolver_2.reset <= reset
    inst trigger_resolver_3 of trigger_resolver_3 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_3.clock <= clock
    trigger_resolver_3.reset <= reset
    inst trigger_resolver_4 of trigger_resolver_4 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_4.clock <= clock
    trigger_resolver_4.reset <= reset
    inst trigger_resolver_5 of trigger_resolver_5 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_5.clock <= clock
    trigger_resolver_5.reset <= reset
    inst trigger_resolver_6 of trigger_resolver_6 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_6.clock <= clock
    trigger_resolver_6.reset <= reset
    inst trigger_resolver_7 of trigger_resolver_7 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_7.clock <= clock
    trigger_resolver_7.reset <= reset
    inst trigger_resolver_8 of trigger_resolver_8 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_8.clock <= clock
    trigger_resolver_8.reset <= reset
    inst trigger_resolver_9 of trigger_resolver_9 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_9.clock <= clock
    trigger_resolver_9.reset <= reset
    inst trigger_resolver_10 of trigger_resolver_10 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_10.clock <= clock
    trigger_resolver_10.reset <= reset
    inst trigger_resolver_11 of trigger_resolver_11 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_11.clock <= clock
    trigger_resolver_11.reset <= reset
    inst trigger_resolver_12 of trigger_resolver_12 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_12.clock <= clock
    trigger_resolver_12.reset <= reset
    inst trigger_resolver_13 of trigger_resolver_13 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_13.clock <= clock
    trigger_resolver_13.reset <= reset
    inst trigger_resolver_14 of trigger_resolver_14 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_14.clock <= clock
    trigger_resolver_14.reset <= reset
    inst trigger_resolver_15 of trigger_resolver_15 @[trigger_resolution_unit.scala 32:77]
    trigger_resolver_15.clock <= clock
    trigger_resolver_15.reset <= reset
    wire trigger_resolvers : {flip trigger : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}, flip predicates : UInt<8>, flip input_channel_empty_status : UInt<4>, flip input_channel_tags : UInt<2>[4], flip output_channel_full_status : UInt<4>, valid : UInt<1>}[16] @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[0].valid <= trigger_resolver.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.output_channel_full_status <= trigger_resolvers[0].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.input_channel_tags[0] <= trigger_resolvers[0].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.input_channel_tags[1] <= trigger_resolvers[0].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.input_channel_tags[2] <= trigger_resolvers[0].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.input_channel_tags[3] <= trigger_resolvers[0].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.input_channel_empty_status <= trigger_resolvers[0].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.predicates <= trigger_resolvers[0].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.trigger.oci <= trigger_resolvers[0].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.trigger.ictv <= trigger_resolvers[0].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.trigger.ictb <= trigger_resolvers[0].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.trigger.ici <= trigger_resolvers[0].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.trigger.ptm <= trigger_resolvers[0].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver.io.trigger.vi <= trigger_resolvers[0].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[1].valid <= trigger_resolver_1.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.output_channel_full_status <= trigger_resolvers[1].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.input_channel_tags[0] <= trigger_resolvers[1].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.input_channel_tags[1] <= trigger_resolvers[1].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.input_channel_tags[2] <= trigger_resolvers[1].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.input_channel_tags[3] <= trigger_resolvers[1].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.input_channel_empty_status <= trigger_resolvers[1].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.predicates <= trigger_resolvers[1].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.trigger.oci <= trigger_resolvers[1].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.trigger.ictv <= trigger_resolvers[1].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.trigger.ictb <= trigger_resolvers[1].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.trigger.ici <= trigger_resolvers[1].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.trigger.ptm <= trigger_resolvers[1].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_1.io.trigger.vi <= trigger_resolvers[1].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[2].valid <= trigger_resolver_2.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.output_channel_full_status <= trigger_resolvers[2].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.input_channel_tags[0] <= trigger_resolvers[2].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.input_channel_tags[1] <= trigger_resolvers[2].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.input_channel_tags[2] <= trigger_resolvers[2].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.input_channel_tags[3] <= trigger_resolvers[2].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.input_channel_empty_status <= trigger_resolvers[2].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.predicates <= trigger_resolvers[2].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.trigger.oci <= trigger_resolvers[2].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.trigger.ictv <= trigger_resolvers[2].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.trigger.ictb <= trigger_resolvers[2].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.trigger.ici <= trigger_resolvers[2].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.trigger.ptm <= trigger_resolvers[2].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_2.io.trigger.vi <= trigger_resolvers[2].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[3].valid <= trigger_resolver_3.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.output_channel_full_status <= trigger_resolvers[3].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.input_channel_tags[0] <= trigger_resolvers[3].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.input_channel_tags[1] <= trigger_resolvers[3].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.input_channel_tags[2] <= trigger_resolvers[3].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.input_channel_tags[3] <= trigger_resolvers[3].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.input_channel_empty_status <= trigger_resolvers[3].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.predicates <= trigger_resolvers[3].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.trigger.oci <= trigger_resolvers[3].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.trigger.ictv <= trigger_resolvers[3].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.trigger.ictb <= trigger_resolvers[3].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.trigger.ici <= trigger_resolvers[3].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.trigger.ptm <= trigger_resolvers[3].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_3.io.trigger.vi <= trigger_resolvers[3].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[4].valid <= trigger_resolver_4.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.output_channel_full_status <= trigger_resolvers[4].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.input_channel_tags[0] <= trigger_resolvers[4].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.input_channel_tags[1] <= trigger_resolvers[4].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.input_channel_tags[2] <= trigger_resolvers[4].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.input_channel_tags[3] <= trigger_resolvers[4].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.input_channel_empty_status <= trigger_resolvers[4].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.predicates <= trigger_resolvers[4].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.trigger.oci <= trigger_resolvers[4].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.trigger.ictv <= trigger_resolvers[4].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.trigger.ictb <= trigger_resolvers[4].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.trigger.ici <= trigger_resolvers[4].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.trigger.ptm <= trigger_resolvers[4].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_4.io.trigger.vi <= trigger_resolvers[4].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[5].valid <= trigger_resolver_5.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.output_channel_full_status <= trigger_resolvers[5].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.input_channel_tags[0] <= trigger_resolvers[5].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.input_channel_tags[1] <= trigger_resolvers[5].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.input_channel_tags[2] <= trigger_resolvers[5].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.input_channel_tags[3] <= trigger_resolvers[5].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.input_channel_empty_status <= trigger_resolvers[5].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.predicates <= trigger_resolvers[5].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.trigger.oci <= trigger_resolvers[5].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.trigger.ictv <= trigger_resolvers[5].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.trigger.ictb <= trigger_resolvers[5].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.trigger.ici <= trigger_resolvers[5].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.trigger.ptm <= trigger_resolvers[5].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_5.io.trigger.vi <= trigger_resolvers[5].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[6].valid <= trigger_resolver_6.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.output_channel_full_status <= trigger_resolvers[6].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.input_channel_tags[0] <= trigger_resolvers[6].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.input_channel_tags[1] <= trigger_resolvers[6].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.input_channel_tags[2] <= trigger_resolvers[6].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.input_channel_tags[3] <= trigger_resolvers[6].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.input_channel_empty_status <= trigger_resolvers[6].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.predicates <= trigger_resolvers[6].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.trigger.oci <= trigger_resolvers[6].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.trigger.ictv <= trigger_resolvers[6].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.trigger.ictb <= trigger_resolvers[6].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.trigger.ici <= trigger_resolvers[6].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.trigger.ptm <= trigger_resolvers[6].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_6.io.trigger.vi <= trigger_resolvers[6].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[7].valid <= trigger_resolver_7.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.output_channel_full_status <= trigger_resolvers[7].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.input_channel_tags[0] <= trigger_resolvers[7].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.input_channel_tags[1] <= trigger_resolvers[7].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.input_channel_tags[2] <= trigger_resolvers[7].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.input_channel_tags[3] <= trigger_resolvers[7].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.input_channel_empty_status <= trigger_resolvers[7].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.predicates <= trigger_resolvers[7].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.trigger.oci <= trigger_resolvers[7].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.trigger.ictv <= trigger_resolvers[7].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.trigger.ictb <= trigger_resolvers[7].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.trigger.ici <= trigger_resolvers[7].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.trigger.ptm <= trigger_resolvers[7].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_7.io.trigger.vi <= trigger_resolvers[7].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[8].valid <= trigger_resolver_8.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.output_channel_full_status <= trigger_resolvers[8].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.input_channel_tags[0] <= trigger_resolvers[8].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.input_channel_tags[1] <= trigger_resolvers[8].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.input_channel_tags[2] <= trigger_resolvers[8].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.input_channel_tags[3] <= trigger_resolvers[8].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.input_channel_empty_status <= trigger_resolvers[8].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.predicates <= trigger_resolvers[8].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.trigger.oci <= trigger_resolvers[8].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.trigger.ictv <= trigger_resolvers[8].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.trigger.ictb <= trigger_resolvers[8].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.trigger.ici <= trigger_resolvers[8].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.trigger.ptm <= trigger_resolvers[8].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_8.io.trigger.vi <= trigger_resolvers[8].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[9].valid <= trigger_resolver_9.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.output_channel_full_status <= trigger_resolvers[9].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.input_channel_tags[0] <= trigger_resolvers[9].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.input_channel_tags[1] <= trigger_resolvers[9].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.input_channel_tags[2] <= trigger_resolvers[9].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.input_channel_tags[3] <= trigger_resolvers[9].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.input_channel_empty_status <= trigger_resolvers[9].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.predicates <= trigger_resolvers[9].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.trigger.oci <= trigger_resolvers[9].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.trigger.ictv <= trigger_resolvers[9].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.trigger.ictb <= trigger_resolvers[9].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.trigger.ici <= trigger_resolvers[9].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.trigger.ptm <= trigger_resolvers[9].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_9.io.trigger.vi <= trigger_resolvers[9].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[10].valid <= trigger_resolver_10.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.output_channel_full_status <= trigger_resolvers[10].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.input_channel_tags[0] <= trigger_resolvers[10].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.input_channel_tags[1] <= trigger_resolvers[10].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.input_channel_tags[2] <= trigger_resolvers[10].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.input_channel_tags[3] <= trigger_resolvers[10].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.input_channel_empty_status <= trigger_resolvers[10].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.predicates <= trigger_resolvers[10].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.trigger.oci <= trigger_resolvers[10].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.trigger.ictv <= trigger_resolvers[10].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.trigger.ictb <= trigger_resolvers[10].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.trigger.ici <= trigger_resolvers[10].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.trigger.ptm <= trigger_resolvers[10].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_10.io.trigger.vi <= trigger_resolvers[10].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[11].valid <= trigger_resolver_11.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.output_channel_full_status <= trigger_resolvers[11].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.input_channel_tags[0] <= trigger_resolvers[11].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.input_channel_tags[1] <= trigger_resolvers[11].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.input_channel_tags[2] <= trigger_resolvers[11].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.input_channel_tags[3] <= trigger_resolvers[11].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.input_channel_empty_status <= trigger_resolvers[11].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.predicates <= trigger_resolvers[11].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.trigger.oci <= trigger_resolvers[11].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.trigger.ictv <= trigger_resolvers[11].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.trigger.ictb <= trigger_resolvers[11].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.trigger.ici <= trigger_resolvers[11].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.trigger.ptm <= trigger_resolvers[11].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_11.io.trigger.vi <= trigger_resolvers[11].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[12].valid <= trigger_resolver_12.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.output_channel_full_status <= trigger_resolvers[12].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.input_channel_tags[0] <= trigger_resolvers[12].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.input_channel_tags[1] <= trigger_resolvers[12].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.input_channel_tags[2] <= trigger_resolvers[12].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.input_channel_tags[3] <= trigger_resolvers[12].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.input_channel_empty_status <= trigger_resolvers[12].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.predicates <= trigger_resolvers[12].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.trigger.oci <= trigger_resolvers[12].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.trigger.ictv <= trigger_resolvers[12].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.trigger.ictb <= trigger_resolvers[12].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.trigger.ici <= trigger_resolvers[12].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.trigger.ptm <= trigger_resolvers[12].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_12.io.trigger.vi <= trigger_resolvers[12].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[13].valid <= trigger_resolver_13.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.output_channel_full_status <= trigger_resolvers[13].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.input_channel_tags[0] <= trigger_resolvers[13].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.input_channel_tags[1] <= trigger_resolvers[13].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.input_channel_tags[2] <= trigger_resolvers[13].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.input_channel_tags[3] <= trigger_resolvers[13].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.input_channel_empty_status <= trigger_resolvers[13].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.predicates <= trigger_resolvers[13].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.trigger.oci <= trigger_resolvers[13].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.trigger.ictv <= trigger_resolvers[13].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.trigger.ictb <= trigger_resolvers[13].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.trigger.ici <= trigger_resolvers[13].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.trigger.ptm <= trigger_resolvers[13].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_13.io.trigger.vi <= trigger_resolvers[13].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[14].valid <= trigger_resolver_14.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.output_channel_full_status <= trigger_resolvers[14].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.input_channel_tags[0] <= trigger_resolvers[14].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.input_channel_tags[1] <= trigger_resolvers[14].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.input_channel_tags[2] <= trigger_resolvers[14].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.input_channel_tags[3] <= trigger_resolvers[14].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.input_channel_empty_status <= trigger_resolvers[14].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.predicates <= trigger_resolvers[14].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.trigger.oci <= trigger_resolvers[14].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.trigger.ictv <= trigger_resolvers[14].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.trigger.ictb <= trigger_resolvers[14].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.trigger.ici <= trigger_resolvers[14].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.trigger.ptm <= trigger_resolvers[14].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_14.io.trigger.vi <= trigger_resolvers[14].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[15].valid <= trigger_resolver_15.io.valid @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.output_channel_full_status <= trigger_resolvers[15].output_channel_full_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.input_channel_tags[0] <= trigger_resolvers[15].input_channel_tags[0] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.input_channel_tags[1] <= trigger_resolvers[15].input_channel_tags[1] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.input_channel_tags[2] <= trigger_resolvers[15].input_channel_tags[2] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.input_channel_tags[3] <= trigger_resolvers[15].input_channel_tags[3] @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.input_channel_empty_status <= trigger_resolvers[15].input_channel_empty_status @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.predicates <= trigger_resolvers[15].predicates @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.trigger.oci <= trigger_resolvers[15].trigger.oci @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.trigger.ictv <= trigger_resolvers[15].trigger.ictv @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.trigger.ictb <= trigger_resolvers[15].trigger.ictb @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.trigger.ici <= trigger_resolvers[15].trigger.ici @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.trigger.ptm <= trigger_resolvers[15].trigger.ptm @[trigger_resolution_unit.scala 32:34]
    trigger_resolver_15.io.trigger.vi <= trigger_resolvers[15].trigger.vi @[trigger_resolution_unit.scala 32:34]
    trigger_resolvers[0].trigger.oci <= io.triggers[0].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[0].trigger.ictv <= io.triggers[0].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[0].trigger.ictb <= io.triggers[0].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[0].trigger.ici <= io.triggers[0].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[0].trigger.ptm <= io.triggers[0].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[0].trigger.vi <= io.triggers[0].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[0].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[0].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[0].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[0].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[0].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[0].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[0].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[0] <= trigger_resolvers[0].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[1].trigger.oci <= io.triggers[1].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[1].trigger.ictv <= io.triggers[1].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[1].trigger.ictb <= io.triggers[1].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[1].trigger.ici <= io.triggers[1].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[1].trigger.ptm <= io.triggers[1].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[1].trigger.vi <= io.triggers[1].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[1].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[1].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[1].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[1].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[1].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[1].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[1].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[1] <= trigger_resolvers[1].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[2].trigger.oci <= io.triggers[2].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[2].trigger.ictv <= io.triggers[2].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[2].trigger.ictb <= io.triggers[2].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[2].trigger.ici <= io.triggers[2].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[2].trigger.ptm <= io.triggers[2].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[2].trigger.vi <= io.triggers[2].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[2].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[2].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[2].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[2].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[2].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[2].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[2].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[2] <= trigger_resolvers[2].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[3].trigger.oci <= io.triggers[3].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[3].trigger.ictv <= io.triggers[3].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[3].trigger.ictb <= io.triggers[3].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[3].trigger.ici <= io.triggers[3].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[3].trigger.ptm <= io.triggers[3].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[3].trigger.vi <= io.triggers[3].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[3].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[3].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[3].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[3].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[3].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[3].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[3].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[3] <= trigger_resolvers[3].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[4].trigger.oci <= io.triggers[4].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[4].trigger.ictv <= io.triggers[4].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[4].trigger.ictb <= io.triggers[4].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[4].trigger.ici <= io.triggers[4].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[4].trigger.ptm <= io.triggers[4].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[4].trigger.vi <= io.triggers[4].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[4].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[4].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[4].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[4].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[4].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[4].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[4].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[4] <= trigger_resolvers[4].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[5].trigger.oci <= io.triggers[5].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[5].trigger.ictv <= io.triggers[5].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[5].trigger.ictb <= io.triggers[5].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[5].trigger.ici <= io.triggers[5].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[5].trigger.ptm <= io.triggers[5].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[5].trigger.vi <= io.triggers[5].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[5].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[5].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[5].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[5].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[5].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[5].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[5].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[5] <= trigger_resolvers[5].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[6].trigger.oci <= io.triggers[6].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[6].trigger.ictv <= io.triggers[6].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[6].trigger.ictb <= io.triggers[6].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[6].trigger.ici <= io.triggers[6].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[6].trigger.ptm <= io.triggers[6].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[6].trigger.vi <= io.triggers[6].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[6].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[6].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[6].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[6].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[6].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[6].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[6].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[6] <= trigger_resolvers[6].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[7].trigger.oci <= io.triggers[7].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[7].trigger.ictv <= io.triggers[7].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[7].trigger.ictb <= io.triggers[7].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[7].trigger.ici <= io.triggers[7].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[7].trigger.ptm <= io.triggers[7].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[7].trigger.vi <= io.triggers[7].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[7].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[7].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[7].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[7].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[7].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[7].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[7].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[7] <= trigger_resolvers[7].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[8].trigger.oci <= io.triggers[8].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[8].trigger.ictv <= io.triggers[8].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[8].trigger.ictb <= io.triggers[8].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[8].trigger.ici <= io.triggers[8].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[8].trigger.ptm <= io.triggers[8].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[8].trigger.vi <= io.triggers[8].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[8].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[8].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[8].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[8].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[8].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[8].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[8].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[8] <= trigger_resolvers[8].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[9].trigger.oci <= io.triggers[9].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[9].trigger.ictv <= io.triggers[9].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[9].trigger.ictb <= io.triggers[9].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[9].trigger.ici <= io.triggers[9].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[9].trigger.ptm <= io.triggers[9].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[9].trigger.vi <= io.triggers[9].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[9].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[9].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[9].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[9].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[9].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[9].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[9].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[9] <= trigger_resolvers[9].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[10].trigger.oci <= io.triggers[10].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[10].trigger.ictv <= io.triggers[10].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[10].trigger.ictb <= io.triggers[10].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[10].trigger.ici <= io.triggers[10].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[10].trigger.ptm <= io.triggers[10].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[10].trigger.vi <= io.triggers[10].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[10].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[10].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[10].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[10].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[10].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[10].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[10].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[10] <= trigger_resolvers[10].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[11].trigger.oci <= io.triggers[11].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[11].trigger.ictv <= io.triggers[11].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[11].trigger.ictb <= io.triggers[11].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[11].trigger.ici <= io.triggers[11].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[11].trigger.ptm <= io.triggers[11].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[11].trigger.vi <= io.triggers[11].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[11].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[11].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[11].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[11].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[11].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[11].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[11].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[11] <= trigger_resolvers[11].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[12].trigger.oci <= io.triggers[12].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[12].trigger.ictv <= io.triggers[12].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[12].trigger.ictb <= io.triggers[12].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[12].trigger.ici <= io.triggers[12].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[12].trigger.ptm <= io.triggers[12].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[12].trigger.vi <= io.triggers[12].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[12].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[12].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[12].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[12].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[12].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[12].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[12].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[12] <= trigger_resolvers[12].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[13].trigger.oci <= io.triggers[13].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[13].trigger.ictv <= io.triggers[13].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[13].trigger.ictb <= io.triggers[13].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[13].trigger.ici <= io.triggers[13].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[13].trigger.ptm <= io.triggers[13].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[13].trigger.vi <= io.triggers[13].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[13].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[13].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[13].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[13].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[13].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[13].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[13].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[13] <= trigger_resolvers[13].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[14].trigger.oci <= io.triggers[14].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[14].trigger.ictv <= io.triggers[14].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[14].trigger.ictb <= io.triggers[14].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[14].trigger.ici <= io.triggers[14].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[14].trigger.ptm <= io.triggers[14].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[14].trigger.vi <= io.triggers[14].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[14].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[14].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[14].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[14].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[14].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[14].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[14].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[14] <= trigger_resolvers[14].valid @[trigger_resolution_unit.scala 39:23]
    trigger_resolvers[15].trigger.oci <= io.triggers[15].oci @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[15].trigger.ictv <= io.triggers[15].ictv @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[15].trigger.ictb <= io.triggers[15].ictb @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[15].trigger.ici <= io.triggers[15].ici @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[15].trigger.ptm <= io.triggers[15].ptm @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[15].trigger.vi <= io.triggers[15].vi @[trigger_resolution_unit.scala 34:34]
    trigger_resolvers[15].input_channel_empty_status <= io.input_channel_empty_status @[trigger_resolution_unit.scala 35:53]
    trigger_resolvers[15].predicates <= io.predicates @[trigger_resolution_unit.scala 36:37]
    trigger_resolvers[15].input_channel_tags[0] <= io.input_channel_tags[0] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[15].input_channel_tags[1] <= io.input_channel_tags[1] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[15].input_channel_tags[2] <= io.input_channel_tags[2] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[15].input_channel_tags[3] <= io.input_channel_tags[3] @[trigger_resolution_unit.scala 37:45]
    trigger_resolvers[15].output_channel_full_status <= io.output_channel_full_status @[trigger_resolution_unit.scala 38:53]
    trigger_states[15] <= trigger_resolvers[15].valid @[trigger_resolution_unit.scala 39:23]
    inst trigger_resolution_priority_encoder of trigger_resolution_priority_encoder @[trigger_resolution_unit.scala 42:20]
    trigger_resolution_priority_encoder.clock <= clock
    trigger_resolution_priority_encoder.reset <= reset
    trigger_resolution_priority_encoder.io.trigger_states[0] <= trigger_states[0] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[1] <= trigger_states[1] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[2] <= trigger_states[2] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[3] <= trigger_states[3] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[4] <= trigger_states[4] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[5] <= trigger_states[5] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[6] <= trigger_states[6] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[7] <= trigger_states[7] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[8] <= trigger_states[8] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[9] <= trigger_states[9] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[10] <= trigger_states[10] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[11] <= trigger_states[11] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[12] <= trigger_states[12] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[13] <= trigger_states[13] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[14] <= trigger_states[14] @[trigger_resolution_unit.scala 43:23]
    trigger_resolution_priority_encoder.io.trigger_states[15] <= trigger_states[15] @[trigger_resolution_unit.scala 43:23]
    halt_insensitive_triggered_instruction_valid <= trigger_resolution_priority_encoder.io.trigger_inst_valid @[trigger_resolution_unit.scala 44:48]
    io.triggered_instruction_index <= trigger_resolution_priority_encoder.io.triggered_inst_index @[trigger_resolution_unit.scala 45:34]
    node _T_816 = and(io.enable, io.execute) @[trigger_resolution_unit.scala 47:47]
    node _T_817 = and(_T_816, halt_insensitive_triggered_instruction_valid) @[trigger_resolution_unit.scala 47:61]
    node _T_819 = eq(io.halted, UInt<1>("h00")) @[trigger_resolution_unit.scala 47:112]
    node _T_820 = and(_T_817, _T_819) @[trigger_resolution_unit.scala 47:109]
    io.triggered_instruction_valid <= _T_820 @[trigger_resolution_unit.scala 47:34]
    
  module instruction : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_1 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_2 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_3 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_4 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_5 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_6 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_7 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_8 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_9 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_10 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_11 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_12 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_13 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_14 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module instruction_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>}, flip write : UInt<53>}
    
    node _T_11 = bits(io.write, 0, 0) @[instruction_t.scala 178:8]
    reg vi : UInt<1>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      vi <= _T_11 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_13 = bits(io.write, 6, 1) @[instruction_t.scala 178:8]
    reg op : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      op <= _T_13 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_15 = bits(io.write, 12, 7) @[instruction_t.scala 178:8]
    reg st : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      st <= _T_15 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_17 = bits(io.write, 21, 13) @[instruction_t.scala 178:8]
    reg si : UInt<9>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      si <= _T_17 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_19 = bits(io.write, 23, 22) @[instruction_t.scala 178:8]
    reg dt : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      dt <= _T_19 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_21 = bits(io.write, 26, 24) @[instruction_t.scala 178:8]
    reg di : UInt<3>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      di <= _T_21 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_23 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oci : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oci <= _T_23 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_25 = bits(io.write, 32, 31) @[instruction_t.scala 178:8]
    reg oct : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      oct <= _T_25 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_27 = bits(io.write, 36, 33) @[instruction_t.scala 178:8]
    reg icd : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      icd <= _T_27 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_29 = bits(io.write, 52, 37) @[instruction_t.scala 178:8]
    reg pum : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      pum <= _T_29 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= vi @[instruction_t.scala 71:14]
    io.read.op <= op @[instruction_t.scala 72:14]
    io.read.st <= st @[instruction_t.scala 73:14]
    io.read.si <= si @[instruction_t.scala 74:14]
    io.read.dt <= dt @[instruction_t.scala 75:14]
    io.read.di <= di @[instruction_t.scala 76:14]
    io.read.oci <= oci @[instruction_t.scala 77:15]
    io.read.oct <= oct @[instruction_t.scala 78:15]
    io.read.icd <= icd @[instruction_t.scala 79:15]
    io.read.pum <= pum @[instruction_t.scala 80:15]
    
  module mm_instruction_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}
    
    inst instruction of instruction_15 @[instruction_t.scala 15:28]
    instruction.clock <= clock
    instruction.reset <= reset
    instruction.io.enable <= io.enable @[instruction_t.scala 18:23]
    node _T_11 = bits(io.write, 52, 0) @[instruction_t.scala 178:8]
    instruction.io.write <= _T_11 @[instruction_t.scala 23:22]
    node _T_12 = bits(io.write, 68, 53) @[instruction_t.scala 178:8]
    reg ptm : UInt<16>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ptm <= _T_12 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_14 = bits(io.write, 74, 69) @[instruction_t.scala 178:8]
    reg ici : UInt<6>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ici <= _T_14 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_16 = bits(io.write, 76, 75) @[instruction_t.scala 178:8]
    reg ictb : UInt<2>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictb <= _T_16 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_18 = bits(io.write, 80, 77) @[instruction_t.scala 178:8]
    reg ictv : UInt<4>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      ictv <= _T_18 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_20 = bits(io.write, 112, 81) @[instruction_t.scala 178:8]
    reg immediate : UInt<32>, clock @[Reg.scala 11:16]
    when io.enable : @[Reg.scala 12:19]
      immediate <= _T_20 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.read.vi <= instruction.io.read.vi @[instruction_t.scala 32:14]
    io.read.op <= instruction.io.read.op @[instruction_t.scala 33:14]
    io.read.st <= instruction.io.read.st @[instruction_t.scala 34:14]
    io.read.si <= instruction.io.read.si @[instruction_t.scala 35:14]
    io.read.dt <= instruction.io.read.dt @[instruction_t.scala 36:14]
    io.read.di <= instruction.io.read.di @[instruction_t.scala 37:14]
    io.read.oci <= instruction.io.read.oci @[instruction_t.scala 38:15]
    io.read.oct <= instruction.io.read.oct @[instruction_t.scala 39:15]
    io.read.icd <= instruction.io.read.icd @[instruction_t.scala 40:15]
    io.read.pum <= instruction.io.read.pum @[instruction_t.scala 41:15]
    io.read.ptm <= ptm @[instruction_t.scala 43:15]
    io.read.ici <= ici @[instruction_t.scala 44:15]
    io.read.ictb <= ictb @[instruction_t.scala 45:16]
    io.read.ictv <= ictv @[instruction_t.scala 46:16]
    io.read.immediate <= immediate @[instruction_t.scala 47:21]
    io.read.padding <= UInt<1>("h00") @[instruction_t.scala 48:19]
    
  module zero_mm_instruction : 
    input clock : Clock
    input reset : UInt<1>
    output io : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}
    
    io.vi <= UInt<1>("h00") @[instruction_t.scala 110:9]
    io.op <= UInt<6>("h00") @[instruction_t.scala 111:9]
    io.st <= UInt<6>("h00") @[instruction_t.scala 112:9]
    io.si <= UInt<9>("h00") @[instruction_t.scala 113:9]
    io.dt <= UInt<2>("h00") @[instruction_t.scala 114:9]
    io.di <= UInt<3>("h00") @[instruction_t.scala 115:9]
    io.oci <= UInt<4>("h00") @[instruction_t.scala 116:10]
    io.oct <= UInt<2>("h00") @[instruction_t.scala 117:10]
    io.icd <= UInt<4>("h00") @[instruction_t.scala 118:10]
    io.pum <= UInt<16>("h00") @[instruction_t.scala 119:10]
    io.immediate <= UInt<32>("h00") @[instruction_t.scala 120:16]
    io.ptm <= UInt<16>("h00") @[instruction_t.scala 121:10]
    io.ici <= UInt<6>("h00") @[instruction_t.scala 122:10]
    io.ictb <= UInt<2>("h00") @[instruction_t.scala 123:11]
    io.ictv <= UInt<4>("h00") @[instruction_t.scala 124:11]
    io.padding <= UInt<15>("h00") @[instruction_t.scala 125:14]
    
  module instruction_memory : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, host_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, triggers : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}[16], flip triggered_instruction_valid : UInt<1>, flip triggered_instruction_index : UInt<4>, triggered_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}}
    
    inst mm_instruction of mm_instruction @[instruction_memory.scala 22:73]
    mm_instruction.clock <= clock
    mm_instruction.reset <= reset
    inst mm_instruction_1 of mm_instruction_1 @[instruction_memory.scala 22:73]
    mm_instruction_1.clock <= clock
    mm_instruction_1.reset <= reset
    inst mm_instruction_2 of mm_instruction_2 @[instruction_memory.scala 22:73]
    mm_instruction_2.clock <= clock
    mm_instruction_2.reset <= reset
    inst mm_instruction_3 of mm_instruction_3 @[instruction_memory.scala 22:73]
    mm_instruction_3.clock <= clock
    mm_instruction_3.reset <= reset
    inst mm_instruction_4 of mm_instruction_4 @[instruction_memory.scala 22:73]
    mm_instruction_4.clock <= clock
    mm_instruction_4.reset <= reset
    inst mm_instruction_5 of mm_instruction_5 @[instruction_memory.scala 22:73]
    mm_instruction_5.clock <= clock
    mm_instruction_5.reset <= reset
    inst mm_instruction_6 of mm_instruction_6 @[instruction_memory.scala 22:73]
    mm_instruction_6.clock <= clock
    mm_instruction_6.reset <= reset
    inst mm_instruction_7 of mm_instruction_7 @[instruction_memory.scala 22:73]
    mm_instruction_7.clock <= clock
    mm_instruction_7.reset <= reset
    inst mm_instruction_8 of mm_instruction_8 @[instruction_memory.scala 22:73]
    mm_instruction_8.clock <= clock
    mm_instruction_8.reset <= reset
    inst mm_instruction_9 of mm_instruction_9 @[instruction_memory.scala 22:73]
    mm_instruction_9.clock <= clock
    mm_instruction_9.reset <= reset
    inst mm_instruction_10 of mm_instruction_10 @[instruction_memory.scala 22:73]
    mm_instruction_10.clock <= clock
    mm_instruction_10.reset <= reset
    inst mm_instruction_11 of mm_instruction_11 @[instruction_memory.scala 22:73]
    mm_instruction_11.clock <= clock
    mm_instruction_11.reset <= reset
    inst mm_instruction_12 of mm_instruction_12 @[instruction_memory.scala 22:73]
    mm_instruction_12.clock <= clock
    mm_instruction_12.reset <= reset
    inst mm_instruction_13 of mm_instruction_13 @[instruction_memory.scala 22:73]
    mm_instruction_13.clock <= clock
    mm_instruction_13.reset <= reset
    inst mm_instruction_14 of mm_instruction_14 @[instruction_memory.scala 22:73]
    mm_instruction_14.clock <= clock
    mm_instruction_14.reset <= reset
    inst mm_instruction_15 of mm_instruction_15 @[instruction_memory.scala 22:73]
    mm_instruction_15.clock <= clock
    mm_instruction_15.reset <= reset
    wire mm_instruction_16 : {flip enable : UInt<1>, read : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, padding : UInt<15>}, flip write : UInt<128>}[16] @[instruction_memory.scala 22:31]
    mm_instruction.io.write <= mm_instruction_16[0].write @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.padding <= mm_instruction.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.ictv <= mm_instruction.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.ictb <= mm_instruction.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.ici <= mm_instruction.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.ptm <= mm_instruction.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.immediate <= mm_instruction.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.pum <= mm_instruction.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.icd <= mm_instruction.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.oct <= mm_instruction.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.oci <= mm_instruction.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.di <= mm_instruction.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.dt <= mm_instruction.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.si <= mm_instruction.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.st <= mm_instruction.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.op <= mm_instruction.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[0].read.vi <= mm_instruction.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction.io.enable <= mm_instruction_16[0].enable @[instruction_memory.scala 22:31]
    mm_instruction_1.io.write <= mm_instruction_16[1].write @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.padding <= mm_instruction_1.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.ictv <= mm_instruction_1.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.ictb <= mm_instruction_1.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.ici <= mm_instruction_1.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.ptm <= mm_instruction_1.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.immediate <= mm_instruction_1.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.pum <= mm_instruction_1.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.icd <= mm_instruction_1.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.oct <= mm_instruction_1.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.oci <= mm_instruction_1.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.di <= mm_instruction_1.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.dt <= mm_instruction_1.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.si <= mm_instruction_1.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.st <= mm_instruction_1.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.op <= mm_instruction_1.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[1].read.vi <= mm_instruction_1.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_1.io.enable <= mm_instruction_16[1].enable @[instruction_memory.scala 22:31]
    mm_instruction_2.io.write <= mm_instruction_16[2].write @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.padding <= mm_instruction_2.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.ictv <= mm_instruction_2.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.ictb <= mm_instruction_2.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.ici <= mm_instruction_2.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.ptm <= mm_instruction_2.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.immediate <= mm_instruction_2.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.pum <= mm_instruction_2.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.icd <= mm_instruction_2.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.oct <= mm_instruction_2.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.oci <= mm_instruction_2.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.di <= mm_instruction_2.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.dt <= mm_instruction_2.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.si <= mm_instruction_2.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.st <= mm_instruction_2.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.op <= mm_instruction_2.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[2].read.vi <= mm_instruction_2.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_2.io.enable <= mm_instruction_16[2].enable @[instruction_memory.scala 22:31]
    mm_instruction_3.io.write <= mm_instruction_16[3].write @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.padding <= mm_instruction_3.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.ictv <= mm_instruction_3.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.ictb <= mm_instruction_3.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.ici <= mm_instruction_3.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.ptm <= mm_instruction_3.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.immediate <= mm_instruction_3.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.pum <= mm_instruction_3.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.icd <= mm_instruction_3.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.oct <= mm_instruction_3.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.oci <= mm_instruction_3.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.di <= mm_instruction_3.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.dt <= mm_instruction_3.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.si <= mm_instruction_3.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.st <= mm_instruction_3.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.op <= mm_instruction_3.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[3].read.vi <= mm_instruction_3.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_3.io.enable <= mm_instruction_16[3].enable @[instruction_memory.scala 22:31]
    mm_instruction_4.io.write <= mm_instruction_16[4].write @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.padding <= mm_instruction_4.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.ictv <= mm_instruction_4.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.ictb <= mm_instruction_4.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.ici <= mm_instruction_4.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.ptm <= mm_instruction_4.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.immediate <= mm_instruction_4.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.pum <= mm_instruction_4.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.icd <= mm_instruction_4.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.oct <= mm_instruction_4.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.oci <= mm_instruction_4.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.di <= mm_instruction_4.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.dt <= mm_instruction_4.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.si <= mm_instruction_4.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.st <= mm_instruction_4.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.op <= mm_instruction_4.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[4].read.vi <= mm_instruction_4.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_4.io.enable <= mm_instruction_16[4].enable @[instruction_memory.scala 22:31]
    mm_instruction_5.io.write <= mm_instruction_16[5].write @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.padding <= mm_instruction_5.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.ictv <= mm_instruction_5.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.ictb <= mm_instruction_5.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.ici <= mm_instruction_5.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.ptm <= mm_instruction_5.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.immediate <= mm_instruction_5.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.pum <= mm_instruction_5.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.icd <= mm_instruction_5.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.oct <= mm_instruction_5.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.oci <= mm_instruction_5.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.di <= mm_instruction_5.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.dt <= mm_instruction_5.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.si <= mm_instruction_5.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.st <= mm_instruction_5.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.op <= mm_instruction_5.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[5].read.vi <= mm_instruction_5.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_5.io.enable <= mm_instruction_16[5].enable @[instruction_memory.scala 22:31]
    mm_instruction_6.io.write <= mm_instruction_16[6].write @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.padding <= mm_instruction_6.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.ictv <= mm_instruction_6.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.ictb <= mm_instruction_6.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.ici <= mm_instruction_6.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.ptm <= mm_instruction_6.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.immediate <= mm_instruction_6.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.pum <= mm_instruction_6.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.icd <= mm_instruction_6.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.oct <= mm_instruction_6.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.oci <= mm_instruction_6.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.di <= mm_instruction_6.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.dt <= mm_instruction_6.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.si <= mm_instruction_6.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.st <= mm_instruction_6.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.op <= mm_instruction_6.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[6].read.vi <= mm_instruction_6.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_6.io.enable <= mm_instruction_16[6].enable @[instruction_memory.scala 22:31]
    mm_instruction_7.io.write <= mm_instruction_16[7].write @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.padding <= mm_instruction_7.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.ictv <= mm_instruction_7.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.ictb <= mm_instruction_7.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.ici <= mm_instruction_7.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.ptm <= mm_instruction_7.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.immediate <= mm_instruction_7.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.pum <= mm_instruction_7.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.icd <= mm_instruction_7.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.oct <= mm_instruction_7.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.oci <= mm_instruction_7.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.di <= mm_instruction_7.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.dt <= mm_instruction_7.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.si <= mm_instruction_7.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.st <= mm_instruction_7.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.op <= mm_instruction_7.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[7].read.vi <= mm_instruction_7.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_7.io.enable <= mm_instruction_16[7].enable @[instruction_memory.scala 22:31]
    mm_instruction_8.io.write <= mm_instruction_16[8].write @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.padding <= mm_instruction_8.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.ictv <= mm_instruction_8.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.ictb <= mm_instruction_8.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.ici <= mm_instruction_8.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.ptm <= mm_instruction_8.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.immediate <= mm_instruction_8.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.pum <= mm_instruction_8.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.icd <= mm_instruction_8.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.oct <= mm_instruction_8.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.oci <= mm_instruction_8.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.di <= mm_instruction_8.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.dt <= mm_instruction_8.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.si <= mm_instruction_8.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.st <= mm_instruction_8.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.op <= mm_instruction_8.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[8].read.vi <= mm_instruction_8.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_8.io.enable <= mm_instruction_16[8].enable @[instruction_memory.scala 22:31]
    mm_instruction_9.io.write <= mm_instruction_16[9].write @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.padding <= mm_instruction_9.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.ictv <= mm_instruction_9.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.ictb <= mm_instruction_9.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.ici <= mm_instruction_9.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.ptm <= mm_instruction_9.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.immediate <= mm_instruction_9.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.pum <= mm_instruction_9.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.icd <= mm_instruction_9.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.oct <= mm_instruction_9.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.oci <= mm_instruction_9.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.di <= mm_instruction_9.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.dt <= mm_instruction_9.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.si <= mm_instruction_9.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.st <= mm_instruction_9.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.op <= mm_instruction_9.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[9].read.vi <= mm_instruction_9.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_9.io.enable <= mm_instruction_16[9].enable @[instruction_memory.scala 22:31]
    mm_instruction_10.io.write <= mm_instruction_16[10].write @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.padding <= mm_instruction_10.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.ictv <= mm_instruction_10.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.ictb <= mm_instruction_10.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.ici <= mm_instruction_10.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.ptm <= mm_instruction_10.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.immediate <= mm_instruction_10.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.pum <= mm_instruction_10.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.icd <= mm_instruction_10.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.oct <= mm_instruction_10.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.oci <= mm_instruction_10.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.di <= mm_instruction_10.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.dt <= mm_instruction_10.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.si <= mm_instruction_10.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.st <= mm_instruction_10.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.op <= mm_instruction_10.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[10].read.vi <= mm_instruction_10.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_10.io.enable <= mm_instruction_16[10].enable @[instruction_memory.scala 22:31]
    mm_instruction_11.io.write <= mm_instruction_16[11].write @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.padding <= mm_instruction_11.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.ictv <= mm_instruction_11.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.ictb <= mm_instruction_11.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.ici <= mm_instruction_11.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.ptm <= mm_instruction_11.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.immediate <= mm_instruction_11.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.pum <= mm_instruction_11.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.icd <= mm_instruction_11.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.oct <= mm_instruction_11.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.oci <= mm_instruction_11.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.di <= mm_instruction_11.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.dt <= mm_instruction_11.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.si <= mm_instruction_11.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.st <= mm_instruction_11.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.op <= mm_instruction_11.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[11].read.vi <= mm_instruction_11.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_11.io.enable <= mm_instruction_16[11].enable @[instruction_memory.scala 22:31]
    mm_instruction_12.io.write <= mm_instruction_16[12].write @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.padding <= mm_instruction_12.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.ictv <= mm_instruction_12.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.ictb <= mm_instruction_12.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.ici <= mm_instruction_12.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.ptm <= mm_instruction_12.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.immediate <= mm_instruction_12.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.pum <= mm_instruction_12.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.icd <= mm_instruction_12.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.oct <= mm_instruction_12.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.oci <= mm_instruction_12.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.di <= mm_instruction_12.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.dt <= mm_instruction_12.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.si <= mm_instruction_12.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.st <= mm_instruction_12.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.op <= mm_instruction_12.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[12].read.vi <= mm_instruction_12.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_12.io.enable <= mm_instruction_16[12].enable @[instruction_memory.scala 22:31]
    mm_instruction_13.io.write <= mm_instruction_16[13].write @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.padding <= mm_instruction_13.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.ictv <= mm_instruction_13.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.ictb <= mm_instruction_13.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.ici <= mm_instruction_13.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.ptm <= mm_instruction_13.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.immediate <= mm_instruction_13.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.pum <= mm_instruction_13.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.icd <= mm_instruction_13.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.oct <= mm_instruction_13.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.oci <= mm_instruction_13.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.di <= mm_instruction_13.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.dt <= mm_instruction_13.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.si <= mm_instruction_13.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.st <= mm_instruction_13.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.op <= mm_instruction_13.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[13].read.vi <= mm_instruction_13.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_13.io.enable <= mm_instruction_16[13].enable @[instruction_memory.scala 22:31]
    mm_instruction_14.io.write <= mm_instruction_16[14].write @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.padding <= mm_instruction_14.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.ictv <= mm_instruction_14.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.ictb <= mm_instruction_14.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.ici <= mm_instruction_14.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.ptm <= mm_instruction_14.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.immediate <= mm_instruction_14.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.pum <= mm_instruction_14.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.icd <= mm_instruction_14.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.oct <= mm_instruction_14.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.oci <= mm_instruction_14.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.di <= mm_instruction_14.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.dt <= mm_instruction_14.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.si <= mm_instruction_14.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.st <= mm_instruction_14.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.op <= mm_instruction_14.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[14].read.vi <= mm_instruction_14.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_14.io.enable <= mm_instruction_16[14].enable @[instruction_memory.scala 22:31]
    mm_instruction_15.io.write <= mm_instruction_16[15].write @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.padding <= mm_instruction_15.io.read.padding @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.ictv <= mm_instruction_15.io.read.ictv @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.ictb <= mm_instruction_15.io.read.ictb @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.ici <= mm_instruction_15.io.read.ici @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.ptm <= mm_instruction_15.io.read.ptm @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.immediate <= mm_instruction_15.io.read.immediate @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.pum <= mm_instruction_15.io.read.pum @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.icd <= mm_instruction_15.io.read.icd @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.oct <= mm_instruction_15.io.read.oct @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.oci <= mm_instruction_15.io.read.oci @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.di <= mm_instruction_15.io.read.di @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.dt <= mm_instruction_15.io.read.dt @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.si <= mm_instruction_15.io.read.si @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.st <= mm_instruction_15.io.read.st @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.op <= mm_instruction_15.io.read.op @[instruction_memory.scala 22:31]
    mm_instruction_16[15].read.vi <= mm_instruction_15.io.read.vi @[instruction_memory.scala 22:31]
    mm_instruction_15.io.enable <= mm_instruction_16[15].enable @[instruction_memory.scala 22:31]
    wire instruction_write_index : UInt<4> @[instruction_memory.scala 24:37]
    wire word_write_index : UInt<2> @[instruction_memory.scala 25:30]
    io.triggers[0].vi <= mm_instruction_16[0].read.vi @[instruction_memory.scala 28:23]
    io.triggers[0].ptm <= mm_instruction_16[0].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[0].ici <= mm_instruction_16[0].read.ici @[instruction_memory.scala 30:24]
    io.triggers[0].ictb <= mm_instruction_16[0].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[0].ictv <= mm_instruction_16[0].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[0].oci <= mm_instruction_16[0].read.oci @[instruction_memory.scala 33:24]
    io.triggers[1].vi <= mm_instruction_16[1].read.vi @[instruction_memory.scala 28:23]
    io.triggers[1].ptm <= mm_instruction_16[1].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[1].ici <= mm_instruction_16[1].read.ici @[instruction_memory.scala 30:24]
    io.triggers[1].ictb <= mm_instruction_16[1].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[1].ictv <= mm_instruction_16[1].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[1].oci <= mm_instruction_16[1].read.oci @[instruction_memory.scala 33:24]
    io.triggers[2].vi <= mm_instruction_16[2].read.vi @[instruction_memory.scala 28:23]
    io.triggers[2].ptm <= mm_instruction_16[2].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[2].ici <= mm_instruction_16[2].read.ici @[instruction_memory.scala 30:24]
    io.triggers[2].ictb <= mm_instruction_16[2].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[2].ictv <= mm_instruction_16[2].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[2].oci <= mm_instruction_16[2].read.oci @[instruction_memory.scala 33:24]
    io.triggers[3].vi <= mm_instruction_16[3].read.vi @[instruction_memory.scala 28:23]
    io.triggers[3].ptm <= mm_instruction_16[3].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[3].ici <= mm_instruction_16[3].read.ici @[instruction_memory.scala 30:24]
    io.triggers[3].ictb <= mm_instruction_16[3].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[3].ictv <= mm_instruction_16[3].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[3].oci <= mm_instruction_16[3].read.oci @[instruction_memory.scala 33:24]
    io.triggers[4].vi <= mm_instruction_16[4].read.vi @[instruction_memory.scala 28:23]
    io.triggers[4].ptm <= mm_instruction_16[4].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[4].ici <= mm_instruction_16[4].read.ici @[instruction_memory.scala 30:24]
    io.triggers[4].ictb <= mm_instruction_16[4].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[4].ictv <= mm_instruction_16[4].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[4].oci <= mm_instruction_16[4].read.oci @[instruction_memory.scala 33:24]
    io.triggers[5].vi <= mm_instruction_16[5].read.vi @[instruction_memory.scala 28:23]
    io.triggers[5].ptm <= mm_instruction_16[5].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[5].ici <= mm_instruction_16[5].read.ici @[instruction_memory.scala 30:24]
    io.triggers[5].ictb <= mm_instruction_16[5].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[5].ictv <= mm_instruction_16[5].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[5].oci <= mm_instruction_16[5].read.oci @[instruction_memory.scala 33:24]
    io.triggers[6].vi <= mm_instruction_16[6].read.vi @[instruction_memory.scala 28:23]
    io.triggers[6].ptm <= mm_instruction_16[6].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[6].ici <= mm_instruction_16[6].read.ici @[instruction_memory.scala 30:24]
    io.triggers[6].ictb <= mm_instruction_16[6].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[6].ictv <= mm_instruction_16[6].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[6].oci <= mm_instruction_16[6].read.oci @[instruction_memory.scala 33:24]
    io.triggers[7].vi <= mm_instruction_16[7].read.vi @[instruction_memory.scala 28:23]
    io.triggers[7].ptm <= mm_instruction_16[7].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[7].ici <= mm_instruction_16[7].read.ici @[instruction_memory.scala 30:24]
    io.triggers[7].ictb <= mm_instruction_16[7].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[7].ictv <= mm_instruction_16[7].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[7].oci <= mm_instruction_16[7].read.oci @[instruction_memory.scala 33:24]
    io.triggers[8].vi <= mm_instruction_16[8].read.vi @[instruction_memory.scala 28:23]
    io.triggers[8].ptm <= mm_instruction_16[8].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[8].ici <= mm_instruction_16[8].read.ici @[instruction_memory.scala 30:24]
    io.triggers[8].ictb <= mm_instruction_16[8].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[8].ictv <= mm_instruction_16[8].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[8].oci <= mm_instruction_16[8].read.oci @[instruction_memory.scala 33:24]
    io.triggers[9].vi <= mm_instruction_16[9].read.vi @[instruction_memory.scala 28:23]
    io.triggers[9].ptm <= mm_instruction_16[9].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[9].ici <= mm_instruction_16[9].read.ici @[instruction_memory.scala 30:24]
    io.triggers[9].ictb <= mm_instruction_16[9].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[9].ictv <= mm_instruction_16[9].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[9].oci <= mm_instruction_16[9].read.oci @[instruction_memory.scala 33:24]
    io.triggers[10].vi <= mm_instruction_16[10].read.vi @[instruction_memory.scala 28:23]
    io.triggers[10].ptm <= mm_instruction_16[10].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[10].ici <= mm_instruction_16[10].read.ici @[instruction_memory.scala 30:24]
    io.triggers[10].ictb <= mm_instruction_16[10].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[10].ictv <= mm_instruction_16[10].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[10].oci <= mm_instruction_16[10].read.oci @[instruction_memory.scala 33:24]
    io.triggers[11].vi <= mm_instruction_16[11].read.vi @[instruction_memory.scala 28:23]
    io.triggers[11].ptm <= mm_instruction_16[11].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[11].ici <= mm_instruction_16[11].read.ici @[instruction_memory.scala 30:24]
    io.triggers[11].ictb <= mm_instruction_16[11].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[11].ictv <= mm_instruction_16[11].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[11].oci <= mm_instruction_16[11].read.oci @[instruction_memory.scala 33:24]
    io.triggers[12].vi <= mm_instruction_16[12].read.vi @[instruction_memory.scala 28:23]
    io.triggers[12].ptm <= mm_instruction_16[12].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[12].ici <= mm_instruction_16[12].read.ici @[instruction_memory.scala 30:24]
    io.triggers[12].ictb <= mm_instruction_16[12].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[12].ictv <= mm_instruction_16[12].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[12].oci <= mm_instruction_16[12].read.oci @[instruction_memory.scala 33:24]
    io.triggers[13].vi <= mm_instruction_16[13].read.vi @[instruction_memory.scala 28:23]
    io.triggers[13].ptm <= mm_instruction_16[13].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[13].ici <= mm_instruction_16[13].read.ici @[instruction_memory.scala 30:24]
    io.triggers[13].ictb <= mm_instruction_16[13].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[13].ictv <= mm_instruction_16[13].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[13].oci <= mm_instruction_16[13].read.oci @[instruction_memory.scala 33:24]
    io.triggers[14].vi <= mm_instruction_16[14].read.vi @[instruction_memory.scala 28:23]
    io.triggers[14].ptm <= mm_instruction_16[14].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[14].ici <= mm_instruction_16[14].read.ici @[instruction_memory.scala 30:24]
    io.triggers[14].ictb <= mm_instruction_16[14].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[14].ictv <= mm_instruction_16[14].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[14].oci <= mm_instruction_16[14].read.oci @[instruction_memory.scala 33:24]
    io.triggers[15].vi <= mm_instruction_16[15].read.vi @[instruction_memory.scala 28:23]
    io.triggers[15].ptm <= mm_instruction_16[15].read.ptm @[instruction_memory.scala 29:24]
    io.triggers[15].ici <= mm_instruction_16[15].read.ici @[instruction_memory.scala 30:24]
    io.triggers[15].ictb <= mm_instruction_16[15].read.ictb @[instruction_memory.scala 31:25]
    io.triggers[15].ictv <= mm_instruction_16[15].read.ictv @[instruction_memory.scala 32:25]
    io.triggers[15].oci <= mm_instruction_16[15].read.oci @[instruction_memory.scala 33:24]
    node _T_214 = shr(io.host_interface.write_index, 2) @[instruction_memory.scala 38:35]
    instruction_write_index <= _T_214 @[instruction_memory.scala 37:27]
    node _T_215 = bits(io.host_interface.write_index, 1, 0) @[instruction_memory.scala 41:34]
    word_write_index <= _T_215 @[instruction_memory.scala 40:20]
    io.host_interface.read_data <= UInt<1>("h00") @[instruction_memory.scala 44:31]
    io.host_interface.read_ack <= io.host_interface.read_req @[instruction_memory.scala 45:30]
    io.host_interface.write_ack <= io.host_interface.write_req @[instruction_memory.scala 48:31]
    inst zero_mm_instruction of zero_mm_instruction @[instruction_memory.scala 51:46]
    zero_mm_instruction.clock <= clock
    zero_mm_instruction.reset <= reset
    io.triggered_datapath_instruction.immediate <= zero_mm_instruction.io.immediate @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.pum <= zero_mm_instruction.io.pum @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.icd <= zero_mm_instruction.io.icd @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.oct <= zero_mm_instruction.io.oct @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.oci <= zero_mm_instruction.io.oci @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.di <= zero_mm_instruction.io.di @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.dt <= zero_mm_instruction.io.dt @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.si <= zero_mm_instruction.io.si @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.st <= zero_mm_instruction.io.st @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.op <= zero_mm_instruction.io.op @[instruction_memory.scala 51:37]
    io.triggered_datapath_instruction.vi <= zero_mm_instruction.io.vi @[instruction_memory.scala 51:37]
    when io.triggered_instruction_valid : @[instruction_memory.scala 53:39]
      io.triggered_datapath_instruction.immediate <= mm_instruction_16[io.triggered_instruction_index].read.immediate @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.pum <= mm_instruction_16[io.triggered_instruction_index].read.pum @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.icd <= mm_instruction_16[io.triggered_instruction_index].read.icd @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.oct <= mm_instruction_16[io.triggered_instruction_index].read.oct @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.oci <= mm_instruction_16[io.triggered_instruction_index].read.oci @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.di <= mm_instruction_16[io.triggered_instruction_index].read.di @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.dt <= mm_instruction_16[io.triggered_instruction_index].read.dt @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.si <= mm_instruction_16[io.triggered_instruction_index].read.si @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.st <= mm_instruction_16[io.triggered_instruction_index].read.st @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.op <= mm_instruction_16[io.triggered_instruction_index].read.op @[instruction_memory.scala 54:39]
      io.triggered_datapath_instruction.vi <= mm_instruction_16[io.triggered_instruction_index].read.vi @[instruction_memory.scala 54:39]
      skip @[instruction_memory.scala 53:39]
    wire read_instruction : UInt<128> @[instruction_memory.scala 58:30]
    read_instruction <= UInt<1>("h00") @[instruction_memory.scala 59:20]
    wire instruction_words : UInt<32>[2] @[instruction_memory.scala 62:31]
    instruction_words[0] <= UInt<1>("h00") @[instruction_memory.scala 64:26]
    instruction_words[1] <= UInt<1>("h00") @[instruction_memory.scala 64:26]
    wire updated_instruction : UInt<128> @[instruction_memory.scala 66:33]
    node _T_236 = cat(instruction_words[0], instruction_words[1]) @[Cat.scala 30:58]
    updated_instruction <= _T_236 @[instruction_memory.scala 67:23]
    node _T_237 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_239 = eq(UInt<1>("h00"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_240 = and(_T_237, _T_239) @[instruction_memory.scala 71:74]
    mm_instruction_16[0].enable <= _T_240 @[instruction_memory.scala 71:30]
    node _T_241 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_243 = eq(UInt<1>("h01"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_244 = and(_T_241, _T_243) @[instruction_memory.scala 71:74]
    mm_instruction_16[1].enable <= _T_244 @[instruction_memory.scala 71:30]
    node _T_245 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_247 = eq(UInt<2>("h02"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_248 = and(_T_245, _T_247) @[instruction_memory.scala 71:74]
    mm_instruction_16[2].enable <= _T_248 @[instruction_memory.scala 71:30]
    node _T_249 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_251 = eq(UInt<2>("h03"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_252 = and(_T_249, _T_251) @[instruction_memory.scala 71:74]
    mm_instruction_16[3].enable <= _T_252 @[instruction_memory.scala 71:30]
    node _T_253 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_255 = eq(UInt<3>("h04"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_256 = and(_T_253, _T_255) @[instruction_memory.scala 71:74]
    mm_instruction_16[4].enable <= _T_256 @[instruction_memory.scala 71:30]
    node _T_257 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_259 = eq(UInt<3>("h05"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_260 = and(_T_257, _T_259) @[instruction_memory.scala 71:74]
    mm_instruction_16[5].enable <= _T_260 @[instruction_memory.scala 71:30]
    node _T_261 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_263 = eq(UInt<3>("h06"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_264 = and(_T_261, _T_263) @[instruction_memory.scala 71:74]
    mm_instruction_16[6].enable <= _T_264 @[instruction_memory.scala 71:30]
    node _T_265 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_267 = eq(UInt<3>("h07"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_268 = and(_T_265, _T_267) @[instruction_memory.scala 71:74]
    mm_instruction_16[7].enable <= _T_268 @[instruction_memory.scala 71:30]
    node _T_269 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_271 = eq(UInt<4>("h08"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_272 = and(_T_269, _T_271) @[instruction_memory.scala 71:74]
    mm_instruction_16[8].enable <= _T_272 @[instruction_memory.scala 71:30]
    node _T_273 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_275 = eq(UInt<4>("h09"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_276 = and(_T_273, _T_275) @[instruction_memory.scala 71:74]
    mm_instruction_16[9].enable <= _T_276 @[instruction_memory.scala 71:30]
    node _T_277 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_279 = eq(UInt<4>("h0a"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_280 = and(_T_277, _T_279) @[instruction_memory.scala 71:74]
    mm_instruction_16[10].enable <= _T_280 @[instruction_memory.scala 71:30]
    node _T_281 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_283 = eq(UInt<4>("h0b"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_284 = and(_T_281, _T_283) @[instruction_memory.scala 71:74]
    mm_instruction_16[11].enable <= _T_284 @[instruction_memory.scala 71:30]
    node _T_285 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_287 = eq(UInt<4>("h0c"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_288 = and(_T_285, _T_287) @[instruction_memory.scala 71:74]
    mm_instruction_16[12].enable <= _T_288 @[instruction_memory.scala 71:30]
    node _T_289 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_291 = eq(UInt<4>("h0d"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_292 = and(_T_289, _T_291) @[instruction_memory.scala 71:74]
    mm_instruction_16[13].enable <= _T_292 @[instruction_memory.scala 71:30]
    node _T_293 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_295 = eq(UInt<4>("h0e"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_296 = and(_T_293, _T_295) @[instruction_memory.scala 71:74]
    mm_instruction_16[14].enable <= _T_296 @[instruction_memory.scala 71:30]
    node _T_297 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 71:43]
    node _T_299 = eq(UInt<4>("h0f"), instruction_write_index) @[instruction_memory.scala 71:81]
    node _T_300 = and(_T_297, _T_299) @[instruction_memory.scala 71:74]
    mm_instruction_16[15].enable <= _T_300 @[instruction_memory.scala 71:30]
    node _T_301 = and(io.enable, io.host_interface.write_req) @[instruction_memory.scala 75:18]
    when _T_301 : @[instruction_memory.scala 75:49]
      node _T_309 = cat(mm_instruction_16[instruction_write_index].read.op, mm_instruction_16[instruction_write_index].read.vi) @[Cat.scala 30:58]
      node _T_310 = cat(mm_instruction_16[instruction_write_index].read.si, mm_instruction_16[instruction_write_index].read.st) @[Cat.scala 30:58]
      node _T_311 = cat(_T_310, _T_309) @[Cat.scala 30:58]
      node _T_312 = cat(mm_instruction_16[instruction_write_index].read.di, mm_instruction_16[instruction_write_index].read.dt) @[Cat.scala 30:58]
      node _T_313 = cat(mm_instruction_16[instruction_write_index].read.oct, mm_instruction_16[instruction_write_index].read.oci) @[Cat.scala 30:58]
      node _T_314 = cat(_T_313, _T_312) @[Cat.scala 30:58]
      node _T_315 = cat(_T_314, _T_311) @[Cat.scala 30:58]
      node _T_316 = cat(mm_instruction_16[instruction_write_index].read.pum, mm_instruction_16[instruction_write_index].read.icd) @[Cat.scala 30:58]
      node _T_317 = cat(mm_instruction_16[instruction_write_index].read.ici, mm_instruction_16[instruction_write_index].read.ptm) @[Cat.scala 30:58]
      node _T_318 = cat(_T_317, _T_316) @[Cat.scala 30:58]
      node _T_319 = cat(mm_instruction_16[instruction_write_index].read.ictv, mm_instruction_16[instruction_write_index].read.ictb) @[Cat.scala 30:58]
      node _T_320 = cat(mm_instruction_16[instruction_write_index].read.padding, mm_instruction_16[instruction_write_index].read.immediate) @[Cat.scala 30:58]
      node _T_321 = cat(_T_320, _T_319) @[Cat.scala 30:58]
      node _T_322 = cat(_T_321, _T_318) @[Cat.scala 30:58]
      node _T_323 = cat(_T_322, _T_315) @[Cat.scala 30:58]
      read_instruction <= _T_323 @[instruction_memory.scala 76:22]
      node _T_325 = eq(UInt<1>("h00"), word_write_index) @[instruction_memory.scala 79:51]
      node _T_326 = bits(read_instruction, 31, 0) @[instruction_memory.scala 81:25]
      node _T_327 = mux(_T_325, io.host_interface.write_data, _T_326) @[instruction_memory.scala 79:40]
      instruction_words[0] <= _T_327 @[instruction_memory.scala 79:34]
      node _T_329 = eq(UInt<1>("h01"), word_write_index) @[instruction_memory.scala 79:51]
      node _T_330 = bits(read_instruction, 63, 32) @[instruction_memory.scala 81:25]
      node _T_331 = mux(_T_329, io.host_interface.write_data, _T_330) @[instruction_memory.scala 79:40]
      instruction_words[1] <= _T_331 @[instruction_memory.scala 79:34]
      node _T_333 = eq(UInt<1>("h00"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_335 = mux(_T_333, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[0].write <= _T_335 @[instruction_memory.scala 84:37]
      node _T_337 = eq(UInt<1>("h01"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_339 = mux(_T_337, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[1].write <= _T_339 @[instruction_memory.scala 84:37]
      node _T_341 = eq(UInt<2>("h02"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_343 = mux(_T_341, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[2].write <= _T_343 @[instruction_memory.scala 84:37]
      node _T_345 = eq(UInt<2>("h03"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_347 = mux(_T_345, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[3].write <= _T_347 @[instruction_memory.scala 84:37]
      node _T_349 = eq(UInt<3>("h04"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_351 = mux(_T_349, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[4].write <= _T_351 @[instruction_memory.scala 84:37]
      node _T_353 = eq(UInt<3>("h05"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_355 = mux(_T_353, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[5].write <= _T_355 @[instruction_memory.scala 84:37]
      node _T_357 = eq(UInt<3>("h06"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_359 = mux(_T_357, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[6].write <= _T_359 @[instruction_memory.scala 84:37]
      node _T_361 = eq(UInt<3>("h07"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_363 = mux(_T_361, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[7].write <= _T_363 @[instruction_memory.scala 84:37]
      node _T_365 = eq(UInt<4>("h08"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_367 = mux(_T_365, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[8].write <= _T_367 @[instruction_memory.scala 84:37]
      node _T_369 = eq(UInt<4>("h09"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_371 = mux(_T_369, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[9].write <= _T_371 @[instruction_memory.scala 84:37]
      node _T_373 = eq(UInt<4>("h0a"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_375 = mux(_T_373, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[10].write <= _T_375 @[instruction_memory.scala 84:37]
      node _T_377 = eq(UInt<4>("h0b"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_379 = mux(_T_377, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[11].write <= _T_379 @[instruction_memory.scala 84:37]
      node _T_381 = eq(UInt<4>("h0c"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_383 = mux(_T_381, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[12].write <= _T_383 @[instruction_memory.scala 84:37]
      node _T_385 = eq(UInt<4>("h0d"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_387 = mux(_T_385, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[13].write <= _T_387 @[instruction_memory.scala 84:37]
      node _T_389 = eq(UInt<4>("h0e"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_391 = mux(_T_389, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[14].write <= _T_391 @[instruction_memory.scala 84:37]
      node _T_393 = eq(UInt<4>("h0f"), instruction_write_index) @[instruction_memory.scala 84:54]
      node _T_395 = mux(_T_393, updated_instruction, UInt<1>("h00")) @[instruction_memory.scala 84:43]
      mm_instruction_16[15].write <= _T_395 @[instruction_memory.scala 84:37]
      skip @[instruction_memory.scala 75:49]
    else : @[instruction_memory.scala 88:14]
      mm_instruction_16[0].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[1].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[2].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[3].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[4].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[5].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[6].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[7].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[8].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[9].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[10].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[11].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[12].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[13].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[14].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      mm_instruction_16[15].write <= UInt<1>("h00") @[instruction_memory.scala 90:37]
      skip @[instruction_memory.scala 88:14]
    
  module integer_collision_detector : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip triggered_instruction_op : UInt<6>, flip dx1_instruction_retiring_stage : UInt<3>, collision : UInt<1>}
    
    wire basic_insts : UInt<6>[40] @[Instructions.scala 49:28]
    basic_insts[0] <= UInt<1>("h00") @[Instructions.scala 49:28]
    basic_insts[1] <= UInt<1>("h01") @[Instructions.scala 49:28]
    basic_insts[2] <= UInt<2>("h02") @[Instructions.scala 49:28]
    basic_insts[3] <= UInt<2>("h03") @[Instructions.scala 49:28]
    basic_insts[4] <= UInt<3>("h04") @[Instructions.scala 49:28]
    basic_insts[5] <= UInt<3>("h05") @[Instructions.scala 49:28]
    basic_insts[6] <= UInt<3>("h06") @[Instructions.scala 49:28]
    basic_insts[7] <= UInt<3>("h07") @[Instructions.scala 49:28]
    basic_insts[8] <= UInt<4>("h08") @[Instructions.scala 49:28]
    basic_insts[9] <= UInt<4>("h09") @[Instructions.scala 49:28]
    basic_insts[10] <= UInt<4>("h0a") @[Instructions.scala 49:28]
    basic_insts[11] <= UInt<4>("h0b") @[Instructions.scala 49:28]
    basic_insts[12] <= UInt<4>("h0c") @[Instructions.scala 49:28]
    basic_insts[13] <= UInt<4>("h0d") @[Instructions.scala 49:28]
    basic_insts[14] <= UInt<4>("h0e") @[Instructions.scala 49:28]
    basic_insts[15] <= UInt<4>("h0f") @[Instructions.scala 49:28]
    basic_insts[16] <= UInt<5>("h010") @[Instructions.scala 49:28]
    basic_insts[17] <= UInt<5>("h011") @[Instructions.scala 49:28]
    basic_insts[18] <= UInt<5>("h012") @[Instructions.scala 49:28]
    basic_insts[19] <= UInt<5>("h013") @[Instructions.scala 49:28]
    basic_insts[20] <= UInt<5>("h014") @[Instructions.scala 49:28]
    basic_insts[21] <= UInt<5>("h015") @[Instructions.scala 49:28]
    basic_insts[22] <= UInt<5>("h016") @[Instructions.scala 49:28]
    basic_insts[23] <= UInt<5>("h017") @[Instructions.scala 49:28]
    basic_insts[24] <= UInt<5>("h018") @[Instructions.scala 49:28]
    basic_insts[25] <= UInt<5>("h019") @[Instructions.scala 49:28]
    basic_insts[26] <= UInt<5>("h01a") @[Instructions.scala 49:28]
    basic_insts[27] <= UInt<5>("h01b") @[Instructions.scala 49:28]
    basic_insts[28] <= UInt<5>("h01c") @[Instructions.scala 49:28]
    basic_insts[29] <= UInt<5>("h01d") @[Instructions.scala 49:28]
    basic_insts[30] <= UInt<5>("h01e") @[Instructions.scala 49:28]
    basic_insts[31] <= UInt<5>("h01f") @[Instructions.scala 49:28]
    basic_insts[32] <= UInt<6>("h020") @[Instructions.scala 49:28]
    basic_insts[33] <= UInt<6>("h021") @[Instructions.scala 49:28]
    basic_insts[34] <= UInt<6>("h022") @[Instructions.scala 49:28]
    basic_insts[35] <= UInt<6>("h023") @[Instructions.scala 49:28]
    basic_insts[36] <= UInt<6>("h024") @[Instructions.scala 49:28]
    basic_insts[37] <= UInt<6>("h025") @[Instructions.scala 49:28]
    basic_insts[38] <= UInt<6>("h026") @[Instructions.scala 49:28]
    basic_insts[39] <= UInt<6>("h027") @[Instructions.scala 49:28]
    wire scratchpad_insts : UInt<6>[2] @[Instructions.scala 54:33]
    scratchpad_insts[0] <= UInt<6>("h028") @[Instructions.scala 54:33]
    scratchpad_insts[1] <= UInt<6>("h029") @[Instructions.scala 54:33]
    wire load_store_inst : UInt<6>[3] @[Instructions.scala 60:32]
    load_store_inst[0] <= UInt<6>("h02a") @[Instructions.scala 60:32]
    load_store_inst[1] <= UInt<6>("h02b") @[Instructions.scala 60:32]
    load_store_inst[2] <= UInt<6>("h02c") @[Instructions.scala 60:32]
    wire integer_mult_insts : UInt<6>[4] @[Instructions.scala 67:35]
    integer_mult_insts[0] <= UInt<6>("h02d") @[Instructions.scala 67:35]
    integer_mult_insts[1] <= UInt<6>("h02e") @[Instructions.scala 67:35]
    integer_mult_insts[2] <= UInt<6>("h02f") @[Instructions.scala 67:35]
    integer_mult_insts[3] <= UInt<6>("h030") @[Instructions.scala 67:35]
    wire float_point_insts : UInt<6>[14] @[Instructions.scala 84:34]
    float_point_insts[0] <= UInt<6>("h031") @[Instructions.scala 84:34]
    float_point_insts[1] <= UInt<6>("h032") @[Instructions.scala 84:34]
    float_point_insts[2] <= UInt<6>("h033") @[Instructions.scala 84:34]
    float_point_insts[3] <= UInt<6>("h034") @[Instructions.scala 84:34]
    float_point_insts[4] <= UInt<6>("h035") @[Instructions.scala 84:34]
    float_point_insts[5] <= UInt<6>("h036") @[Instructions.scala 84:34]
    float_point_insts[6] <= UInt<6>("h037") @[Instructions.scala 84:34]
    float_point_insts[7] <= UInt<6>("h038") @[Instructions.scala 84:34]
    float_point_insts[8] <= UInt<6>("h039") @[Instructions.scala 84:34]
    float_point_insts[9] <= UInt<6>("h03a") @[Instructions.scala 84:34]
    float_point_insts[10] <= UInt<6>("h03b") @[Instructions.scala 84:34]
    float_point_insts[11] <= UInt<6>("h03c") @[Instructions.scala 84:34]
    float_point_insts[12] <= UInt<6>("h03d") @[Instructions.scala 84:34]
    float_point_insts[13] <= UInt<6>("h03e") @[Instructions.scala 84:34]
    wire signed_insts : UInt<4>[5] @[Instructions.scala 88:29]
    signed_insts[0] <= UInt<3>("h05") @[Instructions.scala 88:29]
    signed_insts[1] <= UInt<4>("h09") @[Instructions.scala 88:29]
    signed_insts[2] <= UInt<4>("h0b") @[Instructions.scala 88:29]
    signed_insts[3] <= UInt<4>("h0d") @[Instructions.scala 88:29]
    signed_insts[4] <= UInt<4>("h0f") @[Instructions.scala 88:29]
    wire unsigned_insts : UInt<6>[31] @[Instructions.scala 96:31]
    unsigned_insts[0] <= UInt<1>("h00") @[Instructions.scala 96:31]
    unsigned_insts[1] <= UInt<1>("h01") @[Instructions.scala 96:31]
    unsigned_insts[2] <= UInt<2>("h02") @[Instructions.scala 96:31]
    unsigned_insts[3] <= UInt<2>("h03") @[Instructions.scala 96:31]
    unsigned_insts[4] <= UInt<3>("h04") @[Instructions.scala 96:31]
    unsigned_insts[5] <= UInt<3>("h06") @[Instructions.scala 96:31]
    unsigned_insts[6] <= UInt<3>("h07") @[Instructions.scala 96:31]
    unsigned_insts[7] <= UInt<4>("h08") @[Instructions.scala 96:31]
    unsigned_insts[8] <= UInt<4>("h0a") @[Instructions.scala 96:31]
    unsigned_insts[9] <= UInt<4>("h0c") @[Instructions.scala 96:31]
    unsigned_insts[10] <= UInt<4>("h0e") @[Instructions.scala 96:31]
    unsigned_insts[11] <= UInt<5>("h010") @[Instructions.scala 96:31]
    unsigned_insts[12] <= UInt<5>("h011") @[Instructions.scala 96:31]
    unsigned_insts[13] <= UInt<5>("h012") @[Instructions.scala 96:31]
    unsigned_insts[14] <= UInt<5>("h013") @[Instructions.scala 96:31]
    unsigned_insts[15] <= UInt<5>("h014") @[Instructions.scala 96:31]
    unsigned_insts[16] <= UInt<5>("h015") @[Instructions.scala 96:31]
    unsigned_insts[17] <= UInt<5>("h016") @[Instructions.scala 96:31]
    unsigned_insts[18] <= UInt<5>("h017") @[Instructions.scala 96:31]
    unsigned_insts[19] <= UInt<5>("h018") @[Instructions.scala 96:31]
    unsigned_insts[20] <= UInt<5>("h019") @[Instructions.scala 96:31]
    unsigned_insts[21] <= UInt<5>("h01a") @[Instructions.scala 96:31]
    unsigned_insts[22] <= UInt<5>("h01b") @[Instructions.scala 96:31]
    unsigned_insts[23] <= UInt<5>("h01c") @[Instructions.scala 96:31]
    unsigned_insts[24] <= UInt<6>("h021") @[Instructions.scala 96:31]
    unsigned_insts[25] <= UInt<6>("h022") @[Instructions.scala 96:31]
    unsigned_insts[26] <= UInt<6>("h023") @[Instructions.scala 96:31]
    unsigned_insts[27] <= UInt<6>("h024") @[Instructions.scala 96:31]
    unsigned_insts[28] <= UInt<6>("h025") @[Instructions.scala 96:31]
    unsigned_insts[29] <= UInt<6>("h026") @[Instructions.scala 96:31]
    unsigned_insts[30] <= UInt<6>("h027") @[Instructions.scala 96:31]
    wire multi_insts : UInt<6>[4] @[Instructions.scala 99:28]
    multi_insts[0] <= UInt<6>("h02d") @[Instructions.scala 99:28]
    multi_insts[1] <= UInt<6>("h02e") @[Instructions.scala 99:28]
    multi_insts[2] <= UInt<6>("h02f") @[Instructions.scala 99:28]
    multi_insts[3] <= UInt<6>("h030") @[Instructions.scala 99:28]
    wire float_insts : UInt<6>[13] @[Instructions.scala 105:28]
    float_insts[0] <= UInt<6>("h031") @[Instructions.scala 105:28]
    float_insts[1] <= UInt<6>("h032") @[Instructions.scala 105:28]
    float_insts[2] <= UInt<6>("h033") @[Instructions.scala 105:28]
    float_insts[3] <= UInt<6>("h035") @[Instructions.scala 105:28]
    float_insts[4] <= UInt<6>("h036") @[Instructions.scala 105:28]
    float_insts[5] <= UInt<6>("h037") @[Instructions.scala 105:28]
    float_insts[6] <= UInt<6>("h038") @[Instructions.scala 105:28]
    float_insts[7] <= UInt<6>("h039") @[Instructions.scala 105:28]
    float_insts[8] <= UInt<6>("h03a") @[Instructions.scala 105:28]
    float_insts[9] <= UInt<6>("h03b") @[Instructions.scala 105:28]
    float_insts[10] <= UInt<6>("h03c") @[Instructions.scala 105:28]
    float_insts[11] <= UInt<6>("h03d") @[Instructions.scala 105:28]
    float_insts[12] <= UInt<6>("h03e") @[Instructions.scala 105:28]
    node _T_288 = eq(basic_insts[0], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_289 = eq(basic_insts[1], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_290 = eq(basic_insts[2], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_291 = eq(basic_insts[3], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_292 = eq(basic_insts[4], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_293 = eq(basic_insts[5], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_294 = eq(basic_insts[6], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_295 = eq(basic_insts[7], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_296 = eq(basic_insts[8], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_297 = eq(basic_insts[9], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_298 = eq(basic_insts[10], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_299 = eq(basic_insts[11], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_300 = eq(basic_insts[12], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_301 = eq(basic_insts[13], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_302 = eq(basic_insts[14], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_303 = eq(basic_insts[15], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_304 = eq(basic_insts[16], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_305 = eq(basic_insts[17], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_306 = eq(basic_insts[18], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_307 = eq(basic_insts[19], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_308 = eq(basic_insts[20], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_309 = eq(basic_insts[21], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_310 = eq(basic_insts[22], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_311 = eq(basic_insts[23], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_312 = eq(basic_insts[24], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_313 = eq(basic_insts[25], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_314 = eq(basic_insts[26], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_315 = eq(basic_insts[27], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_316 = eq(basic_insts[28], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_317 = eq(basic_insts[29], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_318 = eq(basic_insts[30], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_319 = eq(basic_insts[31], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_320 = eq(basic_insts[32], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_321 = eq(basic_insts[33], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_322 = eq(basic_insts[34], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_323 = eq(basic_insts[35], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_324 = eq(basic_insts[36], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_325 = eq(basic_insts[37], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_326 = eq(basic_insts[38], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_327 = eq(basic_insts[39], io.triggered_instruction_op) @[integer_collision_detector.scala 16:30]
    node _T_329 = or(UInt<1>("h00"), _T_288) @[integer_collision_detector.scala 16:26]
    node _T_330 = or(_T_329, _T_289) @[integer_collision_detector.scala 16:26]
    node _T_331 = or(_T_330, _T_290) @[integer_collision_detector.scala 16:26]
    node _T_332 = or(_T_331, _T_291) @[integer_collision_detector.scala 16:26]
    node _T_333 = or(_T_332, _T_292) @[integer_collision_detector.scala 16:26]
    node _T_334 = or(_T_333, _T_293) @[integer_collision_detector.scala 16:26]
    node _T_335 = or(_T_334, _T_294) @[integer_collision_detector.scala 16:26]
    node _T_336 = or(_T_335, _T_295) @[integer_collision_detector.scala 16:26]
    node _T_337 = or(_T_336, _T_296) @[integer_collision_detector.scala 16:26]
    node _T_338 = or(_T_337, _T_297) @[integer_collision_detector.scala 16:26]
    node _T_339 = or(_T_338, _T_298) @[integer_collision_detector.scala 16:26]
    node _T_340 = or(_T_339, _T_299) @[integer_collision_detector.scala 16:26]
    node _T_341 = or(_T_340, _T_300) @[integer_collision_detector.scala 16:26]
    node _T_342 = or(_T_341, _T_301) @[integer_collision_detector.scala 16:26]
    node _T_343 = or(_T_342, _T_302) @[integer_collision_detector.scala 16:26]
    node _T_344 = or(_T_343, _T_303) @[integer_collision_detector.scala 16:26]
    node _T_345 = or(_T_344, _T_304) @[integer_collision_detector.scala 16:26]
    node _T_346 = or(_T_345, _T_305) @[integer_collision_detector.scala 16:26]
    node _T_347 = or(_T_346, _T_306) @[integer_collision_detector.scala 16:26]
    node _T_348 = or(_T_347, _T_307) @[integer_collision_detector.scala 16:26]
    node _T_349 = or(_T_348, _T_308) @[integer_collision_detector.scala 16:26]
    node _T_350 = or(_T_349, _T_309) @[integer_collision_detector.scala 16:26]
    node _T_351 = or(_T_350, _T_310) @[integer_collision_detector.scala 16:26]
    node _T_352 = or(_T_351, _T_311) @[integer_collision_detector.scala 16:26]
    node _T_353 = or(_T_352, _T_312) @[integer_collision_detector.scala 16:26]
    node _T_354 = or(_T_353, _T_313) @[integer_collision_detector.scala 16:26]
    node _T_355 = or(_T_354, _T_314) @[integer_collision_detector.scala 16:26]
    node _T_356 = or(_T_355, _T_315) @[integer_collision_detector.scala 16:26]
    node _T_357 = or(_T_356, _T_316) @[integer_collision_detector.scala 16:26]
    node _T_358 = or(_T_357, _T_317) @[integer_collision_detector.scala 16:26]
    node _T_359 = or(_T_358, _T_318) @[integer_collision_detector.scala 16:26]
    node _T_360 = or(_T_359, _T_319) @[integer_collision_detector.scala 16:26]
    node _T_361 = or(_T_360, _T_320) @[integer_collision_detector.scala 16:26]
    node _T_362 = or(_T_361, _T_321) @[integer_collision_detector.scala 16:26]
    node _T_363 = or(_T_362, _T_322) @[integer_collision_detector.scala 16:26]
    node _T_364 = or(_T_363, _T_323) @[integer_collision_detector.scala 16:26]
    node _T_365 = or(_T_364, _T_324) @[integer_collision_detector.scala 16:26]
    node _T_366 = or(_T_365, _T_325) @[integer_collision_detector.scala 16:26]
    node _T_367 = or(_T_366, _T_326) @[integer_collision_detector.scala 16:26]
    node _T_368 = or(_T_367, _T_327) @[integer_collision_detector.scala 16:26]
    when _T_368 : @[integer_collision_detector.scala 16:63]
      node _T_370 = eq(io.dx1_instruction_retiring_stage, UInt<2>("h02")) @[integer_collision_detector.scala 17:59]
      node _T_373 = mux(_T_370, UInt<1>("h01"), UInt<1>("h00")) @[integer_collision_detector.scala 17:24]
      io.collision <= _T_373 @[integer_collision_detector.scala 17:18]
      skip @[integer_collision_detector.scala 16:63]
    else : @[integer_collision_detector.scala 18:14]
      io.collision <= UInt<1>("h00") @[integer_collision_detector.scala 19:18]
      skip @[integer_collision_detector.scala 18:14]
    
  module integer_issue_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dx1_instruction_op : UInt<6>, retiring_stage : UInt<3>, functional_unit : UInt<3>}
    
    wire basic_insts : UInt<6>[40] @[Instructions.scala 49:28]
    basic_insts[0] <= UInt<1>("h00") @[Instructions.scala 49:28]
    basic_insts[1] <= UInt<1>("h01") @[Instructions.scala 49:28]
    basic_insts[2] <= UInt<2>("h02") @[Instructions.scala 49:28]
    basic_insts[3] <= UInt<2>("h03") @[Instructions.scala 49:28]
    basic_insts[4] <= UInt<3>("h04") @[Instructions.scala 49:28]
    basic_insts[5] <= UInt<3>("h05") @[Instructions.scala 49:28]
    basic_insts[6] <= UInt<3>("h06") @[Instructions.scala 49:28]
    basic_insts[7] <= UInt<3>("h07") @[Instructions.scala 49:28]
    basic_insts[8] <= UInt<4>("h08") @[Instructions.scala 49:28]
    basic_insts[9] <= UInt<4>("h09") @[Instructions.scala 49:28]
    basic_insts[10] <= UInt<4>("h0a") @[Instructions.scala 49:28]
    basic_insts[11] <= UInt<4>("h0b") @[Instructions.scala 49:28]
    basic_insts[12] <= UInt<4>("h0c") @[Instructions.scala 49:28]
    basic_insts[13] <= UInt<4>("h0d") @[Instructions.scala 49:28]
    basic_insts[14] <= UInt<4>("h0e") @[Instructions.scala 49:28]
    basic_insts[15] <= UInt<4>("h0f") @[Instructions.scala 49:28]
    basic_insts[16] <= UInt<5>("h010") @[Instructions.scala 49:28]
    basic_insts[17] <= UInt<5>("h011") @[Instructions.scala 49:28]
    basic_insts[18] <= UInt<5>("h012") @[Instructions.scala 49:28]
    basic_insts[19] <= UInt<5>("h013") @[Instructions.scala 49:28]
    basic_insts[20] <= UInt<5>("h014") @[Instructions.scala 49:28]
    basic_insts[21] <= UInt<5>("h015") @[Instructions.scala 49:28]
    basic_insts[22] <= UInt<5>("h016") @[Instructions.scala 49:28]
    basic_insts[23] <= UInt<5>("h017") @[Instructions.scala 49:28]
    basic_insts[24] <= UInt<5>("h018") @[Instructions.scala 49:28]
    basic_insts[25] <= UInt<5>("h019") @[Instructions.scala 49:28]
    basic_insts[26] <= UInt<5>("h01a") @[Instructions.scala 49:28]
    basic_insts[27] <= UInt<5>("h01b") @[Instructions.scala 49:28]
    basic_insts[28] <= UInt<5>("h01c") @[Instructions.scala 49:28]
    basic_insts[29] <= UInt<5>("h01d") @[Instructions.scala 49:28]
    basic_insts[30] <= UInt<5>("h01e") @[Instructions.scala 49:28]
    basic_insts[31] <= UInt<5>("h01f") @[Instructions.scala 49:28]
    basic_insts[32] <= UInt<6>("h020") @[Instructions.scala 49:28]
    basic_insts[33] <= UInt<6>("h021") @[Instructions.scala 49:28]
    basic_insts[34] <= UInt<6>("h022") @[Instructions.scala 49:28]
    basic_insts[35] <= UInt<6>("h023") @[Instructions.scala 49:28]
    basic_insts[36] <= UInt<6>("h024") @[Instructions.scala 49:28]
    basic_insts[37] <= UInt<6>("h025") @[Instructions.scala 49:28]
    basic_insts[38] <= UInt<6>("h026") @[Instructions.scala 49:28]
    basic_insts[39] <= UInt<6>("h027") @[Instructions.scala 49:28]
    wire scratchpad_insts : UInt<6>[2] @[Instructions.scala 54:33]
    scratchpad_insts[0] <= UInt<6>("h028") @[Instructions.scala 54:33]
    scratchpad_insts[1] <= UInt<6>("h029") @[Instructions.scala 54:33]
    wire load_store_inst : UInt<6>[3] @[Instructions.scala 60:32]
    load_store_inst[0] <= UInt<6>("h02a") @[Instructions.scala 60:32]
    load_store_inst[1] <= UInt<6>("h02b") @[Instructions.scala 60:32]
    load_store_inst[2] <= UInt<6>("h02c") @[Instructions.scala 60:32]
    wire integer_mult_insts : UInt<6>[4] @[Instructions.scala 67:35]
    integer_mult_insts[0] <= UInt<6>("h02d") @[Instructions.scala 67:35]
    integer_mult_insts[1] <= UInt<6>("h02e") @[Instructions.scala 67:35]
    integer_mult_insts[2] <= UInt<6>("h02f") @[Instructions.scala 67:35]
    integer_mult_insts[3] <= UInt<6>("h030") @[Instructions.scala 67:35]
    wire float_point_insts : UInt<6>[14] @[Instructions.scala 84:34]
    float_point_insts[0] <= UInt<6>("h031") @[Instructions.scala 84:34]
    float_point_insts[1] <= UInt<6>("h032") @[Instructions.scala 84:34]
    float_point_insts[2] <= UInt<6>("h033") @[Instructions.scala 84:34]
    float_point_insts[3] <= UInt<6>("h034") @[Instructions.scala 84:34]
    float_point_insts[4] <= UInt<6>("h035") @[Instructions.scala 84:34]
    float_point_insts[5] <= UInt<6>("h036") @[Instructions.scala 84:34]
    float_point_insts[6] <= UInt<6>("h037") @[Instructions.scala 84:34]
    float_point_insts[7] <= UInt<6>("h038") @[Instructions.scala 84:34]
    float_point_insts[8] <= UInt<6>("h039") @[Instructions.scala 84:34]
    float_point_insts[9] <= UInt<6>("h03a") @[Instructions.scala 84:34]
    float_point_insts[10] <= UInt<6>("h03b") @[Instructions.scala 84:34]
    float_point_insts[11] <= UInt<6>("h03c") @[Instructions.scala 84:34]
    float_point_insts[12] <= UInt<6>("h03d") @[Instructions.scala 84:34]
    float_point_insts[13] <= UInt<6>("h03e") @[Instructions.scala 84:34]
    wire signed_insts : UInt<4>[5] @[Instructions.scala 88:29]
    signed_insts[0] <= UInt<3>("h05") @[Instructions.scala 88:29]
    signed_insts[1] <= UInt<4>("h09") @[Instructions.scala 88:29]
    signed_insts[2] <= UInt<4>("h0b") @[Instructions.scala 88:29]
    signed_insts[3] <= UInt<4>("h0d") @[Instructions.scala 88:29]
    signed_insts[4] <= UInt<4>("h0f") @[Instructions.scala 88:29]
    wire unsigned_insts : UInt<6>[31] @[Instructions.scala 96:31]
    unsigned_insts[0] <= UInt<1>("h00") @[Instructions.scala 96:31]
    unsigned_insts[1] <= UInt<1>("h01") @[Instructions.scala 96:31]
    unsigned_insts[2] <= UInt<2>("h02") @[Instructions.scala 96:31]
    unsigned_insts[3] <= UInt<2>("h03") @[Instructions.scala 96:31]
    unsigned_insts[4] <= UInt<3>("h04") @[Instructions.scala 96:31]
    unsigned_insts[5] <= UInt<3>("h06") @[Instructions.scala 96:31]
    unsigned_insts[6] <= UInt<3>("h07") @[Instructions.scala 96:31]
    unsigned_insts[7] <= UInt<4>("h08") @[Instructions.scala 96:31]
    unsigned_insts[8] <= UInt<4>("h0a") @[Instructions.scala 96:31]
    unsigned_insts[9] <= UInt<4>("h0c") @[Instructions.scala 96:31]
    unsigned_insts[10] <= UInt<4>("h0e") @[Instructions.scala 96:31]
    unsigned_insts[11] <= UInt<5>("h010") @[Instructions.scala 96:31]
    unsigned_insts[12] <= UInt<5>("h011") @[Instructions.scala 96:31]
    unsigned_insts[13] <= UInt<5>("h012") @[Instructions.scala 96:31]
    unsigned_insts[14] <= UInt<5>("h013") @[Instructions.scala 96:31]
    unsigned_insts[15] <= UInt<5>("h014") @[Instructions.scala 96:31]
    unsigned_insts[16] <= UInt<5>("h015") @[Instructions.scala 96:31]
    unsigned_insts[17] <= UInt<5>("h016") @[Instructions.scala 96:31]
    unsigned_insts[18] <= UInt<5>("h017") @[Instructions.scala 96:31]
    unsigned_insts[19] <= UInt<5>("h018") @[Instructions.scala 96:31]
    unsigned_insts[20] <= UInt<5>("h019") @[Instructions.scala 96:31]
    unsigned_insts[21] <= UInt<5>("h01a") @[Instructions.scala 96:31]
    unsigned_insts[22] <= UInt<5>("h01b") @[Instructions.scala 96:31]
    unsigned_insts[23] <= UInt<5>("h01c") @[Instructions.scala 96:31]
    unsigned_insts[24] <= UInt<6>("h021") @[Instructions.scala 96:31]
    unsigned_insts[25] <= UInt<6>("h022") @[Instructions.scala 96:31]
    unsigned_insts[26] <= UInt<6>("h023") @[Instructions.scala 96:31]
    unsigned_insts[27] <= UInt<6>("h024") @[Instructions.scala 96:31]
    unsigned_insts[28] <= UInt<6>("h025") @[Instructions.scala 96:31]
    unsigned_insts[29] <= UInt<6>("h026") @[Instructions.scala 96:31]
    unsigned_insts[30] <= UInt<6>("h027") @[Instructions.scala 96:31]
    wire multi_insts : UInt<6>[4] @[Instructions.scala 99:28]
    multi_insts[0] <= UInt<6>("h02d") @[Instructions.scala 99:28]
    multi_insts[1] <= UInt<6>("h02e") @[Instructions.scala 99:28]
    multi_insts[2] <= UInt<6>("h02f") @[Instructions.scala 99:28]
    multi_insts[3] <= UInt<6>("h030") @[Instructions.scala 99:28]
    wire float_insts : UInt<6>[13] @[Instructions.scala 105:28]
    float_insts[0] <= UInt<6>("h031") @[Instructions.scala 105:28]
    float_insts[1] <= UInt<6>("h032") @[Instructions.scala 105:28]
    float_insts[2] <= UInt<6>("h033") @[Instructions.scala 105:28]
    float_insts[3] <= UInt<6>("h035") @[Instructions.scala 105:28]
    float_insts[4] <= UInt<6>("h036") @[Instructions.scala 105:28]
    float_insts[5] <= UInt<6>("h037") @[Instructions.scala 105:28]
    float_insts[6] <= UInt<6>("h038") @[Instructions.scala 105:28]
    float_insts[7] <= UInt<6>("h039") @[Instructions.scala 105:28]
    float_insts[8] <= UInt<6>("h03a") @[Instructions.scala 105:28]
    float_insts[9] <= UInt<6>("h03b") @[Instructions.scala 105:28]
    float_insts[10] <= UInt<6>("h03c") @[Instructions.scala 105:28]
    float_insts[11] <= UInt<6>("h03d") @[Instructions.scala 105:28]
    float_insts[12] <= UInt<6>("h03e") @[Instructions.scala 105:28]
    node _T_288 = eq(basic_insts[0], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_289 = eq(basic_insts[1], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_290 = eq(basic_insts[2], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_291 = eq(basic_insts[3], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_292 = eq(basic_insts[4], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_293 = eq(basic_insts[5], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_294 = eq(basic_insts[6], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_295 = eq(basic_insts[7], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_296 = eq(basic_insts[8], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_297 = eq(basic_insts[9], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_298 = eq(basic_insts[10], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_299 = eq(basic_insts[11], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_300 = eq(basic_insts[12], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_301 = eq(basic_insts[13], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_302 = eq(basic_insts[14], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_303 = eq(basic_insts[15], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_304 = eq(basic_insts[16], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_305 = eq(basic_insts[17], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_306 = eq(basic_insts[18], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_307 = eq(basic_insts[19], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_308 = eq(basic_insts[20], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_309 = eq(basic_insts[21], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_310 = eq(basic_insts[22], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_311 = eq(basic_insts[23], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_312 = eq(basic_insts[24], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_313 = eq(basic_insts[25], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_314 = eq(basic_insts[26], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_315 = eq(basic_insts[27], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_316 = eq(basic_insts[28], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_317 = eq(basic_insts[29], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_318 = eq(basic_insts[30], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_319 = eq(basic_insts[31], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_320 = eq(basic_insts[32], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_321 = eq(basic_insts[33], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_322 = eq(basic_insts[34], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_323 = eq(basic_insts[35], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_324 = eq(basic_insts[36], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_325 = eq(basic_insts[37], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_326 = eq(basic_insts[38], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_327 = eq(basic_insts[39], io.dx1_instruction_op) @[integer_issue_unit.scala 17:29]
    node _T_329 = or(UInt<1>("h00"), _T_288) @[integer_issue_unit.scala 17:26]
    node _T_330 = or(_T_329, _T_289) @[integer_issue_unit.scala 17:26]
    node _T_331 = or(_T_330, _T_290) @[integer_issue_unit.scala 17:26]
    node _T_332 = or(_T_331, _T_291) @[integer_issue_unit.scala 17:26]
    node _T_333 = or(_T_332, _T_292) @[integer_issue_unit.scala 17:26]
    node _T_334 = or(_T_333, _T_293) @[integer_issue_unit.scala 17:26]
    node _T_335 = or(_T_334, _T_294) @[integer_issue_unit.scala 17:26]
    node _T_336 = or(_T_335, _T_295) @[integer_issue_unit.scala 17:26]
    node _T_337 = or(_T_336, _T_296) @[integer_issue_unit.scala 17:26]
    node _T_338 = or(_T_337, _T_297) @[integer_issue_unit.scala 17:26]
    node _T_339 = or(_T_338, _T_298) @[integer_issue_unit.scala 17:26]
    node _T_340 = or(_T_339, _T_299) @[integer_issue_unit.scala 17:26]
    node _T_341 = or(_T_340, _T_300) @[integer_issue_unit.scala 17:26]
    node _T_342 = or(_T_341, _T_301) @[integer_issue_unit.scala 17:26]
    node _T_343 = or(_T_342, _T_302) @[integer_issue_unit.scala 17:26]
    node _T_344 = or(_T_343, _T_303) @[integer_issue_unit.scala 17:26]
    node _T_345 = or(_T_344, _T_304) @[integer_issue_unit.scala 17:26]
    node _T_346 = or(_T_345, _T_305) @[integer_issue_unit.scala 17:26]
    node _T_347 = or(_T_346, _T_306) @[integer_issue_unit.scala 17:26]
    node _T_348 = or(_T_347, _T_307) @[integer_issue_unit.scala 17:26]
    node _T_349 = or(_T_348, _T_308) @[integer_issue_unit.scala 17:26]
    node _T_350 = or(_T_349, _T_309) @[integer_issue_unit.scala 17:26]
    node _T_351 = or(_T_350, _T_310) @[integer_issue_unit.scala 17:26]
    node _T_352 = or(_T_351, _T_311) @[integer_issue_unit.scala 17:26]
    node _T_353 = or(_T_352, _T_312) @[integer_issue_unit.scala 17:26]
    node _T_354 = or(_T_353, _T_313) @[integer_issue_unit.scala 17:26]
    node _T_355 = or(_T_354, _T_314) @[integer_issue_unit.scala 17:26]
    node _T_356 = or(_T_355, _T_315) @[integer_issue_unit.scala 17:26]
    node _T_357 = or(_T_356, _T_316) @[integer_issue_unit.scala 17:26]
    node _T_358 = or(_T_357, _T_317) @[integer_issue_unit.scala 17:26]
    node _T_359 = or(_T_358, _T_318) @[integer_issue_unit.scala 17:26]
    node _T_360 = or(_T_359, _T_319) @[integer_issue_unit.scala 17:26]
    node _T_361 = or(_T_360, _T_320) @[integer_issue_unit.scala 17:26]
    node _T_362 = or(_T_361, _T_321) @[integer_issue_unit.scala 17:26]
    node _T_363 = or(_T_362, _T_322) @[integer_issue_unit.scala 17:26]
    node _T_364 = or(_T_363, _T_323) @[integer_issue_unit.scala 17:26]
    node _T_365 = or(_T_364, _T_324) @[integer_issue_unit.scala 17:26]
    node _T_366 = or(_T_365, _T_325) @[integer_issue_unit.scala 17:26]
    node _T_367 = or(_T_366, _T_326) @[integer_issue_unit.scala 17:26]
    node _T_368 = or(_T_367, _T_327) @[integer_issue_unit.scala 17:26]
    when _T_368 : @[integer_issue_unit.scala 17:56]
      io.retiring_stage <= UInt<1>("h01") @[integer_issue_unit.scala 18:23]
      io.functional_unit <= UInt<1>("h00") @[integer_issue_unit.scala 19:24]
      skip @[integer_issue_unit.scala 17:56]
    else : @[integer_issue_unit.scala 20:67]
      node _T_371 = eq(scratchpad_insts[0], io.dx1_instruction_op) @[integer_issue_unit.scala 20:40]
      node _T_372 = eq(scratchpad_insts[1], io.dx1_instruction_op) @[integer_issue_unit.scala 20:40]
      node _T_374 = or(UInt<1>("h00"), _T_371) @[integer_issue_unit.scala 20:37]
      node _T_375 = or(_T_374, _T_372) @[integer_issue_unit.scala 20:37]
      when _T_375 : @[integer_issue_unit.scala 20:67]
        io.retiring_stage <= UInt<2>("h02") @[integer_issue_unit.scala 21:23]
        io.functional_unit <= UInt<1>("h01") @[integer_issue_unit.scala 22:24]
        skip @[integer_issue_unit.scala 20:67]
      else : @[integer_issue_unit.scala 23:69]
        node _T_378 = eq(integer_mult_insts[0], io.dx1_instruction_op) @[integer_issue_unit.scala 23:42]
        node _T_379 = eq(integer_mult_insts[1], io.dx1_instruction_op) @[integer_issue_unit.scala 23:42]
        node _T_380 = eq(integer_mult_insts[2], io.dx1_instruction_op) @[integer_issue_unit.scala 23:42]
        node _T_381 = eq(integer_mult_insts[3], io.dx1_instruction_op) @[integer_issue_unit.scala 23:42]
        node _T_383 = or(UInt<1>("h00"), _T_378) @[integer_issue_unit.scala 23:39]
        node _T_384 = or(_T_383, _T_379) @[integer_issue_unit.scala 23:39]
        node _T_385 = or(_T_384, _T_380) @[integer_issue_unit.scala 23:39]
        node _T_386 = or(_T_385, _T_381) @[integer_issue_unit.scala 23:39]
        when _T_386 : @[integer_issue_unit.scala 23:69]
          io.retiring_stage <= UInt<2>("h03") @[integer_issue_unit.scala 24:23]
          io.functional_unit <= UInt<2>("h02") @[integer_issue_unit.scala 25:24]
          skip @[integer_issue_unit.scala 23:69]
        else : @[integer_issue_unit.scala 26:14]
          io.retiring_stage <= UInt<1>("h01") @[integer_issue_unit.scala 27:23]
          io.functional_unit <= UInt<1>("h00") @[integer_issue_unit.scala 28:24]
          skip @[integer_issue_unit.scala 26:14]
    
  module register_file : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, host_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip read_indexes : UInt<3>[3], read_data : UInt<32>[3], flip write_enable : UInt<1>, flip write_index : UInt<3>, flip write_data : UInt<32>}
    
    cmem registers : UInt<32>[8] @[register_file.scala 23:22]
    io.host_interface.read_data <= UInt<1>("h00") @[register_file.scala 26:31]
    io.host_interface.read_ack <= io.host_interface.read_req @[register_file.scala 27:30]
    io.host_interface.write_ack <= io.host_interface.write_req @[register_file.scala 30:31]
    infer mport _T_64 = registers[io.read_indexes[0]], clock @[register_file.scala 34:33]
    io.read_data[0] <= _T_64 @[register_file.scala 34:21]
    infer mport _T_65 = registers[io.read_indexes[1]], clock @[register_file.scala 34:33]
    io.read_data[1] <= _T_65 @[register_file.scala 34:21]
    infer mport _T_66 = registers[io.read_indexes[2]], clock @[register_file.scala 34:33]
    io.read_data[2] <= _T_66 @[register_file.scala 34:21]
    when io.enable : @[register_file.scala 36:18]
      when io.host_interface.write_req : @[register_file.scala 37:38]
        node _T_67 = bits(io.host_interface.write_index, 2, 0) @[register_file.scala 38:16]
        infer mport _T_68 = registers[_T_67], clock @[register_file.scala 38:16]
        _T_68 <= io.host_interface.write_data @[register_file.scala 38:48]
        skip @[register_file.scala 37:38]
      else : @[register_file.scala 39:32]
        when io.write_enable : @[register_file.scala 39:32]
          infer mport _T_69 = registers[io.write_index], clock @[register_file.scala 40:16]
          _T_69 <= io.write_data @[register_file.scala 40:33]
          skip @[register_file.scala 39:32]
      skip @[register_file.scala 36:18]
    infer mport _T_71 = registers[UInt<1>("h00")], clock @[register_file.scala 47:47]
    node _T_72 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_74 = eq(_T_72, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_74 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 0 data is = %d\n", _T_71) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_76 = registers[UInt<1>("h01")], clock @[register_file.scala 47:47]
    node _T_77 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_79 = eq(_T_77, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_79 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 1 data is = %d\n", _T_76) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_81 = registers[UInt<2>("h02")], clock @[register_file.scala 47:47]
    node _T_82 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_84 = eq(_T_82, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_84 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 2 data is = %d\n", _T_81) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_86 = registers[UInt<2>("h03")], clock @[register_file.scala 47:47]
    node _T_87 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_89 = eq(_T_87, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_89 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 3 data is = %d\n", _T_86) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_91 = registers[UInt<3>("h04")], clock @[register_file.scala 47:47]
    node _T_92 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_94 = eq(_T_92, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_94 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 4 data is = %d\n", _T_91) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_96 = registers[UInt<3>("h05")], clock @[register_file.scala 47:47]
    node _T_97 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_99 = eq(_T_97, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_99 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 5 data is = %d\n", _T_96) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_101 = registers[UInt<3>("h06")], clock @[register_file.scala 47:47]
    node _T_102 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_104 = eq(_T_102, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_104 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 6 data is = %d\n", _T_101) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    infer mport _T_106 = registers[UInt<3>("h07")], clock @[register_file.scala 47:47]
    node _T_107 = bits(reset, 0, 0) @[register_file.scala 47:11]
    node _T_109 = eq(_T_107, UInt<1>("h00")) @[register_file.scala 47:11]
    when _T_109 : @[register_file.scala 47:11]
      printf(clock, UInt<1>(1), "Memory 7 data is = %d\n", _T_106) @[register_file.scala 47:11]
      skip @[register_file.scala 47:11]
    node _T_110 = bits(reset, 0, 0) @[register_file.scala 48:9]
    node _T_112 = eq(_T_110, UInt<1>("h00")) @[register_file.scala 48:9]
    when _T_112 : @[register_file.scala 48:9]
      printf(clock, UInt<1>(1), "--------------------------------\n") @[register_file.scala 48:9]
      skip @[register_file.scala 48:9]
    
  module source_fetching_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip st : UInt<6>, flip si : UInt<9>, flip immediate : UInt<32>, flip input_channel_data : UInt<32>[4], register_read_indexes : UInt<3>[3], flip register_read_data : UInt<32>[3], operands : UInt<32>[3]}
    
    wire source_types : UInt<2>[3] @[source_fetching_unit.scala 20:26]
    wire source_indices : UInt<3>[3] @[source_fetching_unit.scala 21:28]
    node _T_93 = bits(io.st, 1, 0) @[source_fetching_unit.scala 24:29]
    source_types[0] <= _T_93 @[source_fetching_unit.scala 24:21]
    node _T_94 = bits(io.si, 2, 0) @[source_fetching_unit.scala 25:31]
    source_indices[0] <= _T_94 @[source_fetching_unit.scala 25:23]
    node _T_95 = bits(io.st, 3, 2) @[source_fetching_unit.scala 24:29]
    source_types[1] <= _T_95 @[source_fetching_unit.scala 24:21]
    node _T_96 = bits(io.si, 5, 3) @[source_fetching_unit.scala 25:31]
    source_indices[1] <= _T_96 @[source_fetching_unit.scala 25:23]
    node _T_97 = bits(io.st, 5, 4) @[source_fetching_unit.scala 24:29]
    source_types[2] <= _T_97 @[source_fetching_unit.scala 24:21]
    node _T_98 = bits(io.si, 8, 6) @[source_fetching_unit.scala 25:31]
    source_indices[2] <= _T_98 @[source_fetching_unit.scala 25:23]
    io.register_read_indexes[0] <= UInt<1>("h00") @[source_fetching_unit.scala 30:33]
    io.operands[0] <= UInt<1>("h00") @[source_fetching_unit.scala 31:20]
    node _T_102 = eq(UInt<1>("h00"), source_types[0]) @[Conditional.scala 37:30]
    when _T_102 : @[Conditional.scala 40:58]
      io.register_read_indexes[0] <= UInt<1>("h00") @[source_fetching_unit.scala 35:37]
      io.operands[0] <= UInt<1>("h00") @[source_fetching_unit.scala 36:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_106 = eq(UInt<1>("h01"), source_types[0]) @[Conditional.scala 37:30]
      when _T_106 : @[Conditional.scala 39:67]
        io.register_read_indexes[0] <= UInt<1>("h00") @[source_fetching_unit.scala 39:37]
        io.operands[0] <= io.immediate @[source_fetching_unit.scala 40:24]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_109 = eq(UInt<2>("h02"), source_types[0]) @[Conditional.scala 37:30]
        when _T_109 : @[Conditional.scala 39:67]
          io.register_read_indexes[0] <= UInt<1>("h00") @[source_fetching_unit.scala 43:37]
          node _T_112 = bits(source_indices[0], 1, 0)
          io.operands[0] <= io.input_channel_data[_T_112] @[source_fetching_unit.scala 44:24]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_114 = eq(UInt<2>("h03"), source_types[0]) @[Conditional.scala 37:30]
          when _T_114 : @[Conditional.scala 39:67]
            io.register_read_indexes[0] <= source_indices[0] @[source_fetching_unit.scala 47:37]
            io.operands[0] <= io.register_read_data[0] @[source_fetching_unit.scala 48:24]
            skip @[Conditional.scala 39:67]
    io.register_read_indexes[1] <= UInt<1>("h00") @[source_fetching_unit.scala 30:33]
    io.operands[1] <= UInt<1>("h00") @[source_fetching_unit.scala 31:20]
    node _T_118 = eq(UInt<1>("h00"), source_types[1]) @[Conditional.scala 37:30]
    when _T_118 : @[Conditional.scala 40:58]
      io.register_read_indexes[1] <= UInt<1>("h00") @[source_fetching_unit.scala 35:37]
      io.operands[1] <= UInt<1>("h00") @[source_fetching_unit.scala 36:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_122 = eq(UInt<1>("h01"), source_types[1]) @[Conditional.scala 37:30]
      when _T_122 : @[Conditional.scala 39:67]
        io.register_read_indexes[1] <= UInt<1>("h00") @[source_fetching_unit.scala 39:37]
        io.operands[1] <= io.immediate @[source_fetching_unit.scala 40:24]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_125 = eq(UInt<2>("h02"), source_types[1]) @[Conditional.scala 37:30]
        when _T_125 : @[Conditional.scala 39:67]
          io.register_read_indexes[1] <= UInt<1>("h00") @[source_fetching_unit.scala 43:37]
          node _T_128 = bits(source_indices[1], 1, 0)
          io.operands[1] <= io.input_channel_data[_T_128] @[source_fetching_unit.scala 44:24]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_130 = eq(UInt<2>("h03"), source_types[1]) @[Conditional.scala 37:30]
          when _T_130 : @[Conditional.scala 39:67]
            io.register_read_indexes[1] <= source_indices[1] @[source_fetching_unit.scala 47:37]
            io.operands[1] <= io.register_read_data[1] @[source_fetching_unit.scala 48:24]
            skip @[Conditional.scala 39:67]
    io.register_read_indexes[2] <= UInt<1>("h00") @[source_fetching_unit.scala 30:33]
    io.operands[2] <= UInt<1>("h00") @[source_fetching_unit.scala 31:20]
    node _T_134 = eq(UInt<1>("h00"), source_types[2]) @[Conditional.scala 37:30]
    when _T_134 : @[Conditional.scala 40:58]
      io.register_read_indexes[2] <= UInt<1>("h00") @[source_fetching_unit.scala 35:37]
      io.operands[2] <= UInt<1>("h00") @[source_fetching_unit.scala 36:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_138 = eq(UInt<1>("h01"), source_types[2]) @[Conditional.scala 37:30]
      when _T_138 : @[Conditional.scala 39:67]
        io.register_read_indexes[2] <= UInt<1>("h00") @[source_fetching_unit.scala 39:37]
        io.operands[2] <= io.immediate @[source_fetching_unit.scala 40:24]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_141 = eq(UInt<2>("h02"), source_types[2]) @[Conditional.scala 37:30]
        when _T_141 : @[Conditional.scala 39:67]
          io.register_read_indexes[2] <= UInt<1>("h00") @[source_fetching_unit.scala 43:37]
          node _T_144 = bits(source_indices[2], 1, 0)
          io.operands[2] <= io.input_channel_data[_T_144] @[source_fetching_unit.scala 44:24]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_146 = eq(UInt<2>("h03"), source_types[2]) @[Conditional.scala 37:30]
          when _T_146 : @[Conditional.scala 39:67]
            io.register_read_indexes[2] <= source_indices[2] @[source_fetching_unit.scala 47:37]
            io.operands[2] <= io.register_read_data[2] @[source_fetching_unit.scala 48:24]
            skip @[Conditional.scala 39:67]
    
  module operand_forwarding_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip source_types : UInt<6>, flip source_indices : UInt<9>, flip downstream_dt : UInt<2>, flip downstream_di : UInt<3>, flip downstream_result : UInt<32>, flip pre_ofu_operands : UInt<32>[3], post_ofu_operands : UInt<32>[3]}
    
    wire source_types : UInt<2>[3] @[operand_forwarding_unit.scala 22:26]
    wire source_indices : UInt<3>[3] @[operand_forwarding_unit.scala 23:28]
    node _T_65 = bits(io.source_types, 1, 0) @[operand_forwarding_unit.scala 26:39]
    source_types[0] <= _T_65 @[operand_forwarding_unit.scala 26:21]
    node _T_66 = bits(io.source_indices, 2, 0) @[operand_forwarding_unit.scala 27:43]
    source_indices[0] <= _T_66 @[operand_forwarding_unit.scala 27:23]
    node _T_67 = bits(io.source_types, 3, 2) @[operand_forwarding_unit.scala 26:39]
    source_types[1] <= _T_67 @[operand_forwarding_unit.scala 26:21]
    node _T_68 = bits(io.source_indices, 5, 3) @[operand_forwarding_unit.scala 27:43]
    source_indices[1] <= _T_68 @[operand_forwarding_unit.scala 27:23]
    node _T_69 = bits(io.source_types, 5, 4) @[operand_forwarding_unit.scala 26:39]
    source_types[2] <= _T_69 @[operand_forwarding_unit.scala 26:21]
    node _T_70 = bits(io.source_indices, 8, 6) @[operand_forwarding_unit.scala 27:43]
    source_indices[2] <= _T_70 @[operand_forwarding_unit.scala 27:23]
    when io.enable : @[operand_forwarding_unit.scala 31:20]
      node _T_72 = eq(source_types[0], UInt<2>("h03")) @[operand_forwarding_unit.scala 32:28]
      node _T_74 = eq(io.downstream_dt, UInt<2>("h02")) @[operand_forwarding_unit.scala 33:26]
      node _T_75 = and(_T_72, _T_74) @[operand_forwarding_unit.scala 32:59]
      node _T_76 = eq(source_indices[0], io.downstream_di) @[operand_forwarding_unit.scala 34:27]
      node _T_77 = and(_T_75, _T_76) @[operand_forwarding_unit.scala 33:62]
      when _T_77 : @[operand_forwarding_unit.scala 34:48]
        io.post_ofu_operands[0] <= io.downstream_result @[operand_forwarding_unit.scala 35:33]
        skip @[operand_forwarding_unit.scala 34:48]
      else : @[operand_forwarding_unit.scala 36:18]
        io.post_ofu_operands[0] <= io.pre_ofu_operands[0] @[operand_forwarding_unit.scala 37:33]
        skip @[operand_forwarding_unit.scala 36:18]
      skip @[operand_forwarding_unit.scala 31:20]
    else : @[operand_forwarding_unit.scala 39:16]
      io.post_ofu_operands[0] <= io.pre_ofu_operands[0] @[operand_forwarding_unit.scala 40:31]
      skip @[operand_forwarding_unit.scala 39:16]
    when io.enable : @[operand_forwarding_unit.scala 31:20]
      node _T_79 = eq(source_types[1], UInt<2>("h03")) @[operand_forwarding_unit.scala 32:28]
      node _T_81 = eq(io.downstream_dt, UInt<2>("h02")) @[operand_forwarding_unit.scala 33:26]
      node _T_82 = and(_T_79, _T_81) @[operand_forwarding_unit.scala 32:59]
      node _T_83 = eq(source_indices[1], io.downstream_di) @[operand_forwarding_unit.scala 34:27]
      node _T_84 = and(_T_82, _T_83) @[operand_forwarding_unit.scala 33:62]
      when _T_84 : @[operand_forwarding_unit.scala 34:48]
        io.post_ofu_operands[1] <= io.downstream_result @[operand_forwarding_unit.scala 35:33]
        skip @[operand_forwarding_unit.scala 34:48]
      else : @[operand_forwarding_unit.scala 36:18]
        io.post_ofu_operands[1] <= io.pre_ofu_operands[1] @[operand_forwarding_unit.scala 37:33]
        skip @[operand_forwarding_unit.scala 36:18]
      skip @[operand_forwarding_unit.scala 31:20]
    else : @[operand_forwarding_unit.scala 39:16]
      io.post_ofu_operands[1] <= io.pre_ofu_operands[1] @[operand_forwarding_unit.scala 40:31]
      skip @[operand_forwarding_unit.scala 39:16]
    when io.enable : @[operand_forwarding_unit.scala 31:20]
      node _T_86 = eq(source_types[2], UInt<2>("h03")) @[operand_forwarding_unit.scala 32:28]
      node _T_88 = eq(io.downstream_dt, UInt<2>("h02")) @[operand_forwarding_unit.scala 33:26]
      node _T_89 = and(_T_86, _T_88) @[operand_forwarding_unit.scala 32:59]
      node _T_90 = eq(source_indices[2], io.downstream_di) @[operand_forwarding_unit.scala 34:27]
      node _T_91 = and(_T_89, _T_90) @[operand_forwarding_unit.scala 33:62]
      when _T_91 : @[operand_forwarding_unit.scala 34:48]
        io.post_ofu_operands[2] <= io.downstream_result @[operand_forwarding_unit.scala 35:33]
        skip @[operand_forwarding_unit.scala 34:48]
      else : @[operand_forwarding_unit.scala 36:18]
        io.post_ofu_operands[2] <= io.pre_ofu_operands[2] @[operand_forwarding_unit.scala 37:33]
        skip @[operand_forwarding_unit.scala 36:18]
      skip @[operand_forwarding_unit.scala 31:20]
    else : @[operand_forwarding_unit.scala 39:16]
      io.post_ofu_operands[2] <= io.pre_ofu_operands[2] @[operand_forwarding_unit.scala 40:31]
      skip @[operand_forwarding_unit.scala 39:16]
    
  module arithmetic_logic_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip opcode : UInt<4>, flip operands : UInt<32>[3], result : UInt<32>}
    
    wire basic_insts : UInt<6>[40] @[Instructions.scala 49:28]
    basic_insts[0] <= UInt<1>("h00") @[Instructions.scala 49:28]
    basic_insts[1] <= UInt<1>("h01") @[Instructions.scala 49:28]
    basic_insts[2] <= UInt<2>("h02") @[Instructions.scala 49:28]
    basic_insts[3] <= UInt<2>("h03") @[Instructions.scala 49:28]
    basic_insts[4] <= UInt<3>("h04") @[Instructions.scala 49:28]
    basic_insts[5] <= UInt<3>("h05") @[Instructions.scala 49:28]
    basic_insts[6] <= UInt<3>("h06") @[Instructions.scala 49:28]
    basic_insts[7] <= UInt<3>("h07") @[Instructions.scala 49:28]
    basic_insts[8] <= UInt<4>("h08") @[Instructions.scala 49:28]
    basic_insts[9] <= UInt<4>("h09") @[Instructions.scala 49:28]
    basic_insts[10] <= UInt<4>("h0a") @[Instructions.scala 49:28]
    basic_insts[11] <= UInt<4>("h0b") @[Instructions.scala 49:28]
    basic_insts[12] <= UInt<4>("h0c") @[Instructions.scala 49:28]
    basic_insts[13] <= UInt<4>("h0d") @[Instructions.scala 49:28]
    basic_insts[14] <= UInt<4>("h0e") @[Instructions.scala 49:28]
    basic_insts[15] <= UInt<4>("h0f") @[Instructions.scala 49:28]
    basic_insts[16] <= UInt<5>("h010") @[Instructions.scala 49:28]
    basic_insts[17] <= UInt<5>("h011") @[Instructions.scala 49:28]
    basic_insts[18] <= UInt<5>("h012") @[Instructions.scala 49:28]
    basic_insts[19] <= UInt<5>("h013") @[Instructions.scala 49:28]
    basic_insts[20] <= UInt<5>("h014") @[Instructions.scala 49:28]
    basic_insts[21] <= UInt<5>("h015") @[Instructions.scala 49:28]
    basic_insts[22] <= UInt<5>("h016") @[Instructions.scala 49:28]
    basic_insts[23] <= UInt<5>("h017") @[Instructions.scala 49:28]
    basic_insts[24] <= UInt<5>("h018") @[Instructions.scala 49:28]
    basic_insts[25] <= UInt<5>("h019") @[Instructions.scala 49:28]
    basic_insts[26] <= UInt<5>("h01a") @[Instructions.scala 49:28]
    basic_insts[27] <= UInt<5>("h01b") @[Instructions.scala 49:28]
    basic_insts[28] <= UInt<5>("h01c") @[Instructions.scala 49:28]
    basic_insts[29] <= UInt<5>("h01d") @[Instructions.scala 49:28]
    basic_insts[30] <= UInt<5>("h01e") @[Instructions.scala 49:28]
    basic_insts[31] <= UInt<5>("h01f") @[Instructions.scala 49:28]
    basic_insts[32] <= UInt<6>("h020") @[Instructions.scala 49:28]
    basic_insts[33] <= UInt<6>("h021") @[Instructions.scala 49:28]
    basic_insts[34] <= UInt<6>("h022") @[Instructions.scala 49:28]
    basic_insts[35] <= UInt<6>("h023") @[Instructions.scala 49:28]
    basic_insts[36] <= UInt<6>("h024") @[Instructions.scala 49:28]
    basic_insts[37] <= UInt<6>("h025") @[Instructions.scala 49:28]
    basic_insts[38] <= UInt<6>("h026") @[Instructions.scala 49:28]
    basic_insts[39] <= UInt<6>("h027") @[Instructions.scala 49:28]
    wire scratchpad_insts : UInt<6>[2] @[Instructions.scala 54:33]
    scratchpad_insts[0] <= UInt<6>("h028") @[Instructions.scala 54:33]
    scratchpad_insts[1] <= UInt<6>("h029") @[Instructions.scala 54:33]
    wire load_store_inst : UInt<6>[3] @[Instructions.scala 60:32]
    load_store_inst[0] <= UInt<6>("h02a") @[Instructions.scala 60:32]
    load_store_inst[1] <= UInt<6>("h02b") @[Instructions.scala 60:32]
    load_store_inst[2] <= UInt<6>("h02c") @[Instructions.scala 60:32]
    wire integer_mult_insts : UInt<6>[4] @[Instructions.scala 67:35]
    integer_mult_insts[0] <= UInt<6>("h02d") @[Instructions.scala 67:35]
    integer_mult_insts[1] <= UInt<6>("h02e") @[Instructions.scala 67:35]
    integer_mult_insts[2] <= UInt<6>("h02f") @[Instructions.scala 67:35]
    integer_mult_insts[3] <= UInt<6>("h030") @[Instructions.scala 67:35]
    wire float_point_insts : UInt<6>[14] @[Instructions.scala 84:34]
    float_point_insts[0] <= UInt<6>("h031") @[Instructions.scala 84:34]
    float_point_insts[1] <= UInt<6>("h032") @[Instructions.scala 84:34]
    float_point_insts[2] <= UInt<6>("h033") @[Instructions.scala 84:34]
    float_point_insts[3] <= UInt<6>("h034") @[Instructions.scala 84:34]
    float_point_insts[4] <= UInt<6>("h035") @[Instructions.scala 84:34]
    float_point_insts[5] <= UInt<6>("h036") @[Instructions.scala 84:34]
    float_point_insts[6] <= UInt<6>("h037") @[Instructions.scala 84:34]
    float_point_insts[7] <= UInt<6>("h038") @[Instructions.scala 84:34]
    float_point_insts[8] <= UInt<6>("h039") @[Instructions.scala 84:34]
    float_point_insts[9] <= UInt<6>("h03a") @[Instructions.scala 84:34]
    float_point_insts[10] <= UInt<6>("h03b") @[Instructions.scala 84:34]
    float_point_insts[11] <= UInt<6>("h03c") @[Instructions.scala 84:34]
    float_point_insts[12] <= UInt<6>("h03d") @[Instructions.scala 84:34]
    float_point_insts[13] <= UInt<6>("h03e") @[Instructions.scala 84:34]
    wire signed_insts : UInt<4>[5] @[Instructions.scala 88:29]
    signed_insts[0] <= UInt<3>("h05") @[Instructions.scala 88:29]
    signed_insts[1] <= UInt<4>("h09") @[Instructions.scala 88:29]
    signed_insts[2] <= UInt<4>("h0b") @[Instructions.scala 88:29]
    signed_insts[3] <= UInt<4>("h0d") @[Instructions.scala 88:29]
    signed_insts[4] <= UInt<4>("h0f") @[Instructions.scala 88:29]
    wire unsigned_insts : UInt<6>[31] @[Instructions.scala 96:31]
    unsigned_insts[0] <= UInt<1>("h00") @[Instructions.scala 96:31]
    unsigned_insts[1] <= UInt<1>("h01") @[Instructions.scala 96:31]
    unsigned_insts[2] <= UInt<2>("h02") @[Instructions.scala 96:31]
    unsigned_insts[3] <= UInt<2>("h03") @[Instructions.scala 96:31]
    unsigned_insts[4] <= UInt<3>("h04") @[Instructions.scala 96:31]
    unsigned_insts[5] <= UInt<3>("h06") @[Instructions.scala 96:31]
    unsigned_insts[6] <= UInt<3>("h07") @[Instructions.scala 96:31]
    unsigned_insts[7] <= UInt<4>("h08") @[Instructions.scala 96:31]
    unsigned_insts[8] <= UInt<4>("h0a") @[Instructions.scala 96:31]
    unsigned_insts[9] <= UInt<4>("h0c") @[Instructions.scala 96:31]
    unsigned_insts[10] <= UInt<4>("h0e") @[Instructions.scala 96:31]
    unsigned_insts[11] <= UInt<5>("h010") @[Instructions.scala 96:31]
    unsigned_insts[12] <= UInt<5>("h011") @[Instructions.scala 96:31]
    unsigned_insts[13] <= UInt<5>("h012") @[Instructions.scala 96:31]
    unsigned_insts[14] <= UInt<5>("h013") @[Instructions.scala 96:31]
    unsigned_insts[15] <= UInt<5>("h014") @[Instructions.scala 96:31]
    unsigned_insts[16] <= UInt<5>("h015") @[Instructions.scala 96:31]
    unsigned_insts[17] <= UInt<5>("h016") @[Instructions.scala 96:31]
    unsigned_insts[18] <= UInt<5>("h017") @[Instructions.scala 96:31]
    unsigned_insts[19] <= UInt<5>("h018") @[Instructions.scala 96:31]
    unsigned_insts[20] <= UInt<5>("h019") @[Instructions.scala 96:31]
    unsigned_insts[21] <= UInt<5>("h01a") @[Instructions.scala 96:31]
    unsigned_insts[22] <= UInt<5>("h01b") @[Instructions.scala 96:31]
    unsigned_insts[23] <= UInt<5>("h01c") @[Instructions.scala 96:31]
    unsigned_insts[24] <= UInt<6>("h021") @[Instructions.scala 96:31]
    unsigned_insts[25] <= UInt<6>("h022") @[Instructions.scala 96:31]
    unsigned_insts[26] <= UInt<6>("h023") @[Instructions.scala 96:31]
    unsigned_insts[27] <= UInt<6>("h024") @[Instructions.scala 96:31]
    unsigned_insts[28] <= UInt<6>("h025") @[Instructions.scala 96:31]
    unsigned_insts[29] <= UInt<6>("h026") @[Instructions.scala 96:31]
    unsigned_insts[30] <= UInt<6>("h027") @[Instructions.scala 96:31]
    wire multi_insts : UInt<6>[4] @[Instructions.scala 99:28]
    multi_insts[0] <= UInt<6>("h02d") @[Instructions.scala 99:28]
    multi_insts[1] <= UInt<6>("h02e") @[Instructions.scala 99:28]
    multi_insts[2] <= UInt<6>("h02f") @[Instructions.scala 99:28]
    multi_insts[3] <= UInt<6>("h030") @[Instructions.scala 99:28]
    wire float_insts : UInt<6>[13] @[Instructions.scala 105:28]
    float_insts[0] <= UInt<6>("h031") @[Instructions.scala 105:28]
    float_insts[1] <= UInt<6>("h032") @[Instructions.scala 105:28]
    float_insts[2] <= UInt<6>("h033") @[Instructions.scala 105:28]
    float_insts[3] <= UInt<6>("h035") @[Instructions.scala 105:28]
    float_insts[4] <= UInt<6>("h036") @[Instructions.scala 105:28]
    float_insts[5] <= UInt<6>("h037") @[Instructions.scala 105:28]
    float_insts[6] <= UInt<6>("h038") @[Instructions.scala 105:28]
    float_insts[7] <= UInt<6>("h039") @[Instructions.scala 105:28]
    float_insts[8] <= UInt<6>("h03a") @[Instructions.scala 105:28]
    float_insts[9] <= UInt<6>("h03b") @[Instructions.scala 105:28]
    float_insts[10] <= UInt<6>("h03c") @[Instructions.scala 105:28]
    float_insts[11] <= UInt<6>("h03d") @[Instructions.scala 105:28]
    float_insts[12] <= UInt<6>("h03e") @[Instructions.scala 105:28]
    wire op : UInt<4> @[arithmetic_logic_unit.scala 25:21]
    op <= io.opcode @[arithmetic_logic_unit.scala 26:6]
    wire operand0_signed : SInt<32> @[arithmetic_logic_unit.scala 29:29]
    wire operand1_signed : SInt<32> @[arithmetic_logic_unit.scala 30:29]
    wire operand2_signed : SInt<32> @[arithmetic_logic_unit.scala 31:29]
    wire operand0_unsigned : UInt<32> @[arithmetic_logic_unit.scala 33:31]
    wire operand1_unsigned : UInt<32> @[arithmetic_logic_unit.scala 34:31]
    wire operand2_unsigned : UInt<32> @[arithmetic_logic_unit.scala 35:31]
    wire result_signed : SInt<32> @[arithmetic_logic_unit.scala 37:27]
    wire result_unsigned : UInt<32> @[arithmetic_logic_unit.scala 38:29]
    result_signed <= asSInt(UInt<1>("h00")) @[arithmetic_logic_unit.scala 39:17]
    result_unsigned <= UInt<1>("h00") @[arithmetic_logic_unit.scala 39:40]
    operand0_unsigned <= io.operands[0] @[arithmetic_logic_unit.scala 42:21]
    operand1_unsigned <= io.operands[1] @[arithmetic_logic_unit.scala 43:21]
    operand2_unsigned <= io.operands[2] @[arithmetic_logic_unit.scala 44:21]
    node _T_313 = asSInt(io.operands[0]) @[arithmetic_logic_unit.scala 45:43]
    operand0_signed <= _T_313 @[arithmetic_logic_unit.scala 45:19]
    node _T_314 = asSInt(io.operands[1]) @[arithmetic_logic_unit.scala 46:43]
    operand1_signed <= _T_314 @[arithmetic_logic_unit.scala 46:19]
    node _T_315 = asSInt(io.operands[2]) @[arithmetic_logic_unit.scala 47:43]
    operand2_signed <= _T_315 @[arithmetic_logic_unit.scala 47:19]
    result_signed <= asSInt(UInt<1>("h00")) @[arithmetic_logic_unit.scala 50:17]
    result_unsigned <= UInt<1>("h00") @[arithmetic_logic_unit.scala 51:19]
    node _T_319 = eq(op, UInt<3>("h05")) @[arithmetic_logic_unit.scala 55:49]
    when _T_319 : @[arithmetic_logic_unit.scala 55:66]
      node _T_320 = dshr(operand0_signed, operand1_unsigned) @[arithmetic_logic_unit.scala 55:100]
      result_signed <= _T_320 @[arithmetic_logic_unit.scala 55:81]
      skip @[arithmetic_logic_unit.scala 55:66]
    node _T_322 = eq(op, UInt<4>("h09")) @[arithmetic_logic_unit.scala 56:49]
    when _T_322 : @[arithmetic_logic_unit.scala 56:66]
      node _T_323 = gt(operand0_signed, operand1_signed) @[arithmetic_logic_unit.scala 56:101]
      node _T_324 = asSInt(_T_323) @[arithmetic_logic_unit.scala 56:126]
      result_signed <= _T_324 @[arithmetic_logic_unit.scala 56:81]
      skip @[arithmetic_logic_unit.scala 56:66]
    node logical_operand0_unsigned = neq(operand0_unsigned, UInt<1>("h00")) @[arithmetic_logic_unit.scala 64:58]
    node logical_operand1_unsigned = neq(operand1_unsigned, UInt<1>("h00")) @[arithmetic_logic_unit.scala 65:58]
    node logical_operand2_unsigned = neq(operand2_unsigned, UInt<1>("h00")) @[arithmetic_logic_unit.scala 66:58]
    node _T_329 = eq(op, UInt<1>("h01")) @[arithmetic_logic_unit.scala 69:49]
    when _T_329 : @[arithmetic_logic_unit.scala 69:65]
      result_unsigned <= operand0_unsigned @[arithmetic_logic_unit.scala 69:82]
      skip @[arithmetic_logic_unit.scala 69:65]
    node _T_331 = eq(op, UInt<2>("h02")) @[arithmetic_logic_unit.scala 70:49]
    when _T_331 : @[arithmetic_logic_unit.scala 70:65]
      node _T_332 = add(operand0_unsigned, operand1_unsigned) @[arithmetic_logic_unit.scala 70:103]
      node _T_333 = tail(_T_332, 1) @[arithmetic_logic_unit.scala 70:103]
      result_unsigned <= _T_333 @[arithmetic_logic_unit.scala 70:82]
      skip @[arithmetic_logic_unit.scala 70:65]
    node _T_335 = eq(op, UInt<2>("h03")) @[arithmetic_logic_unit.scala 71:49]
    when _T_335 : @[arithmetic_logic_unit.scala 71:65]
      node _T_336 = sub(operand0_unsigned, operand1_unsigned) @[arithmetic_logic_unit.scala 71:103]
      node _T_337 = asUInt(_T_336) @[arithmetic_logic_unit.scala 71:103]
      node _T_338 = tail(_T_337, 1) @[arithmetic_logic_unit.scala 71:103]
      result_unsigned <= _T_338 @[arithmetic_logic_unit.scala 71:82]
      skip @[arithmetic_logic_unit.scala 71:65]
    node _T_340 = eq(op, UInt<3>("h04")) @[arithmetic_logic_unit.scala 72:49]
    when _T_340 : @[arithmetic_logic_unit.scala 72:65]
      node _T_341 = bits(operand1_unsigned, 18, 0) @[arithmetic_logic_unit.scala 72:123]
      node _T_342 = dshl(operand0_unsigned, _T_341) @[arithmetic_logic_unit.scala 72:103]
      result_unsigned <= _T_342 @[arithmetic_logic_unit.scala 72:82]
      skip @[arithmetic_logic_unit.scala 72:65]
    node _T_344 = eq(op, UInt<3>("h06")) @[arithmetic_logic_unit.scala 73:49]
    when _T_344 : @[arithmetic_logic_unit.scala 73:65]
      node _T_345 = dshr(operand0_unsigned, operand1_unsigned) @[arithmetic_logic_unit.scala 73:103]
      result_unsigned <= _T_345 @[arithmetic_logic_unit.scala 73:82]
      skip @[arithmetic_logic_unit.scala 73:65]
    node _T_347 = eq(op, UInt<3>("h07")) @[arithmetic_logic_unit.scala 74:48]
    when _T_347 : @[arithmetic_logic_unit.scala 74:63]
      node _T_348 = eq(operand0_unsigned, operand1_unsigned) @[arithmetic_logic_unit.scala 74:101]
      result_unsigned <= _T_348 @[arithmetic_logic_unit.scala 74:80]
      skip @[arithmetic_logic_unit.scala 74:63]
    node _T_350 = eq(op, UInt<4>("h08")) @[arithmetic_logic_unit.scala 75:48]
    when _T_350 : @[arithmetic_logic_unit.scala 75:63]
      node _T_351 = neq(operand0_unsigned, operand1_unsigned) @[arithmetic_logic_unit.scala 75:101]
      result_unsigned <= _T_351 @[arithmetic_logic_unit.scala 75:80]
      skip @[arithmetic_logic_unit.scala 75:63]
    wire fpResult : UInt<32> @[arithmetic_logic_unit.scala 122:22]
    fpResult <= UInt<1>("h00") @[arithmetic_logic_unit.scala 123:12]
    node _T_354 = eq(unsigned_insts[0], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_355 = eq(unsigned_insts[1], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_356 = eq(unsigned_insts[2], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_357 = eq(unsigned_insts[3], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_358 = eq(unsigned_insts[4], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_359 = eq(unsigned_insts[5], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_360 = eq(unsigned_insts[6], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_361 = eq(unsigned_insts[7], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_362 = eq(unsigned_insts[8], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_363 = eq(unsigned_insts[9], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_364 = eq(unsigned_insts[10], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_365 = eq(unsigned_insts[11], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_366 = eq(unsigned_insts[12], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_367 = eq(unsigned_insts[13], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_368 = eq(unsigned_insts[14], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_369 = eq(unsigned_insts[15], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_370 = eq(unsigned_insts[16], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_371 = eq(unsigned_insts[17], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_372 = eq(unsigned_insts[18], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_373 = eq(unsigned_insts[19], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_374 = eq(unsigned_insts[20], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_375 = eq(unsigned_insts[21], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_376 = eq(unsigned_insts[22], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_377 = eq(unsigned_insts[23], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_378 = eq(unsigned_insts[24], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_379 = eq(unsigned_insts[25], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_380 = eq(unsigned_insts[26], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_381 = eq(unsigned_insts[27], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_382 = eq(unsigned_insts[28], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_383 = eq(unsigned_insts[29], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_384 = eq(unsigned_insts[30], op) @[arithmetic_logic_unit.scala 144:32]
    node _T_386 = or(UInt<1>("h00"), _T_354) @[arithmetic_logic_unit.scala 144:29]
    node _T_387 = or(_T_386, _T_355) @[arithmetic_logic_unit.scala 144:29]
    node _T_388 = or(_T_387, _T_356) @[arithmetic_logic_unit.scala 144:29]
    node _T_389 = or(_T_388, _T_357) @[arithmetic_logic_unit.scala 144:29]
    node _T_390 = or(_T_389, _T_358) @[arithmetic_logic_unit.scala 144:29]
    node _T_391 = or(_T_390, _T_359) @[arithmetic_logic_unit.scala 144:29]
    node _T_392 = or(_T_391, _T_360) @[arithmetic_logic_unit.scala 144:29]
    node _T_393 = or(_T_392, _T_361) @[arithmetic_logic_unit.scala 144:29]
    node _T_394 = or(_T_393, _T_362) @[arithmetic_logic_unit.scala 144:29]
    node _T_395 = or(_T_394, _T_363) @[arithmetic_logic_unit.scala 144:29]
    node _T_396 = or(_T_395, _T_364) @[arithmetic_logic_unit.scala 144:29]
    node _T_397 = or(_T_396, _T_365) @[arithmetic_logic_unit.scala 144:29]
    node _T_398 = or(_T_397, _T_366) @[arithmetic_logic_unit.scala 144:29]
    node _T_399 = or(_T_398, _T_367) @[arithmetic_logic_unit.scala 144:29]
    node _T_400 = or(_T_399, _T_368) @[arithmetic_logic_unit.scala 144:29]
    node _T_401 = or(_T_400, _T_369) @[arithmetic_logic_unit.scala 144:29]
    node _T_402 = or(_T_401, _T_370) @[arithmetic_logic_unit.scala 144:29]
    node _T_403 = or(_T_402, _T_371) @[arithmetic_logic_unit.scala 144:29]
    node _T_404 = or(_T_403, _T_372) @[arithmetic_logic_unit.scala 144:29]
    node _T_405 = or(_T_404, _T_373) @[arithmetic_logic_unit.scala 144:29]
    node _T_406 = or(_T_405, _T_374) @[arithmetic_logic_unit.scala 144:29]
    node _T_407 = or(_T_406, _T_375) @[arithmetic_logic_unit.scala 144:29]
    node _T_408 = or(_T_407, _T_376) @[arithmetic_logic_unit.scala 144:29]
    node _T_409 = or(_T_408, _T_377) @[arithmetic_logic_unit.scala 144:29]
    node _T_410 = or(_T_409, _T_378) @[arithmetic_logic_unit.scala 144:29]
    node _T_411 = or(_T_410, _T_379) @[arithmetic_logic_unit.scala 144:29]
    node _T_412 = or(_T_411, _T_380) @[arithmetic_logic_unit.scala 144:29]
    node _T_413 = or(_T_412, _T_381) @[arithmetic_logic_unit.scala 144:29]
    node _T_414 = or(_T_413, _T_382) @[arithmetic_logic_unit.scala 144:29]
    node _T_415 = or(_T_414, _T_383) @[arithmetic_logic_unit.scala 144:29]
    node _T_416 = or(_T_415, _T_384) @[arithmetic_logic_unit.scala 144:29]
    when _T_416 : @[arithmetic_logic_unit.scala 144:40]
      io.result <= result_unsigned @[arithmetic_logic_unit.scala 145:15]
      skip @[arithmetic_logic_unit.scala 144:40]
    else : @[arithmetic_logic_unit.scala 146:47]
      node _T_417 = eq(signed_insts[0], op) @[arithmetic_logic_unit.scala 146:39]
      node _T_418 = eq(signed_insts[1], op) @[arithmetic_logic_unit.scala 146:39]
      node _T_419 = eq(signed_insts[2], op) @[arithmetic_logic_unit.scala 146:39]
      node _T_420 = eq(signed_insts[3], op) @[arithmetic_logic_unit.scala 146:39]
      node _T_421 = eq(signed_insts[4], op) @[arithmetic_logic_unit.scala 146:39]
      node _T_423 = or(UInt<1>("h00"), _T_417) @[arithmetic_logic_unit.scala 146:35]
      node _T_424 = or(_T_423, _T_418) @[arithmetic_logic_unit.scala 146:35]
      node _T_425 = or(_T_424, _T_419) @[arithmetic_logic_unit.scala 146:35]
      node _T_426 = or(_T_425, _T_420) @[arithmetic_logic_unit.scala 146:35]
      node _T_427 = or(_T_426, _T_421) @[arithmetic_logic_unit.scala 146:35]
      when _T_427 : @[arithmetic_logic_unit.scala 146:47]
        node _T_428 = asUInt(result_signed) @[arithmetic_logic_unit.scala 147:38]
        io.result <= _T_428 @[arithmetic_logic_unit.scala 147:15]
        skip @[arithmetic_logic_unit.scala 146:47]
      else : @[arithmetic_logic_unit.scala 148:44]
        node _T_429 = eq(float_insts[0], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_430 = eq(float_insts[1], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_431 = eq(float_insts[2], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_432 = eq(float_insts[3], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_433 = eq(float_insts[4], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_434 = eq(float_insts[5], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_435 = eq(float_insts[6], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_436 = eq(float_insts[7], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_437 = eq(float_insts[8], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_438 = eq(float_insts[9], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_439 = eq(float_insts[10], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_440 = eq(float_insts[11], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_441 = eq(float_insts[12], op) @[arithmetic_logic_unit.scala 148:36]
        node _T_443 = or(UInt<1>("h00"), _T_429) @[arithmetic_logic_unit.scala 148:33]
        node _T_444 = or(_T_443, _T_430) @[arithmetic_logic_unit.scala 148:33]
        node _T_445 = or(_T_444, _T_431) @[arithmetic_logic_unit.scala 148:33]
        node _T_446 = or(_T_445, _T_432) @[arithmetic_logic_unit.scala 148:33]
        node _T_447 = or(_T_446, _T_433) @[arithmetic_logic_unit.scala 148:33]
        node _T_448 = or(_T_447, _T_434) @[arithmetic_logic_unit.scala 148:33]
        node _T_449 = or(_T_448, _T_435) @[arithmetic_logic_unit.scala 148:33]
        node _T_450 = or(_T_449, _T_436) @[arithmetic_logic_unit.scala 148:33]
        node _T_451 = or(_T_450, _T_437) @[arithmetic_logic_unit.scala 148:33]
        node _T_452 = or(_T_451, _T_438) @[arithmetic_logic_unit.scala 148:33]
        node _T_453 = or(_T_452, _T_439) @[arithmetic_logic_unit.scala 148:33]
        node _T_454 = or(_T_453, _T_440) @[arithmetic_logic_unit.scala 148:33]
        node _T_455 = or(_T_454, _T_441) @[arithmetic_logic_unit.scala 148:33]
        when _T_455 : @[arithmetic_logic_unit.scala 148:44]
          io.result <= fpResult @[arithmetic_logic_unit.scala 149:15]
          skip @[arithmetic_logic_unit.scala 148:44]
        else : @[arithmetic_logic_unit.scala 150:16]
          io.result <= UInt<1>("h00") @[arithmetic_logic_unit.scala 151:15]
          skip @[arithmetic_logic_unit.scala 150:16]
    node _T_457 = bits(reset, 0, 0) @[arithmetic_logic_unit.scala 154:9]
    node _T_459 = eq(_T_457, UInt<1>("h00")) @[arithmetic_logic_unit.scala 154:9]
    when _T_459 : @[arithmetic_logic_unit.scala 154:9]
      printf(clock, UInt<1>(1), "opcode = %d\n", io.opcode) @[arithmetic_logic_unit.scala 154:9]
      skip @[arithmetic_logic_unit.scala 154:9]
    node _T_460 = bits(reset, 0, 0) @[arithmetic_logic_unit.scala 155:9]
    node _T_462 = eq(_T_460, UInt<1>("h00")) @[arithmetic_logic_unit.scala 155:9]
    when _T_462 : @[arithmetic_logic_unit.scala 155:9]
      printf(clock, UInt<1>(1), "operand 0 = %d\n", io.operands[0]) @[arithmetic_logic_unit.scala 155:9]
      skip @[arithmetic_logic_unit.scala 155:9]
    node _T_463 = bits(reset, 0, 0) @[arithmetic_logic_unit.scala 156:9]
    node _T_465 = eq(_T_463, UInt<1>("h00")) @[arithmetic_logic_unit.scala 156:9]
    when _T_465 : @[arithmetic_logic_unit.scala 156:9]
      printf(clock, UInt<1>(1), "operand 1 = %d\n", io.operands[1]) @[arithmetic_logic_unit.scala 156:9]
      skip @[arithmetic_logic_unit.scala 156:9]
    node _T_466 = bits(reset, 0, 0) @[arithmetic_logic_unit.scala 157:9]
    node _T_468 = eq(_T_466, UInt<1>("h00")) @[arithmetic_logic_unit.scala 157:9]
    when _T_468 : @[arithmetic_logic_unit.scala 157:9]
      printf(clock, UInt<1>(1), "operand 2 = %d\n", io.operands[2]) @[arithmetic_logic_unit.scala 157:9]
      skip @[arithmetic_logic_unit.scala 157:9]
    node _T_469 = bits(reset, 0, 0) @[arithmetic_logic_unit.scala 158:9]
    node _T_471 = eq(_T_469, UInt<1>("h00")) @[arithmetic_logic_unit.scala 158:9]
    when _T_471 : @[arithmetic_logic_unit.scala 158:9]
      printf(clock, UInt<1>(1), "result = %d\n", io.result) @[arithmetic_logic_unit.scala 158:9]
      skip @[arithmetic_logic_unit.scala 158:9]
    node _T_472 = bits(reset, 0, 0) @[arithmetic_logic_unit.scala 159:9]
    node _T_474 = eq(_T_472, UInt<1>("h00")) @[arithmetic_logic_unit.scala 159:9]
    when _T_474 : @[arithmetic_logic_unit.scala 159:9]
      printf(clock, UInt<1>(1), "-----------------------------------\n") @[arithmetic_logic_unit.scala 159:9]
      skip @[arithmetic_logic_unit.scala 159:9]
    
  module single_port_ram : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip read_enable : UInt<1>, flip write_enable : UInt<1>, flip index : UInt<10>, read_data : UInt<32>, flip write_data : UInt<32>}
    
    smem mem : UInt<32>[1024] @[single_port_ram.scala 17:24]
    when io.write_enable : @[single_port_ram.scala 19:24]
      write mport _T_17 = mem[io.index], clock
      _T_17 <= io.write_data
      skip @[single_port_ram.scala 19:24]
    wire _T_19 : UInt @[single_port_ram.scala 22:27]
    _T_19 is invalid @[single_port_ram.scala 22:27]
    when io.read_enable : @[single_port_ram.scala 22:27]
      _T_19 <= io.index @[single_port_ram.scala 22:27]
      node _T_21 = or(_T_19, UInt<10>("h00")) @[single_port_ram.scala 22:27]
      node _T_22 = bits(_T_21, 9, 0) @[single_port_ram.scala 22:27]
      read mport _T_23 = mem[_T_22], clock @[single_port_ram.scala 22:27]
      skip @[single_port_ram.scala 22:27]
    io.read_data <= _T_23 @[single_port_ram.scala 22:16]
    
  module scratchpad : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip opcode : UInt<6>, hostInterface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, flip operand0 : UInt<32>, flip operand1 : UInt<32>, result : UInt<32>}
    
    wire write_data : UInt<32> @[scratchpad.scala 20:24]
    wire read_enable : UInt<1> @[scratchpad.scala 21:25]
    wire write_enable : UInt<1> @[scratchpad.scala 22:26]
    wire index : UInt<10> @[scratchpad.scala 23:19]
    inst spram of single_port_ram @[scratchpad.scala 25:21]
    spram.clock <= clock
    spram.reset <= reset
    spram.io.read_enable <= read_enable @[scratchpad.scala 26:24]
    spram.io.write_enable <= write_enable @[scratchpad.scala 27:25]
    spram.io.index <= index @[scratchpad.scala 28:18]
    io.result <= spram.io.read_data @[scratchpad.scala 29:13]
    spram.io.write_data <= write_data @[scratchpad.scala 30:23]
    io.hostInterface.read_data <= UInt<1>("h00") @[scratchpad.scala 33:30]
    io.hostInterface.read_ack <= io.hostInterface.read_req @[scratchpad.scala 34:29]
    io.hostInterface.write_ack <= io.hostInterface.write_req @[scratchpad.scala 37:30]
    node _T_34 = mux(io.hostInterface.write_req, io.hostInterface.write_data, io.operand0) @[scratchpad.scala 40:20]
    write_data <= _T_34 @[scratchpad.scala 40:14]
    when io.hostInterface.read_req : @[scratchpad.scala 42:34]
      read_enable <= UInt<1>("h00") @[scratchpad.scala 43:17]
      write_enable <= UInt<1>("h00") @[scratchpad.scala 44:18]
      index <= UInt<1>("h00") @[scratchpad.scala 45:11]
      skip @[scratchpad.scala 42:34]
    else : @[scratchpad.scala 46:41]
      when io.hostInterface.write_req : @[scratchpad.scala 46:41]
        read_enable <= UInt<1>("h00") @[scratchpad.scala 47:17]
        write_enable <= UInt<1>("h01") @[scratchpad.scala 48:18]
        node _T_40 = bits(io.hostInterface.write_index, 9, 0) @[scratchpad.scala 49:42]
        index <= _T_40 @[scratchpad.scala 49:11]
        skip @[scratchpad.scala 46:41]
      else : @[scratchpad.scala 50:14]
        node _T_42 = eq(io.opcode, UInt<6>("h028")) @[scratchpad.scala 51:20]
        when _T_42 : @[scratchpad.scala 51:37]
          read_enable <= UInt<1>("h01") @[scratchpad.scala 52:19]
          write_enable <= UInt<1>("h00") @[scratchpad.scala 53:20]
          node _T_45 = bits(io.operand0, 9, 0) @[scratchpad.scala 54:27]
          index <= _T_45 @[scratchpad.scala 54:13]
          skip @[scratchpad.scala 51:37]
        else : @[scratchpad.scala 55:43]
          node _T_47 = eq(io.opcode, UInt<6>("h029")) @[scratchpad.scala 55:26]
          when _T_47 : @[scratchpad.scala 55:43]
            read_enable <= UInt<1>("h00") @[scratchpad.scala 56:19]
            write_enable <= UInt<1>("h01") @[scratchpad.scala 57:20]
            node _T_50 = bits(io.operand1, 9, 0) @[scratchpad.scala 58:27]
            index <= _T_50 @[scratchpad.scala 58:13]
            skip @[scratchpad.scala 55:43]
          else : @[scratchpad.scala 59:16]
            read_enable <= UInt<1>("h00") @[scratchpad.scala 60:19]
            write_enable <= UInt<1>("h00") @[scratchpad.scala 61:20]
            index <= UInt<1>("h00") @[scratchpad.scala 62:13]
            skip @[scratchpad.scala 59:16]
        skip @[scratchpad.scala 50:14]
    
  module zero_datapath_instruction_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}
    
    io.vi <= UInt<1>("h00") @[instruction_t.scala 130:9]
    io.op <= UInt<1>("h00") @[instruction_t.scala 131:9]
    io.st <= UInt<1>("h00") @[instruction_t.scala 132:9]
    io.si <= UInt<1>("h00") @[instruction_t.scala 133:9]
    io.dt <= UInt<1>("h00") @[instruction_t.scala 134:9]
    io.di <= UInt<1>("h00") @[instruction_t.scala 135:9]
    io.oci <= UInt<1>("h00") @[instruction_t.scala 136:10]
    io.oct <= UInt<1>("h00") @[instruction_t.scala 137:10]
    io.icd <= UInt<1>("h00") @[instruction_t.scala 138:10]
    io.pum <= UInt<1>("h00") @[instruction_t.scala 139:10]
    io.immediate <= UInt<1>("h00") @[instruction_t.scala 140:16]
    
  module integer_retirement_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dx1_instruction_retiring_stage : UInt<3>, flip dx1_functional_unit : UInt<3>, flip x2_instruction_retiring_stage : UInt<3>, flip x2_functional_unit : UInt<3>, flip dx1_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}, flip x2_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}, flip alu_result : UInt<32>, flip imu_result : UInt<32>, flip sm_result : UInt<32>, retiring_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}, datapath_result : UInt<32>}
    
    node _T_28 = eq(io.x2_instruction_retiring_stage, UInt<2>("h02")) @[integer_retirement_unit.scala 23:41]
    when _T_28 : @[integer_retirement_unit.scala 23:49]
      io.retiring_datapath_instruction.immediate <= io.x2_datapath_instruction.immediate @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.pum <= io.x2_datapath_instruction.pum @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.icd <= io.x2_datapath_instruction.icd @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.oct <= io.x2_datapath_instruction.oct @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.oci <= io.x2_datapath_instruction.oci @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.di <= io.x2_datapath_instruction.di @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.dt <= io.x2_datapath_instruction.dt @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.si <= io.x2_datapath_instruction.si @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.st <= io.x2_datapath_instruction.st @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.op <= io.x2_datapath_instruction.op @[integer_retirement_unit.scala 24:38]
      io.retiring_datapath_instruction.vi <= io.x2_datapath_instruction.vi @[integer_retirement_unit.scala 24:38]
      io.datapath_result <= io.alu_result @[integer_retirement_unit.scala 25:24]
      node _T_30 = eq(UInt<1>("h01"), io.x2_functional_unit) @[Conditional.scala 37:30]
      when _T_30 : @[Conditional.scala 40:58]
        io.datapath_result <= io.sm_result @[integer_retirement_unit.scala 27:35]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_32 = eq(UInt<2>("h02"), io.x2_functional_unit) @[Conditional.scala 37:30]
        when _T_32 : @[Conditional.scala 39:67]
          io.datapath_result <= io.imu_result @[integer_retirement_unit.scala 28:36]
          skip @[Conditional.scala 39:67]
      skip @[integer_retirement_unit.scala 23:49]
    else : @[integer_retirement_unit.scala 30:56]
      node _T_34 = eq(io.dx1_instruction_retiring_stage, UInt<1>("h01")) @[integer_retirement_unit.scala 30:48]
      when _T_34 : @[integer_retirement_unit.scala 30:56]
        io.retiring_datapath_instruction.immediate <= io.dx1_datapath_instruction.immediate @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.pum <= io.dx1_datapath_instruction.pum @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.icd <= io.dx1_datapath_instruction.icd @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.oct <= io.dx1_datapath_instruction.oct @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.oci <= io.dx1_datapath_instruction.oci @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.di <= io.dx1_datapath_instruction.di @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.dt <= io.dx1_datapath_instruction.dt @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.si <= io.dx1_datapath_instruction.si @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.st <= io.dx1_datapath_instruction.st @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.op <= io.dx1_datapath_instruction.op @[integer_retirement_unit.scala 31:38]
        io.retiring_datapath_instruction.vi <= io.dx1_datapath_instruction.vi @[integer_retirement_unit.scala 31:38]
        io.datapath_result <= io.alu_result @[integer_retirement_unit.scala 32:24]
        skip @[integer_retirement_unit.scala 30:56]
      else : @[integer_retirement_unit.scala 33:14]
        inst zero_datapath_instruction of zero_datapath_instruction_1 @[integer_retirement_unit.scala 34:47]
        zero_datapath_instruction.clock <= clock
        zero_datapath_instruction.reset <= reset
        io.retiring_datapath_instruction.immediate <= zero_datapath_instruction.io.immediate @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.pum <= zero_datapath_instruction.io.pum @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.icd <= zero_datapath_instruction.io.icd @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.oct <= zero_datapath_instruction.io.oct @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.oci <= zero_datapath_instruction.io.oci @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.di <= zero_datapath_instruction.io.di @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.dt <= zero_datapath_instruction.io.dt @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.si <= zero_datapath_instruction.io.si @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.st <= zero_datapath_instruction.io.st @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.op <= zero_datapath_instruction.io.op @[integer_retirement_unit.scala 34:38]
        io.retiring_datapath_instruction.vi <= zero_datapath_instruction.io.vi @[integer_retirement_unit.scala 34:38]
        io.datapath_result <= io.alu_result @[integer_retirement_unit.scala 35:24]
        skip @[integer_retirement_unit.scala 33:14]
    
  module destination_routing_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip datapath_result : UInt<32>, flip dt : UInt<2>, flip di : UInt<3>, flip oci : UInt<4>, register_write_enable : UInt<1>, register_write_index : UInt<3>, register_write_data : UInt<32>, output_channel_data : UInt<32>[4]}
    
    node _T_37 = bits(io.oci, 0, 0) @[destination_routing_unit.scala 20:16]
    when _T_37 : @[destination_routing_unit.scala 20:20]
      io.output_channel_data[0] <= io.datapath_result @[destination_routing_unit.scala 21:33]
      skip @[destination_routing_unit.scala 20:20]
    else : @[destination_routing_unit.scala 22:16]
      io.output_channel_data[0] <= UInt<1>("h00") @[destination_routing_unit.scala 23:33]
      skip @[destination_routing_unit.scala 22:16]
    node _T_39 = bits(io.oci, 1, 1) @[destination_routing_unit.scala 20:16]
    when _T_39 : @[destination_routing_unit.scala 20:20]
      io.output_channel_data[1] <= io.datapath_result @[destination_routing_unit.scala 21:33]
      skip @[destination_routing_unit.scala 20:20]
    else : @[destination_routing_unit.scala 22:16]
      io.output_channel_data[1] <= UInt<1>("h00") @[destination_routing_unit.scala 23:33]
      skip @[destination_routing_unit.scala 22:16]
    node _T_41 = bits(io.oci, 2, 2) @[destination_routing_unit.scala 20:16]
    when _T_41 : @[destination_routing_unit.scala 20:20]
      io.output_channel_data[2] <= io.datapath_result @[destination_routing_unit.scala 21:33]
      skip @[destination_routing_unit.scala 20:20]
    else : @[destination_routing_unit.scala 22:16]
      io.output_channel_data[2] <= UInt<1>("h00") @[destination_routing_unit.scala 23:33]
      skip @[destination_routing_unit.scala 22:16]
    node _T_43 = bits(io.oci, 3, 3) @[destination_routing_unit.scala 20:16]
    when _T_43 : @[destination_routing_unit.scala 20:20]
      io.output_channel_data[3] <= io.datapath_result @[destination_routing_unit.scala 21:33]
      skip @[destination_routing_unit.scala 20:20]
    else : @[destination_routing_unit.scala 22:16]
      io.output_channel_data[3] <= UInt<1>("h00") @[destination_routing_unit.scala 23:33]
      skip @[destination_routing_unit.scala 22:16]
    node _T_46 = eq(io.dt, UInt<2>("h02")) @[destination_routing_unit.scala 26:15]
    when _T_46 : @[destination_routing_unit.scala 26:51]
      io.register_write_data <= io.datapath_result @[destination_routing_unit.scala 27:28]
      io.register_write_index <= io.di @[destination_routing_unit.scala 28:29]
      io.register_write_enable <= UInt<1>("h01") @[destination_routing_unit.scala 29:30]
      skip @[destination_routing_unit.scala 26:51]
    else : @[destination_routing_unit.scala 30:14]
      io.register_write_data <= UInt<1>("h00") @[destination_routing_unit.scala 31:28]
      io.register_write_index <= UInt<1>("h00") @[destination_routing_unit.scala 32:29]
      io.register_write_enable <= UInt<1>("h00") @[destination_routing_unit.scala 33:30]
      skip @[destination_routing_unit.scala 30:14]
    
  module dequeueing_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip icd : UInt<4>, dequeue_signals : UInt<4>}
    
    node _T_12 = mux(io.enable, io.icd, UInt<1>("h00")) @[dequeueing_unit.scala 12:28]
    io.dequeue_signals <= _T_12 @[dequeueing_unit.scala 12:22]
    
  module enqueueing_unit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip oci : UInt<4>, flip oct : UInt<2>, enqueue_signals : UInt<4>, outout_channel_tags : UInt<2>[4]}
    
    node _T_32 = mux(io.enable, io.oci, UInt<1>("h00")) @[enqueueing_unit.scala 14:28]
    io.enqueue_signals <= _T_32 @[enqueueing_unit.scala 14:22]
    when io.enable : @[enqueueing_unit.scala 15:18]
      node _T_33 = bits(io.enqueue_signals, 0, 0) @[enqueueing_unit.scala 17:58]
      node _T_35 = mux(_T_33, io.oct, UInt<1>("h00")) @[enqueueing_unit.scala 17:39]
      io.outout_channel_tags[0] <= _T_35 @[enqueueing_unit.scala 17:33]
      node _T_36 = bits(io.enqueue_signals, 1, 1) @[enqueueing_unit.scala 17:58]
      node _T_38 = mux(_T_36, io.oct, UInt<1>("h00")) @[enqueueing_unit.scala 17:39]
      io.outout_channel_tags[1] <= _T_38 @[enqueueing_unit.scala 17:33]
      node _T_39 = bits(io.enqueue_signals, 2, 2) @[enqueueing_unit.scala 17:58]
      node _T_41 = mux(_T_39, io.oct, UInt<1>("h00")) @[enqueueing_unit.scala 17:39]
      io.outout_channel_tags[2] <= _T_41 @[enqueueing_unit.scala 17:33]
      node _T_42 = bits(io.enqueue_signals, 3, 3) @[enqueueing_unit.scala 17:58]
      node _T_44 = mux(_T_42, io.oct, UInt<1>("h00")) @[enqueueing_unit.scala 17:39]
      io.outout_channel_tags[3] <= _T_44 @[enqueueing_unit.scala 17:33]
      skip @[enqueueing_unit.scala 15:18]
    else : @[enqueueing_unit.scala 19:14]
      io.outout_channel_tags[0] <= UInt<1>("h00") @[enqueueing_unit.scala 21:33]
      io.outout_channel_tags[1] <= UInt<1>("h00") @[enqueueing_unit.scala 21:33]
      io.outout_channel_tags[2] <= UInt<1>("h00") @[enqueueing_unit.scala 21:33]
      io.outout_channel_tags[3] <= UInt<1>("h00") @[enqueueing_unit.scala 21:33]
      skip @[enqueueing_unit.scala 19:14]
    
  module integer_core : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enable : UInt<1>, flip execute : UInt<1>, halted : UInt<1>, channels_quiescent : UInt<1>, host_interface : {flip read_req : UInt<1>, read_ack : UInt<1>, flip read_index : UInt<30>, read_data : UInt<32>, flip write_req : UInt<1>, write_ack : UInt<1>, flip write_index : UInt<30>, flip write_data : UInt<32>}, input_channel_links : {flip req : UInt<1>, ack : UInt<1>, flip packet : {tag : UInt<2>, data : UInt<32>}}[4], output_channel_links : {flip req : UInt<1>, ack : UInt<1>, packet : {tag : UInt<2>, data : UInt<32>}}[4]}
    
    wire _T_54 : UInt<6>[40] @[Instructions.scala 49:28]
    _T_54[0] <= UInt<1>("h00") @[Instructions.scala 49:28]
    _T_54[1] <= UInt<1>("h01") @[Instructions.scala 49:28]
    _T_54[2] <= UInt<2>("h02") @[Instructions.scala 49:28]
    _T_54[3] <= UInt<2>("h03") @[Instructions.scala 49:28]
    _T_54[4] <= UInt<3>("h04") @[Instructions.scala 49:28]
    _T_54[5] <= UInt<3>("h05") @[Instructions.scala 49:28]
    _T_54[6] <= UInt<3>("h06") @[Instructions.scala 49:28]
    _T_54[7] <= UInt<3>("h07") @[Instructions.scala 49:28]
    _T_54[8] <= UInt<4>("h08") @[Instructions.scala 49:28]
    _T_54[9] <= UInt<4>("h09") @[Instructions.scala 49:28]
    _T_54[10] <= UInt<4>("h0a") @[Instructions.scala 49:28]
    _T_54[11] <= UInt<4>("h0b") @[Instructions.scala 49:28]
    _T_54[12] <= UInt<4>("h0c") @[Instructions.scala 49:28]
    _T_54[13] <= UInt<4>("h0d") @[Instructions.scala 49:28]
    _T_54[14] <= UInt<4>("h0e") @[Instructions.scala 49:28]
    _T_54[15] <= UInt<4>("h0f") @[Instructions.scala 49:28]
    _T_54[16] <= UInt<5>("h010") @[Instructions.scala 49:28]
    _T_54[17] <= UInt<5>("h011") @[Instructions.scala 49:28]
    _T_54[18] <= UInt<5>("h012") @[Instructions.scala 49:28]
    _T_54[19] <= UInt<5>("h013") @[Instructions.scala 49:28]
    _T_54[20] <= UInt<5>("h014") @[Instructions.scala 49:28]
    _T_54[21] <= UInt<5>("h015") @[Instructions.scala 49:28]
    _T_54[22] <= UInt<5>("h016") @[Instructions.scala 49:28]
    _T_54[23] <= UInt<5>("h017") @[Instructions.scala 49:28]
    _T_54[24] <= UInt<5>("h018") @[Instructions.scala 49:28]
    _T_54[25] <= UInt<5>("h019") @[Instructions.scala 49:28]
    _T_54[26] <= UInt<5>("h01a") @[Instructions.scala 49:28]
    _T_54[27] <= UInt<5>("h01b") @[Instructions.scala 49:28]
    _T_54[28] <= UInt<5>("h01c") @[Instructions.scala 49:28]
    _T_54[29] <= UInt<5>("h01d") @[Instructions.scala 49:28]
    _T_54[30] <= UInt<5>("h01e") @[Instructions.scala 49:28]
    _T_54[31] <= UInt<5>("h01f") @[Instructions.scala 49:28]
    _T_54[32] <= UInt<6>("h020") @[Instructions.scala 49:28]
    _T_54[33] <= UInt<6>("h021") @[Instructions.scala 49:28]
    _T_54[34] <= UInt<6>("h022") @[Instructions.scala 49:28]
    _T_54[35] <= UInt<6>("h023") @[Instructions.scala 49:28]
    _T_54[36] <= UInt<6>("h024") @[Instructions.scala 49:28]
    _T_54[37] <= UInt<6>("h025") @[Instructions.scala 49:28]
    _T_54[38] <= UInt<6>("h026") @[Instructions.scala 49:28]
    _T_54[39] <= UInt<6>("h027") @[Instructions.scala 49:28]
    wire _T_102 : UInt<6>[2] @[Instructions.scala 54:33]
    _T_102[0] <= UInt<6>("h028") @[Instructions.scala 54:33]
    _T_102[1] <= UInt<6>("h029") @[Instructions.scala 54:33]
    wire _T_113 : UInt<6>[3] @[Instructions.scala 60:32]
    _T_113[0] <= UInt<6>("h02a") @[Instructions.scala 60:32]
    _T_113[1] <= UInt<6>("h02b") @[Instructions.scala 60:32]
    _T_113[2] <= UInt<6>("h02c") @[Instructions.scala 60:32]
    wire _T_126 : UInt<6>[4] @[Instructions.scala 67:35]
    _T_126[0] <= UInt<6>("h02d") @[Instructions.scala 67:35]
    _T_126[1] <= UInt<6>("h02e") @[Instructions.scala 67:35]
    _T_126[2] <= UInt<6>("h02f") @[Instructions.scala 67:35]
    _T_126[3] <= UInt<6>("h030") @[Instructions.scala 67:35]
    wire _T_150 : UInt<6>[14] @[Instructions.scala 84:34]
    _T_150[0] <= UInt<6>("h031") @[Instructions.scala 84:34]
    _T_150[1] <= UInt<6>("h032") @[Instructions.scala 84:34]
    _T_150[2] <= UInt<6>("h033") @[Instructions.scala 84:34]
    _T_150[3] <= UInt<6>("h034") @[Instructions.scala 84:34]
    _T_150[4] <= UInt<6>("h035") @[Instructions.scala 84:34]
    _T_150[5] <= UInt<6>("h036") @[Instructions.scala 84:34]
    _T_150[6] <= UInt<6>("h037") @[Instructions.scala 84:34]
    _T_150[7] <= UInt<6>("h038") @[Instructions.scala 84:34]
    _T_150[8] <= UInt<6>("h039") @[Instructions.scala 84:34]
    _T_150[9] <= UInt<6>("h03a") @[Instructions.scala 84:34]
    _T_150[10] <= UInt<6>("h03b") @[Instructions.scala 84:34]
    _T_150[11] <= UInt<6>("h03c") @[Instructions.scala 84:34]
    _T_150[12] <= UInt<6>("h03d") @[Instructions.scala 84:34]
    _T_150[13] <= UInt<6>("h03e") @[Instructions.scala 84:34]
    wire _T_175 : UInt<4>[5] @[Instructions.scala 88:29]
    _T_175[0] <= UInt<3>("h05") @[Instructions.scala 88:29]
    _T_175[1] <= UInt<4>("h09") @[Instructions.scala 88:29]
    _T_175[2] <= UInt<4>("h0b") @[Instructions.scala 88:29]
    _T_175[3] <= UInt<4>("h0d") @[Instructions.scala 88:29]
    _T_175[4] <= UInt<4>("h0f") @[Instructions.scala 88:29]
    wire _T_217 : UInt<6>[31] @[Instructions.scala 96:31]
    _T_217[0] <= UInt<1>("h00") @[Instructions.scala 96:31]
    _T_217[1] <= UInt<1>("h01") @[Instructions.scala 96:31]
    _T_217[2] <= UInt<2>("h02") @[Instructions.scala 96:31]
    _T_217[3] <= UInt<2>("h03") @[Instructions.scala 96:31]
    _T_217[4] <= UInt<3>("h04") @[Instructions.scala 96:31]
    _T_217[5] <= UInt<3>("h06") @[Instructions.scala 96:31]
    _T_217[6] <= UInt<3>("h07") @[Instructions.scala 96:31]
    _T_217[7] <= UInt<4>("h08") @[Instructions.scala 96:31]
    _T_217[8] <= UInt<4>("h0a") @[Instructions.scala 96:31]
    _T_217[9] <= UInt<4>("h0c") @[Instructions.scala 96:31]
    _T_217[10] <= UInt<4>("h0e") @[Instructions.scala 96:31]
    _T_217[11] <= UInt<5>("h010") @[Instructions.scala 96:31]
    _T_217[12] <= UInt<5>("h011") @[Instructions.scala 96:31]
    _T_217[13] <= UInt<5>("h012") @[Instructions.scala 96:31]
    _T_217[14] <= UInt<5>("h013") @[Instructions.scala 96:31]
    _T_217[15] <= UInt<5>("h014") @[Instructions.scala 96:31]
    _T_217[16] <= UInt<5>("h015") @[Instructions.scala 96:31]
    _T_217[17] <= UInt<5>("h016") @[Instructions.scala 96:31]
    _T_217[18] <= UInt<5>("h017") @[Instructions.scala 96:31]
    _T_217[19] <= UInt<5>("h018") @[Instructions.scala 96:31]
    _T_217[20] <= UInt<5>("h019") @[Instructions.scala 96:31]
    _T_217[21] <= UInt<5>("h01a") @[Instructions.scala 96:31]
    _T_217[22] <= UInt<5>("h01b") @[Instructions.scala 96:31]
    _T_217[23] <= UInt<5>("h01c") @[Instructions.scala 96:31]
    _T_217[24] <= UInt<6>("h021") @[Instructions.scala 96:31]
    _T_217[25] <= UInt<6>("h022") @[Instructions.scala 96:31]
    _T_217[26] <= UInt<6>("h023") @[Instructions.scala 96:31]
    _T_217[27] <= UInt<6>("h024") @[Instructions.scala 96:31]
    _T_217[28] <= UInt<6>("h025") @[Instructions.scala 96:31]
    _T_217[29] <= UInt<6>("h026") @[Instructions.scala 96:31]
    _T_217[30] <= UInt<6>("h027") @[Instructions.scala 96:31]
    wire _T_258 : UInt<6>[4] @[Instructions.scala 99:28]
    _T_258[0] <= UInt<6>("h02d") @[Instructions.scala 99:28]
    _T_258[1] <= UInt<6>("h02e") @[Instructions.scala 99:28]
    _T_258[2] <= UInt<6>("h02f") @[Instructions.scala 99:28]
    _T_258[3] <= UInt<6>("h030") @[Instructions.scala 99:28]
    wire _T_281 : UInt<6>[13] @[Instructions.scala 105:28]
    _T_281[0] <= UInt<6>("h031") @[Instructions.scala 105:28]
    _T_281[1] <= UInt<6>("h032") @[Instructions.scala 105:28]
    _T_281[2] <= UInt<6>("h033") @[Instructions.scala 105:28]
    _T_281[3] <= UInt<6>("h035") @[Instructions.scala 105:28]
    _T_281[4] <= UInt<6>("h036") @[Instructions.scala 105:28]
    _T_281[5] <= UInt<6>("h037") @[Instructions.scala 105:28]
    _T_281[6] <= UInt<6>("h038") @[Instructions.scala 105:28]
    _T_281[7] <= UInt<6>("h039") @[Instructions.scala 105:28]
    _T_281[8] <= UInt<6>("h03a") @[Instructions.scala 105:28]
    _T_281[9] <= UInt<6>("h03b") @[Instructions.scala 105:28]
    _T_281[10] <= UInt<6>("h03c") @[Instructions.scala 105:28]
    _T_281[11] <= UInt<6>("h03d") @[Instructions.scala 105:28]
    _T_281[12] <= UInt<6>("h03e") @[Instructions.scala 105:28]
    inst unused_host_interface of unused_host_interface @[integer_core.scala 33:37]
    unused_host_interface.clock <= clock
    unused_host_interface.reset <= reset
    wire moniter_interface : {read_req : UInt<1>, read_ack : UInt<1>, read_index : UInt<30>, read_data : UInt<32>, write_req : UInt<1>, write_ack : UInt<1>, write_index : UInt<30>, write_data : UInt<32>} @[integer_core.scala 34:31]
    wire performance_interface : {read_req : UInt<1>, read_ack : UInt<1>, read_index : UInt<30>, read_data : UInt<32>, write_req : UInt<1>, write_ack : UInt<1>, write_index : UInt<30>, write_data : UInt<32>} @[integer_core.scala 35:35]
    wire register_file_interface : {read_req : UInt<1>, read_ack : UInt<1>, read_index : UInt<30>, read_data : UInt<32>, write_req : UInt<1>, write_ack : UInt<1>, write_index : UInt<30>, write_data : UInt<32>} @[integer_core.scala 36:37]
    wire instruction_memory_interface : {read_req : UInt<1>, read_ack : UInt<1>, read_index : UInt<30>, read_data : UInt<32>, write_req : UInt<1>, write_ack : UInt<1>, write_index : UInt<30>, write_data : UInt<32>} @[integer_core.scala 37:42]
    wire scratchpad_interface : {read_req : UInt<1>, read_ack : UInt<1>, read_index : UInt<30>, read_data : UInt<32>, write_req : UInt<1>, write_ack : UInt<1>, write_index : UInt<30>, write_data : UInt<32>} @[integer_core.scala 38:34]
    inst input_channel_buffer of input_channel_buffer @[integer_core.scala 41:11]
    input_channel_buffer.clock <= clock
    input_channel_buffer.reset <= reset
    inst input_channel_buffer_1 of input_channel_buffer_1 @[integer_core.scala 41:11]
    input_channel_buffer_1.clock <= clock
    input_channel_buffer_1.reset <= reset
    inst input_channel_buffer_2 of input_channel_buffer_2 @[integer_core.scala 41:11]
    input_channel_buffer_2.clock <= clock
    input_channel_buffer_2.reset <= reset
    inst input_channel_buffer_3 of input_channel_buffer_3 @[integer_core.scala 41:11]
    input_channel_buffer_3.clock <= clock
    input_channel_buffer_3.reset <= reset
    inst output_channel_buffer of output_channel_buffer @[integer_core.scala 44:11]
    output_channel_buffer.clock <= clock
    output_channel_buffer.reset <= reset
    inst output_channel_buffer_1 of output_channel_buffer_1 @[integer_core.scala 44:11]
    output_channel_buffer_1.clock <= clock
    output_channel_buffer_1.reset <= reset
    inst output_channel_buffer_2 of output_channel_buffer_2 @[integer_core.scala 44:11]
    output_channel_buffer_2.clock <= clock
    output_channel_buffer_2.reset <= reset
    inst output_channel_buffer_3 of output_channel_buffer_3 @[integer_core.scala 44:11]
    output_channel_buffer_3.clock <= clock
    output_channel_buffer_3.reset <= reset
    wire input_channels : {pack : {tag : UInt<2>, data : UInt<32>}, next_pack : {tag : UInt<2>, data : UInt<32>}, dequeue : UInt<1>, empty : UInt<1>, count : UInt<2>}[4] @[integer_core.scala 48:28]
    wire output_channels : {pack : {tag : UInt<2>, data : UInt<32>}, enqueue : UInt<1>, full : UInt<1>, count : UInt<2>}[4] @[integer_core.scala 49:29]
    input_channel_buffer.io.enable <= io.enable @[integer_core.scala 52:44]
    input_channels[0].count <= input_channel_buffer.io.out.count @[integer_core.scala 53:23]
    input_channels[0].empty <= input_channel_buffer.io.out.empty @[integer_core.scala 53:23]
    input_channel_buffer.io.out.dequeue <= input_channels[0].dequeue @[integer_core.scala 53:23]
    input_channels[0].next_pack.data <= input_channel_buffer.io.out.next_pack.data @[integer_core.scala 53:23]
    input_channels[0].next_pack.tag <= input_channel_buffer.io.out.next_pack.tag @[integer_core.scala 53:23]
    input_channels[0].pack.data <= input_channel_buffer.io.out.pack.data @[integer_core.scala 53:23]
    input_channels[0].pack.tag <= input_channel_buffer.io.out.pack.tag @[integer_core.scala 53:23]
    input_channel_buffer.io.in.packet.data <= io.input_channel_links[0].packet.data @[integer_core.scala 54:40]
    input_channel_buffer.io.in.packet.tag <= io.input_channel_links[0].packet.tag @[integer_core.scala 54:40]
    io.input_channel_links[0].ack <= input_channel_buffer.io.in.ack @[integer_core.scala 54:40]
    input_channel_buffer.io.in.req <= io.input_channel_links[0].req @[integer_core.scala 54:40]
    input_channel_buffer_1.io.enable <= io.enable @[integer_core.scala 52:44]
    input_channels[1].count <= input_channel_buffer_1.io.out.count @[integer_core.scala 53:23]
    input_channels[1].empty <= input_channel_buffer_1.io.out.empty @[integer_core.scala 53:23]
    input_channel_buffer_1.io.out.dequeue <= input_channels[1].dequeue @[integer_core.scala 53:23]
    input_channels[1].next_pack.data <= input_channel_buffer_1.io.out.next_pack.data @[integer_core.scala 53:23]
    input_channels[1].next_pack.tag <= input_channel_buffer_1.io.out.next_pack.tag @[integer_core.scala 53:23]
    input_channels[1].pack.data <= input_channel_buffer_1.io.out.pack.data @[integer_core.scala 53:23]
    input_channels[1].pack.tag <= input_channel_buffer_1.io.out.pack.tag @[integer_core.scala 53:23]
    input_channel_buffer_1.io.in.packet.data <= io.input_channel_links[1].packet.data @[integer_core.scala 54:40]
    input_channel_buffer_1.io.in.packet.tag <= io.input_channel_links[1].packet.tag @[integer_core.scala 54:40]
    io.input_channel_links[1].ack <= input_channel_buffer_1.io.in.ack @[integer_core.scala 54:40]
    input_channel_buffer_1.io.in.req <= io.input_channel_links[1].req @[integer_core.scala 54:40]
    input_channel_buffer_2.io.enable <= io.enable @[integer_core.scala 52:44]
    input_channels[2].count <= input_channel_buffer_2.io.out.count @[integer_core.scala 53:23]
    input_channels[2].empty <= input_channel_buffer_2.io.out.empty @[integer_core.scala 53:23]
    input_channel_buffer_2.io.out.dequeue <= input_channels[2].dequeue @[integer_core.scala 53:23]
    input_channels[2].next_pack.data <= input_channel_buffer_2.io.out.next_pack.data @[integer_core.scala 53:23]
    input_channels[2].next_pack.tag <= input_channel_buffer_2.io.out.next_pack.tag @[integer_core.scala 53:23]
    input_channels[2].pack.data <= input_channel_buffer_2.io.out.pack.data @[integer_core.scala 53:23]
    input_channels[2].pack.tag <= input_channel_buffer_2.io.out.pack.tag @[integer_core.scala 53:23]
    input_channel_buffer_2.io.in.packet.data <= io.input_channel_links[2].packet.data @[integer_core.scala 54:40]
    input_channel_buffer_2.io.in.packet.tag <= io.input_channel_links[2].packet.tag @[integer_core.scala 54:40]
    io.input_channel_links[2].ack <= input_channel_buffer_2.io.in.ack @[integer_core.scala 54:40]
    input_channel_buffer_2.io.in.req <= io.input_channel_links[2].req @[integer_core.scala 54:40]
    input_channel_buffer_3.io.enable <= io.enable @[integer_core.scala 52:44]
    input_channels[3].count <= input_channel_buffer_3.io.out.count @[integer_core.scala 53:23]
    input_channels[3].empty <= input_channel_buffer_3.io.out.empty @[integer_core.scala 53:23]
    input_channel_buffer_3.io.out.dequeue <= input_channels[3].dequeue @[integer_core.scala 53:23]
    input_channels[3].next_pack.data <= input_channel_buffer_3.io.out.next_pack.data @[integer_core.scala 53:23]
    input_channels[3].next_pack.tag <= input_channel_buffer_3.io.out.next_pack.tag @[integer_core.scala 53:23]
    input_channels[3].pack.data <= input_channel_buffer_3.io.out.pack.data @[integer_core.scala 53:23]
    input_channels[3].pack.tag <= input_channel_buffer_3.io.out.pack.tag @[integer_core.scala 53:23]
    input_channel_buffer_3.io.in.packet.data <= io.input_channel_links[3].packet.data @[integer_core.scala 54:40]
    input_channel_buffer_3.io.in.packet.tag <= io.input_channel_links[3].packet.tag @[integer_core.scala 54:40]
    io.input_channel_links[3].ack <= input_channel_buffer_3.io.in.ack @[integer_core.scala 54:40]
    input_channel_buffer_3.io.in.req <= io.input_channel_links[3].req @[integer_core.scala 54:40]
    output_channel_buffer.io.enable <= io.enable @[integer_core.scala 58:45]
    output_channels[0].count <= output_channel_buffer.io.in.count @[integer_core.scala 59:41]
    output_channels[0].full <= output_channel_buffer.io.in.full @[integer_core.scala 59:41]
    output_channel_buffer.io.in.enqueue <= output_channels[0].enqueue @[integer_core.scala 59:41]
    output_channel_buffer.io.in.pack.data <= output_channels[0].pack.data @[integer_core.scala 59:41]
    output_channel_buffer.io.in.pack.tag <= output_channels[0].pack.tag @[integer_core.scala 59:41]
    io.output_channel_links[0].packet.data <= output_channel_buffer.io.out.packet.data @[integer_core.scala 60:32]
    io.output_channel_links[0].packet.tag <= output_channel_buffer.io.out.packet.tag @[integer_core.scala 60:32]
    io.output_channel_links[0].ack <= output_channel_buffer.io.out.ack @[integer_core.scala 60:32]
    output_channel_buffer.io.out.req <= io.output_channel_links[0].req @[integer_core.scala 60:32]
    output_channel_buffer_1.io.enable <= io.enable @[integer_core.scala 58:45]
    output_channels[1].count <= output_channel_buffer_1.io.in.count @[integer_core.scala 59:41]
    output_channels[1].full <= output_channel_buffer_1.io.in.full @[integer_core.scala 59:41]
    output_channel_buffer_1.io.in.enqueue <= output_channels[1].enqueue @[integer_core.scala 59:41]
    output_channel_buffer_1.io.in.pack.data <= output_channels[1].pack.data @[integer_core.scala 59:41]
    output_channel_buffer_1.io.in.pack.tag <= output_channels[1].pack.tag @[integer_core.scala 59:41]
    io.output_channel_links[1].packet.data <= output_channel_buffer_1.io.out.packet.data @[integer_core.scala 60:32]
    io.output_channel_links[1].packet.tag <= output_channel_buffer_1.io.out.packet.tag @[integer_core.scala 60:32]
    io.output_channel_links[1].ack <= output_channel_buffer_1.io.out.ack @[integer_core.scala 60:32]
    output_channel_buffer_1.io.out.req <= io.output_channel_links[1].req @[integer_core.scala 60:32]
    output_channel_buffer_2.io.enable <= io.enable @[integer_core.scala 58:45]
    output_channels[2].count <= output_channel_buffer_2.io.in.count @[integer_core.scala 59:41]
    output_channels[2].full <= output_channel_buffer_2.io.in.full @[integer_core.scala 59:41]
    output_channel_buffer_2.io.in.enqueue <= output_channels[2].enqueue @[integer_core.scala 59:41]
    output_channel_buffer_2.io.in.pack.data <= output_channels[2].pack.data @[integer_core.scala 59:41]
    output_channel_buffer_2.io.in.pack.tag <= output_channels[2].pack.tag @[integer_core.scala 59:41]
    io.output_channel_links[2].packet.data <= output_channel_buffer_2.io.out.packet.data @[integer_core.scala 60:32]
    io.output_channel_links[2].packet.tag <= output_channel_buffer_2.io.out.packet.tag @[integer_core.scala 60:32]
    io.output_channel_links[2].ack <= output_channel_buffer_2.io.out.ack @[integer_core.scala 60:32]
    output_channel_buffer_2.io.out.req <= io.output_channel_links[2].req @[integer_core.scala 60:32]
    output_channel_buffer_3.io.enable <= io.enable @[integer_core.scala 58:45]
    output_channels[3].count <= output_channel_buffer_3.io.in.count @[integer_core.scala 59:41]
    output_channels[3].full <= output_channel_buffer_3.io.in.full @[integer_core.scala 59:41]
    output_channel_buffer_3.io.in.enqueue <= output_channels[3].enqueue @[integer_core.scala 59:41]
    output_channel_buffer_3.io.in.pack.data <= output_channels[3].pack.data @[integer_core.scala 59:41]
    output_channel_buffer_3.io.in.pack.tag <= output_channels[3].pack.tag @[integer_core.scala 59:41]
    io.output_channel_links[3].packet.data <= output_channel_buffer_3.io.out.packet.data @[integer_core.scala 60:32]
    io.output_channel_links[3].packet.tag <= output_channel_buffer_3.io.out.packet.tag @[integer_core.scala 60:32]
    io.output_channel_links[3].ack <= output_channel_buffer_3.io.out.ack @[integer_core.scala 60:32]
    output_channel_buffer_3.io.out.req <= io.output_channel_links[3].req @[integer_core.scala 60:32]
    wire halted : UInt<1> @[integer_core.scala 64:28]
    wire execute : UInt<1> @[integer_core.scala 64:28]
    execute <= io.execute @[integer_core.scala 64:45]
    io.halted <= halted @[integer_core.scala 64:69]
    wire internal_reset : UInt<1> @[integer_core.scala 66:9]
    wire internal_enable : UInt<1> @[integer_core.scala 66:9]
    wire triggered_instruction_valid : UInt<1> @[integer_core.scala 66:9]
    wire hazard : UInt<1> @[integer_core.scala 66:9]
    wire control_hazard : UInt<1> @[integer_core.scala 66:9]
    wire collision : UInt<1> @[integer_core.scala 66:9]
    wire predicates : UInt<8> @[integer_core.scala 67:24]
    wire triggers : {vi : UInt<1>, ptm : UInt<16>, ici : UInt<6>, ictb : UInt<2>, ictv : UInt<4>, oci : UInt<2>}[16] @[integer_core.scala 68:22]
    wire trigger_instruction_index : UInt<4> @[integer_core.scala 69:39]
    wire triggered_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>} @[integer_core.scala 72:9]
    wire hazard_free_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>} @[integer_core.scala 72:9]
    wire potentially_overridden_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>} @[integer_core.scala 72:9]
    wire retiring_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>} @[integer_core.scala 72:9]
    wire updated_input_channel_empty_status : UInt<4> @[integer_core.scala 73:48]
    wire updated_output_channel_full_status : UInt<4> @[integer_core.scala 74:48]
    wire input_channel_resolved_tags : UInt<2>[4] @[integer_core.scala 75:41]
    inst zero_datapath_instruction of zero_datapath_instruction @[integer_core.scala 79:41]
    zero_datapath_instruction.clock <= clock
    zero_datapath_instruction.reset <= reset
    wire register_read_index : UInt<3>[3] @[integer_core.scala 81:33]
    wire register_write_index : UInt<3> @[integer_core.scala 82:34]
    wire register_write_enable : UInt<1> @[integer_core.scala 83:35]
    wire registers_read_data : UInt<32>[3] @[integer_core.scala 84:68]
    wire pre_ofu_operands : UInt<32>[3] @[integer_core.scala 84:68]
    wire post_ofu_operands : UInt<32>[3] @[integer_core.scala 84:68]
    wire register_write_data : UInt<32> @[integer_core.scala 85:81]
    wire alu_result : UInt<32> @[integer_core.scala 85:81]
    wire sm_result : UInt<32> @[integer_core.scala 85:81]
    wire imu_result : UInt<32> @[integer_core.scala 85:81]
    wire datapath_result : UInt<32> @[integer_core.scala 85:81]
    wire trigger_override : UInt<1> @[integer_core.scala 88:81]
    wire predicate_prediction_hit : UInt<1> @[integer_core.scala 88:81]
    wire predicate_prediction_miss : UInt<1> @[integer_core.scala 88:81]
    trigger_override <= UInt<1>("h00") @[integer_core.scala 89:19]
    predicate_prediction_hit <= UInt<1>("h00") @[integer_core.scala 89:54]
    predicate_prediction_miss <= UInt<1>("h00") @[integer_core.scala 89:91]
    reg dx1_instruction_retiring_stage : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[integer_core.scala 92:78]
    reg x2_instruction_retiring_stage : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[integer_core.scala 92:78]
    reg dx1_functional_unit : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[integer_core.scala 93:56]
    reg x2_functional_unit : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[integer_core.scala 93:56]
    reg dx1_triggered_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}, clock with : (reset => (reset, zero_datapath_instruction.io)) @[integer_core.scala 94:86]
    reg x2_triggered_datapath_instruction : {vi : UInt<1>, op : UInt<6>, st : UInt<6>, si : UInt<9>, dt : UInt<2>, di : UInt<3>, oci : UInt<4>, oct : UInt<2>, icd : UInt<4>, pum : UInt<16>, immediate : UInt<32>}, clock with : (reset => (reset, zero_datapath_instruction.io)) @[integer_core.scala 94:86]
    inst core_mapper of core_mapper @[integer_core.scala 98:20]
    core_mapper.clock <= clock
    core_mapper.reset <= reset
    core_mapper.io.host_interface.write_data <= io.host_interface.write_data @[integer_core.scala 99:23]
    core_mapper.io.host_interface.write_index <= io.host_interface.write_index @[integer_core.scala 99:23]
    io.host_interface.write_ack <= core_mapper.io.host_interface.write_ack @[integer_core.scala 99:23]
    core_mapper.io.host_interface.write_req <= io.host_interface.write_req @[integer_core.scala 99:23]
    io.host_interface.read_data <= core_mapper.io.host_interface.read_data @[integer_core.scala 99:23]
    core_mapper.io.host_interface.read_index <= io.host_interface.read_index @[integer_core.scala 99:23]
    io.host_interface.read_ack <= core_mapper.io.host_interface.read_ack @[integer_core.scala 99:23]
    core_mapper.io.host_interface.read_req <= io.host_interface.read_req @[integer_core.scala 99:23]
    moniter_interface.write_data <= core_mapper.io.monitor_interface.write_data @[integer_core.scala 100:26]
    moniter_interface.write_index <= core_mapper.io.monitor_interface.write_index @[integer_core.scala 100:26]
    core_mapper.io.monitor_interface.write_ack <= moniter_interface.write_ack @[integer_core.scala 100:26]
    moniter_interface.write_req <= core_mapper.io.monitor_interface.write_req @[integer_core.scala 100:26]
    core_mapper.io.monitor_interface.read_data <= moniter_interface.read_data @[integer_core.scala 100:26]
    moniter_interface.read_index <= core_mapper.io.monitor_interface.read_index @[integer_core.scala 100:26]
    core_mapper.io.monitor_interface.read_ack <= moniter_interface.read_ack @[integer_core.scala 100:26]
    moniter_interface.read_req <= core_mapper.io.monitor_interface.read_req @[integer_core.scala 100:26]
    performance_interface.write_data <= core_mapper.io.performance_counters_interface.write_data @[integer_core.scala 101:39]
    performance_interface.write_index <= core_mapper.io.performance_counters_interface.write_index @[integer_core.scala 101:39]
    core_mapper.io.performance_counters_interface.write_ack <= performance_interface.write_ack @[integer_core.scala 101:39]
    performance_interface.write_req <= core_mapper.io.performance_counters_interface.write_req @[integer_core.scala 101:39]
    core_mapper.io.performance_counters_interface.read_data <= performance_interface.read_data @[integer_core.scala 101:39]
    performance_interface.read_index <= core_mapper.io.performance_counters_interface.read_index @[integer_core.scala 101:39]
    core_mapper.io.performance_counters_interface.read_ack <= performance_interface.read_ack @[integer_core.scala 101:39]
    performance_interface.read_req <= core_mapper.io.performance_counters_interface.read_req @[integer_core.scala 101:39]
    register_file_interface.write_data <= core_mapper.io.register_file_interface.write_data @[integer_core.scala 102:32]
    register_file_interface.write_index <= core_mapper.io.register_file_interface.write_index @[integer_core.scala 102:32]
    core_mapper.io.register_file_interface.write_ack <= register_file_interface.write_ack @[integer_core.scala 102:32]
    register_file_interface.write_req <= core_mapper.io.register_file_interface.write_req @[integer_core.scala 102:32]
    core_mapper.io.register_file_interface.read_data <= register_file_interface.read_data @[integer_core.scala 102:32]
    register_file_interface.read_index <= core_mapper.io.register_file_interface.read_index @[integer_core.scala 102:32]
    core_mapper.io.register_file_interface.read_ack <= register_file_interface.read_ack @[integer_core.scala 102:32]
    register_file_interface.read_req <= core_mapper.io.register_file_interface.read_req @[integer_core.scala 102:32]
    instruction_memory_interface.write_data <= core_mapper.io.instruction_memory_interface.write_data @[integer_core.scala 103:37]
    instruction_memory_interface.write_index <= core_mapper.io.instruction_memory_interface.write_index @[integer_core.scala 103:37]
    core_mapper.io.instruction_memory_interface.write_ack <= instruction_memory_interface.write_ack @[integer_core.scala 103:37]
    instruction_memory_interface.write_req <= core_mapper.io.instruction_memory_interface.write_req @[integer_core.scala 103:37]
    core_mapper.io.instruction_memory_interface.read_data <= instruction_memory_interface.read_data @[integer_core.scala 103:37]
    instruction_memory_interface.read_index <= core_mapper.io.instruction_memory_interface.read_index @[integer_core.scala 103:37]
    core_mapper.io.instruction_memory_interface.read_ack <= instruction_memory_interface.read_ack @[integer_core.scala 103:37]
    instruction_memory_interface.read_req <= core_mapper.io.instruction_memory_interface.read_req @[integer_core.scala 103:37]
    scratchpad_interface.write_data <= core_mapper.io.scratchpad_memory_interface.write_data @[integer_core.scala 104:36]
    scratchpad_interface.write_index <= core_mapper.io.scratchpad_memory_interface.write_index @[integer_core.scala 104:36]
    core_mapper.io.scratchpad_memory_interface.write_ack <= scratchpad_interface.write_ack @[integer_core.scala 104:36]
    scratchpad_interface.write_req <= core_mapper.io.scratchpad_memory_interface.write_req @[integer_core.scala 104:36]
    core_mapper.io.scratchpad_memory_interface.read_data <= scratchpad_interface.read_data @[integer_core.scala 104:36]
    scratchpad_interface.read_index <= core_mapper.io.scratchpad_memory_interface.read_index @[integer_core.scala 104:36]
    core_mapper.io.scratchpad_memory_interface.read_ack <= scratchpad_interface.read_ack @[integer_core.scala 104:36]
    scratchpad_interface.read_req <= core_mapper.io.scratchpad_memory_interface.read_req @[integer_core.scala 104:36]
    unused_host_interface.io.write_data <= moniter_interface.write_data @[integer_core.scala 107:25]
    unused_host_interface.io.write_index <= moniter_interface.write_index @[integer_core.scala 107:25]
    moniter_interface.write_ack <= unused_host_interface.io.write_ack @[integer_core.scala 107:25]
    unused_host_interface.io.write_req <= moniter_interface.write_req @[integer_core.scala 107:25]
    moniter_interface.read_data <= unused_host_interface.io.read_data @[integer_core.scala 107:25]
    unused_host_interface.io.read_index <= moniter_interface.read_index @[integer_core.scala 107:25]
    moniter_interface.read_ack <= unused_host_interface.io.read_ack @[integer_core.scala 107:25]
    unused_host_interface.io.read_req <= moniter_interface.read_req @[integer_core.scala 107:25]
    unused_host_interface.io.write_data <= performance_interface.write_data @[integer_core.scala 110:25]
    unused_host_interface.io.write_index <= performance_interface.write_index @[integer_core.scala 110:25]
    performance_interface.write_ack <= unused_host_interface.io.write_ack @[integer_core.scala 110:25]
    unused_host_interface.io.write_req <= performance_interface.write_req @[integer_core.scala 110:25]
    performance_interface.read_data <= unused_host_interface.io.read_data @[integer_core.scala 110:25]
    unused_host_interface.io.read_index <= performance_interface.read_index @[integer_core.scala 110:25]
    performance_interface.read_ack <= unused_host_interface.io.read_ack @[integer_core.scala 110:25]
    unused_host_interface.io.read_req <= performance_interface.read_req @[integer_core.scala 110:25]
    inst execution_control_unit of execution_control_unit @[integer_core.scala 115:19]
    execution_control_unit.clock <= clock
    execution_control_unit.reset <= reset
    execution_control_unit.io.enable <= io.enable @[integer_core.scala 116:14]
    execution_control_unit.io.execute <= execute @[integer_core.scala 117:15]
    execution_control_unit.io.opcode <= retiring_datapath_instruction.op @[integer_core.scala 118:14]
    wire _T_522 : UInt<1>[4] @[integer_core.scala 119:44]
    _T_522[0] <= input_channel_buffer.io.quiescent @[integer_core.scala 119:44]
    _T_522[1] <= input_channel_buffer_1.io.quiescent @[integer_core.scala 119:44]
    _T_522[2] <= input_channel_buffer_2.io.quiescent @[integer_core.scala 119:44]
    _T_522[3] <= input_channel_buffer_3.io.quiescent @[integer_core.scala 119:44]
    node _T_529 = cat(_T_522[1], _T_522[0]) @[integer_core.scala 119:98]
    node _T_530 = cat(_T_522[3], _T_522[2]) @[integer_core.scala 119:98]
    node _T_531 = cat(_T_530, _T_529) @[integer_core.scala 119:98]
    execution_control_unit.io.input_channel_quiescent_status <= _T_531 @[integer_core.scala 119:38]
    wire _T_535 : UInt<1>[4] @[integer_core.scala 120:45]
    _T_535[0] <= output_channel_buffer.io.quiescent @[integer_core.scala 120:45]
    _T_535[1] <= output_channel_buffer_1.io.quiescent @[integer_core.scala 120:45]
    _T_535[2] <= output_channel_buffer_2.io.quiescent @[integer_core.scala 120:45]
    _T_535[3] <= output_channel_buffer_3.io.quiescent @[integer_core.scala 120:45]
    node _T_542 = cat(_T_535[1], _T_535[0]) @[integer_core.scala 120:100]
    node _T_543 = cat(_T_535[3], _T_535[2]) @[integer_core.scala 120:100]
    node _T_544 = cat(_T_543, _T_542) @[integer_core.scala 120:100]
    execution_control_unit.io.output_channel_quiescent_status <= _T_544 @[integer_core.scala 120:39]
    internal_enable <= execution_control_unit.io.internal_enable @[integer_core.scala 121:19]
    internal_reset <= execution_control_unit.io.internal_reset @[integer_core.scala 122:18]
    halted <= execution_control_unit.io.halted @[integer_core.scala 123:10]
    io.channels_quiescent <= execution_control_unit.io.channels_quiescent @[integer_core.scala 124:25]
    inst pu of predicate_unit @[integer_core.scala 127:18]
    pu.clock <= clock
    pu.reset <= reset
    pu.reset <= internal_reset @[integer_core.scala 128:12]
    pu.io.enable <= internal_enable @[integer_core.scala 129:16]
    pu.io.datapath_dt <= retiring_datapath_instruction.dt @[integer_core.scala 130:21]
    pu.io.datapath_di <= retiring_datapath_instruction.di @[integer_core.scala 131:21]
    pu.io.datapath_result <= datapath_result @[integer_core.scala 132:25]
    pu.io.instruction_pum <= hazard_free_datapath_instruction.pum @[integer_core.scala 133:25]
    predicates <= pu.io.predicates @[integer_core.scala 134:14]
    inst pessimistic_one_stage_input_channel_empty_status_updater of pessimistic_one_stage_input_channel_empty_status_updater @[integer_core.scala 137:32]
    pessimistic_one_stage_input_channel_empty_status_updater.clock <= clock
    pessimistic_one_stage_input_channel_empty_status_updater.reset <= reset
    wire _T_548 : UInt<1>[4] @[integer_core.scala 138:53]
    _T_548[0] <= input_channels[0].empty @[integer_core.scala 138:53]
    _T_548[1] <= input_channels[1].empty @[integer_core.scala 138:53]
    _T_548[2] <= input_channels[2].empty @[integer_core.scala 138:53]
    _T_548[3] <= input_channels[3].empty @[integer_core.scala 138:53]
    node _T_555 = cat(_T_548[1], _T_548[0]) @[integer_core.scala 138:92]
    node _T_556 = cat(_T_548[3], _T_548[2]) @[integer_core.scala 138:92]
    node _T_557 = cat(_T_556, _T_555) @[integer_core.scala 138:92]
    pessimistic_one_stage_input_channel_empty_status_updater.io.input_channel_empty_status <= _T_557 @[integer_core.scala 138:47]
    pessimistic_one_stage_input_channel_empty_status_updater.io.downstream_icd <= dx1_triggered_datapath_instruction.icd @[integer_core.scala 139:35]
    updated_input_channel_empty_status <= pessimistic_one_stage_input_channel_empty_status_updater.io.updated_input_channel_empty_status @[integer_core.scala 140:38]
    inst pessimistic_two_stage_output_channel_full_status_updater of pessimistic_two_stage_output_channel_full_status_updater @[integer_core.scala 143:31]
    pessimistic_two_stage_output_channel_full_status_updater.clock <= clock
    pessimistic_two_stage_output_channel_full_status_updater.reset <= reset
    wire _T_561 : UInt<1>[4] @[integer_core.scala 144:52]
    _T_561[0] <= output_channels[0].full @[integer_core.scala 144:52]
    _T_561[1] <= output_channels[1].full @[integer_core.scala 144:52]
    _T_561[2] <= output_channels[2].full @[integer_core.scala 144:52]
    _T_561[3] <= output_channels[3].full @[integer_core.scala 144:52]
    node _T_568 = cat(_T_561[1], _T_561[0]) @[integer_core.scala 144:91]
    node _T_569 = cat(_T_561[3], _T_561[2]) @[integer_core.scala 144:91]
    node _T_570 = cat(_T_569, _T_568) @[integer_core.scala 144:91]
    pessimistic_two_stage_output_channel_full_status_updater.io.output_channel_full_status <= _T_570 @[integer_core.scala 144:46]
    pessimistic_two_stage_output_channel_full_status_updater.io.first_downstream_oci <= dx1_triggered_datapath_instruction.oci @[integer_core.scala 145:40]
    pessimistic_two_stage_output_channel_full_status_updater.io.second_downstream_oci <= x2_triggered_datapath_instruction.oci @[integer_core.scala 146:41]
    updated_output_channel_full_status <= pessimistic_two_stage_output_channel_full_status_updater.io.updated_output_channel_full_status @[integer_core.scala 147:38]
    inst input_channel_tag_lookahead_unit of input_channel_tag_lookahead_unit @[integer_core.scala 150:28]
    input_channel_tag_lookahead_unit.clock <= clock
    input_channel_tag_lookahead_unit.reset <= reset
    wire _T_574 : UInt<2>[4] @[integer_core.scala 151:36]
    _T_574[0] <= input_channels[0].pack.tag @[integer_core.scala 151:36]
    _T_574[1] <= input_channels[1].pack.tag @[integer_core.scala 151:36]
    _T_574[2] <= input_channels[2].pack.tag @[integer_core.scala 151:36]
    _T_574[3] <= input_channels[3].pack.tag @[integer_core.scala 151:36]
    input_channel_tag_lookahead_unit.io.original_tags[0] <= _T_574[0] @[integer_core.scala 151:30]
    input_channel_tag_lookahead_unit.io.original_tags[1] <= _T_574[1] @[integer_core.scala 151:30]
    input_channel_tag_lookahead_unit.io.original_tags[2] <= _T_574[2] @[integer_core.scala 151:30]
    input_channel_tag_lookahead_unit.io.original_tags[3] <= _T_574[3] @[integer_core.scala 151:30]
    wire _T_584 : UInt<2>[4] @[integer_core.scala 152:32]
    _T_584[0] <= input_channels[0].next_pack.tag @[integer_core.scala 152:32]
    _T_584[1] <= input_channels[1].next_pack.tag @[integer_core.scala 152:32]
    _T_584[2] <= input_channels[2].next_pack.tag @[integer_core.scala 152:32]
    _T_584[3] <= input_channels[3].next_pack.tag @[integer_core.scala 152:32]
    input_channel_tag_lookahead_unit.io.next_tags[0] <= _T_584[0] @[integer_core.scala 152:26]
    input_channel_tag_lookahead_unit.io.next_tags[1] <= _T_584[1] @[integer_core.scala 152:26]
    input_channel_tag_lookahead_unit.io.next_tags[2] <= _T_584[2] @[integer_core.scala 152:26]
    input_channel_tag_lookahead_unit.io.next_tags[3] <= _T_584[3] @[integer_core.scala 152:26]
    wire _T_594 : UInt<1>[4] @[integer_core.scala 153:46]
    _T_594[0] <= input_channels[0].dequeue @[integer_core.scala 153:46]
    _T_594[1] <= input_channels[1].dequeue @[integer_core.scala 153:46]
    _T_594[2] <= input_channels[2].dequeue @[integer_core.scala 153:46]
    _T_594[3] <= input_channels[3].dequeue @[integer_core.scala 153:46]
    node _T_601 = cat(_T_594[1], _T_594[0]) @[integer_core.scala 153:84]
    node _T_602 = cat(_T_594[3], _T_594[2]) @[integer_core.scala 153:84]
    node _T_603 = cat(_T_602, _T_601) @[integer_core.scala 153:84]
    input_channel_tag_lookahead_unit.io.pending_dequeue_signals <= _T_603 @[integer_core.scala 153:40]
    input_channel_resolved_tags[0] <= input_channel_tag_lookahead_unit.io.resolved_tags[0] @[integer_core.scala 154:31]
    input_channel_resolved_tags[1] <= input_channel_tag_lookahead_unit.io.resolved_tags[1] @[integer_core.scala 154:31]
    input_channel_resolved_tags[2] <= input_channel_tag_lookahead_unit.io.resolved_tags[2] @[integer_core.scala 154:31]
    input_channel_resolved_tags[3] <= input_channel_tag_lookahead_unit.io.resolved_tags[3] @[integer_core.scala 154:31]
    inst trigger_resolution_unit of trigger_resolution_unit @[integer_core.scala 157:19]
    trigger_resolution_unit.clock <= clock
    trigger_resolution_unit.reset <= reset
    trigger_resolution_unit.io.enable <= internal_enable @[integer_core.scala 158:14]
    trigger_resolution_unit.io.execute <= execute @[integer_core.scala 159:15]
    trigger_resolution_unit.io.halted <= halted @[integer_core.scala 160:14]
    trigger_resolution_unit.io.triggers[0].oci <= triggers[0].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[0].ictv <= triggers[0].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[0].ictb <= triggers[0].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[0].ici <= triggers[0].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[0].ptm <= triggers[0].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[0].vi <= triggers[0].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[1].oci <= triggers[1].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[1].ictv <= triggers[1].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[1].ictb <= triggers[1].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[1].ici <= triggers[1].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[1].ptm <= triggers[1].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[1].vi <= triggers[1].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[2].oci <= triggers[2].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[2].ictv <= triggers[2].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[2].ictb <= triggers[2].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[2].ici <= triggers[2].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[2].ptm <= triggers[2].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[2].vi <= triggers[2].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[3].oci <= triggers[3].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[3].ictv <= triggers[3].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[3].ictb <= triggers[3].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[3].ici <= triggers[3].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[3].ptm <= triggers[3].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[3].vi <= triggers[3].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[4].oci <= triggers[4].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[4].ictv <= triggers[4].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[4].ictb <= triggers[4].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[4].ici <= triggers[4].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[4].ptm <= triggers[4].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[4].vi <= triggers[4].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[5].oci <= triggers[5].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[5].ictv <= triggers[5].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[5].ictb <= triggers[5].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[5].ici <= triggers[5].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[5].ptm <= triggers[5].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[5].vi <= triggers[5].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[6].oci <= triggers[6].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[6].ictv <= triggers[6].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[6].ictb <= triggers[6].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[6].ici <= triggers[6].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[6].ptm <= triggers[6].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[6].vi <= triggers[6].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[7].oci <= triggers[7].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[7].ictv <= triggers[7].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[7].ictb <= triggers[7].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[7].ici <= triggers[7].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[7].ptm <= triggers[7].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[7].vi <= triggers[7].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[8].oci <= triggers[8].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[8].ictv <= triggers[8].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[8].ictb <= triggers[8].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[8].ici <= triggers[8].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[8].ptm <= triggers[8].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[8].vi <= triggers[8].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[9].oci <= triggers[9].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[9].ictv <= triggers[9].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[9].ictb <= triggers[9].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[9].ici <= triggers[9].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[9].ptm <= triggers[9].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[9].vi <= triggers[9].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[10].oci <= triggers[10].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[10].ictv <= triggers[10].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[10].ictb <= triggers[10].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[10].ici <= triggers[10].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[10].ptm <= triggers[10].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[10].vi <= triggers[10].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[11].oci <= triggers[11].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[11].ictv <= triggers[11].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[11].ictb <= triggers[11].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[11].ici <= triggers[11].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[11].ptm <= triggers[11].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[11].vi <= triggers[11].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[12].oci <= triggers[12].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[12].ictv <= triggers[12].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[12].ictb <= triggers[12].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[12].ici <= triggers[12].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[12].ptm <= triggers[12].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[12].vi <= triggers[12].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[13].oci <= triggers[13].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[13].ictv <= triggers[13].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[13].ictb <= triggers[13].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[13].ici <= triggers[13].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[13].ptm <= triggers[13].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[13].vi <= triggers[13].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[14].oci <= triggers[14].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[14].ictv <= triggers[14].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[14].ictb <= triggers[14].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[14].ici <= triggers[14].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[14].ptm <= triggers[14].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[14].vi <= triggers[14].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[15].oci <= triggers[15].oci @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[15].ictv <= triggers[15].ictv @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[15].ictb <= triggers[15].ictb @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[15].ici <= triggers[15].ici @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[15].ptm <= triggers[15].ptm @[integer_core.scala 161:16]
    trigger_resolution_unit.io.triggers[15].vi <= triggers[15].vi @[integer_core.scala 161:16]
    trigger_resolution_unit.io.predicates <= predicates @[integer_core.scala 162:18]
    trigger_resolution_unit.io.input_channel_empty_status <= updated_input_channel_empty_status @[integer_core.scala 163:34]
    trigger_resolution_unit.io.input_channel_tags[0] <= input_channel_resolved_tags[0] @[integer_core.scala 164:26]
    trigger_resolution_unit.io.input_channel_tags[1] <= input_channel_resolved_tags[1] @[integer_core.scala 164:26]
    trigger_resolution_unit.io.input_channel_tags[2] <= input_channel_resolved_tags[2] @[integer_core.scala 164:26]
    trigger_resolution_unit.io.input_channel_tags[3] <= input_channel_resolved_tags[3] @[integer_core.scala 164:26]
    trigger_resolution_unit.io.output_channel_full_status <= updated_output_channel_full_status @[integer_core.scala 165:34]
    triggered_instruction_valid <= trigger_resolution_unit.io.triggered_instruction_valid @[integer_core.scala 166:31]
    trigger_instruction_index <= trigger_resolution_unit.io.triggered_instruction_index @[integer_core.scala 167:29]
    inst instruction_memory of instruction_memory @[integer_core.scala 170:18]
    instruction_memory.clock <= clock
    instruction_memory.reset <= reset
    instruction_memory.io.enable <= io.enable @[integer_core.scala 171:13]
    instruction_memory.io.host_interface.write_data <= instruction_memory_interface.write_data @[integer_core.scala 172:21]
    instruction_memory.io.host_interface.write_index <= instruction_memory_interface.write_index @[integer_core.scala 172:21]
    instruction_memory_interface.write_ack <= instruction_memory.io.host_interface.write_ack @[integer_core.scala 172:21]
    instruction_memory.io.host_interface.write_req <= instruction_memory_interface.write_req @[integer_core.scala 172:21]
    instruction_memory_interface.read_data <= instruction_memory.io.host_interface.read_data @[integer_core.scala 172:21]
    instruction_memory.io.host_interface.read_index <= instruction_memory_interface.read_index @[integer_core.scala 172:21]
    instruction_memory_interface.read_ack <= instruction_memory.io.host_interface.read_ack @[integer_core.scala 172:21]
    instruction_memory.io.host_interface.read_req <= instruction_memory_interface.read_req @[integer_core.scala 172:21]
    triggers[0].oci <= instruction_memory.io.triggers[0].oci @[integer_core.scala 173:12]
    triggers[0].ictv <= instruction_memory.io.triggers[0].ictv @[integer_core.scala 173:12]
    triggers[0].ictb <= instruction_memory.io.triggers[0].ictb @[integer_core.scala 173:12]
    triggers[0].ici <= instruction_memory.io.triggers[0].ici @[integer_core.scala 173:12]
    triggers[0].ptm <= instruction_memory.io.triggers[0].ptm @[integer_core.scala 173:12]
    triggers[0].vi <= instruction_memory.io.triggers[0].vi @[integer_core.scala 173:12]
    triggers[1].oci <= instruction_memory.io.triggers[1].oci @[integer_core.scala 173:12]
    triggers[1].ictv <= instruction_memory.io.triggers[1].ictv @[integer_core.scala 173:12]
    triggers[1].ictb <= instruction_memory.io.triggers[1].ictb @[integer_core.scala 173:12]
    triggers[1].ici <= instruction_memory.io.triggers[1].ici @[integer_core.scala 173:12]
    triggers[1].ptm <= instruction_memory.io.triggers[1].ptm @[integer_core.scala 173:12]
    triggers[1].vi <= instruction_memory.io.triggers[1].vi @[integer_core.scala 173:12]
    triggers[2].oci <= instruction_memory.io.triggers[2].oci @[integer_core.scala 173:12]
    triggers[2].ictv <= instruction_memory.io.triggers[2].ictv @[integer_core.scala 173:12]
    triggers[2].ictb <= instruction_memory.io.triggers[2].ictb @[integer_core.scala 173:12]
    triggers[2].ici <= instruction_memory.io.triggers[2].ici @[integer_core.scala 173:12]
    triggers[2].ptm <= instruction_memory.io.triggers[2].ptm @[integer_core.scala 173:12]
    triggers[2].vi <= instruction_memory.io.triggers[2].vi @[integer_core.scala 173:12]
    triggers[3].oci <= instruction_memory.io.triggers[3].oci @[integer_core.scala 173:12]
    triggers[3].ictv <= instruction_memory.io.triggers[3].ictv @[integer_core.scala 173:12]
    triggers[3].ictb <= instruction_memory.io.triggers[3].ictb @[integer_core.scala 173:12]
    triggers[3].ici <= instruction_memory.io.triggers[3].ici @[integer_core.scala 173:12]
    triggers[3].ptm <= instruction_memory.io.triggers[3].ptm @[integer_core.scala 173:12]
    triggers[3].vi <= instruction_memory.io.triggers[3].vi @[integer_core.scala 173:12]
    triggers[4].oci <= instruction_memory.io.triggers[4].oci @[integer_core.scala 173:12]
    triggers[4].ictv <= instruction_memory.io.triggers[4].ictv @[integer_core.scala 173:12]
    triggers[4].ictb <= instruction_memory.io.triggers[4].ictb @[integer_core.scala 173:12]
    triggers[4].ici <= instruction_memory.io.triggers[4].ici @[integer_core.scala 173:12]
    triggers[4].ptm <= instruction_memory.io.triggers[4].ptm @[integer_core.scala 173:12]
    triggers[4].vi <= instruction_memory.io.triggers[4].vi @[integer_core.scala 173:12]
    triggers[5].oci <= instruction_memory.io.triggers[5].oci @[integer_core.scala 173:12]
    triggers[5].ictv <= instruction_memory.io.triggers[5].ictv @[integer_core.scala 173:12]
    triggers[5].ictb <= instruction_memory.io.triggers[5].ictb @[integer_core.scala 173:12]
    triggers[5].ici <= instruction_memory.io.triggers[5].ici @[integer_core.scala 173:12]
    triggers[5].ptm <= instruction_memory.io.triggers[5].ptm @[integer_core.scala 173:12]
    triggers[5].vi <= instruction_memory.io.triggers[5].vi @[integer_core.scala 173:12]
    triggers[6].oci <= instruction_memory.io.triggers[6].oci @[integer_core.scala 173:12]
    triggers[6].ictv <= instruction_memory.io.triggers[6].ictv @[integer_core.scala 173:12]
    triggers[6].ictb <= instruction_memory.io.triggers[6].ictb @[integer_core.scala 173:12]
    triggers[6].ici <= instruction_memory.io.triggers[6].ici @[integer_core.scala 173:12]
    triggers[6].ptm <= instruction_memory.io.triggers[6].ptm @[integer_core.scala 173:12]
    triggers[6].vi <= instruction_memory.io.triggers[6].vi @[integer_core.scala 173:12]
    triggers[7].oci <= instruction_memory.io.triggers[7].oci @[integer_core.scala 173:12]
    triggers[7].ictv <= instruction_memory.io.triggers[7].ictv @[integer_core.scala 173:12]
    triggers[7].ictb <= instruction_memory.io.triggers[7].ictb @[integer_core.scala 173:12]
    triggers[7].ici <= instruction_memory.io.triggers[7].ici @[integer_core.scala 173:12]
    triggers[7].ptm <= instruction_memory.io.triggers[7].ptm @[integer_core.scala 173:12]
    triggers[7].vi <= instruction_memory.io.triggers[7].vi @[integer_core.scala 173:12]
    triggers[8].oci <= instruction_memory.io.triggers[8].oci @[integer_core.scala 173:12]
    triggers[8].ictv <= instruction_memory.io.triggers[8].ictv @[integer_core.scala 173:12]
    triggers[8].ictb <= instruction_memory.io.triggers[8].ictb @[integer_core.scala 173:12]
    triggers[8].ici <= instruction_memory.io.triggers[8].ici @[integer_core.scala 173:12]
    triggers[8].ptm <= instruction_memory.io.triggers[8].ptm @[integer_core.scala 173:12]
    triggers[8].vi <= instruction_memory.io.triggers[8].vi @[integer_core.scala 173:12]
    triggers[9].oci <= instruction_memory.io.triggers[9].oci @[integer_core.scala 173:12]
    triggers[9].ictv <= instruction_memory.io.triggers[9].ictv @[integer_core.scala 173:12]
    triggers[9].ictb <= instruction_memory.io.triggers[9].ictb @[integer_core.scala 173:12]
    triggers[9].ici <= instruction_memory.io.triggers[9].ici @[integer_core.scala 173:12]
    triggers[9].ptm <= instruction_memory.io.triggers[9].ptm @[integer_core.scala 173:12]
    triggers[9].vi <= instruction_memory.io.triggers[9].vi @[integer_core.scala 173:12]
    triggers[10].oci <= instruction_memory.io.triggers[10].oci @[integer_core.scala 173:12]
    triggers[10].ictv <= instruction_memory.io.triggers[10].ictv @[integer_core.scala 173:12]
    triggers[10].ictb <= instruction_memory.io.triggers[10].ictb @[integer_core.scala 173:12]
    triggers[10].ici <= instruction_memory.io.triggers[10].ici @[integer_core.scala 173:12]
    triggers[10].ptm <= instruction_memory.io.triggers[10].ptm @[integer_core.scala 173:12]
    triggers[10].vi <= instruction_memory.io.triggers[10].vi @[integer_core.scala 173:12]
    triggers[11].oci <= instruction_memory.io.triggers[11].oci @[integer_core.scala 173:12]
    triggers[11].ictv <= instruction_memory.io.triggers[11].ictv @[integer_core.scala 173:12]
    triggers[11].ictb <= instruction_memory.io.triggers[11].ictb @[integer_core.scala 173:12]
    triggers[11].ici <= instruction_memory.io.triggers[11].ici @[integer_core.scala 173:12]
    triggers[11].ptm <= instruction_memory.io.triggers[11].ptm @[integer_core.scala 173:12]
    triggers[11].vi <= instruction_memory.io.triggers[11].vi @[integer_core.scala 173:12]
    triggers[12].oci <= instruction_memory.io.triggers[12].oci @[integer_core.scala 173:12]
    triggers[12].ictv <= instruction_memory.io.triggers[12].ictv @[integer_core.scala 173:12]
    triggers[12].ictb <= instruction_memory.io.triggers[12].ictb @[integer_core.scala 173:12]
    triggers[12].ici <= instruction_memory.io.triggers[12].ici @[integer_core.scala 173:12]
    triggers[12].ptm <= instruction_memory.io.triggers[12].ptm @[integer_core.scala 173:12]
    triggers[12].vi <= instruction_memory.io.triggers[12].vi @[integer_core.scala 173:12]
    triggers[13].oci <= instruction_memory.io.triggers[13].oci @[integer_core.scala 173:12]
    triggers[13].ictv <= instruction_memory.io.triggers[13].ictv @[integer_core.scala 173:12]
    triggers[13].ictb <= instruction_memory.io.triggers[13].ictb @[integer_core.scala 173:12]
    triggers[13].ici <= instruction_memory.io.triggers[13].ici @[integer_core.scala 173:12]
    triggers[13].ptm <= instruction_memory.io.triggers[13].ptm @[integer_core.scala 173:12]
    triggers[13].vi <= instruction_memory.io.triggers[13].vi @[integer_core.scala 173:12]
    triggers[14].oci <= instruction_memory.io.triggers[14].oci @[integer_core.scala 173:12]
    triggers[14].ictv <= instruction_memory.io.triggers[14].ictv @[integer_core.scala 173:12]
    triggers[14].ictb <= instruction_memory.io.triggers[14].ictb @[integer_core.scala 173:12]
    triggers[14].ici <= instruction_memory.io.triggers[14].ici @[integer_core.scala 173:12]
    triggers[14].ptm <= instruction_memory.io.triggers[14].ptm @[integer_core.scala 173:12]
    triggers[14].vi <= instruction_memory.io.triggers[14].vi @[integer_core.scala 173:12]
    triggers[15].oci <= instruction_memory.io.triggers[15].oci @[integer_core.scala 173:12]
    triggers[15].ictv <= instruction_memory.io.triggers[15].ictv @[integer_core.scala 173:12]
    triggers[15].ictb <= instruction_memory.io.triggers[15].ictb @[integer_core.scala 173:12]
    triggers[15].ici <= instruction_memory.io.triggers[15].ici @[integer_core.scala 173:12]
    triggers[15].ptm <= instruction_memory.io.triggers[15].ptm @[integer_core.scala 173:12]
    triggers[15].vi <= instruction_memory.io.triggers[15].vi @[integer_core.scala 173:12]
    instruction_memory.io.triggered_instruction_valid <= triggered_instruction_valid @[integer_core.scala 174:34]
    instruction_memory.io.triggered_instruction_index <= trigger_instruction_index @[integer_core.scala 175:34]
    triggered_datapath_instruction.immediate <= instruction_memory.io.triggered_datapath_instruction.immediate @[integer_core.scala 176:34]
    triggered_datapath_instruction.pum <= instruction_memory.io.triggered_datapath_instruction.pum @[integer_core.scala 176:34]
    triggered_datapath_instruction.icd <= instruction_memory.io.triggered_datapath_instruction.icd @[integer_core.scala 176:34]
    triggered_datapath_instruction.oct <= instruction_memory.io.triggered_datapath_instruction.oct @[integer_core.scala 176:34]
    triggered_datapath_instruction.oci <= instruction_memory.io.triggered_datapath_instruction.oci @[integer_core.scala 176:34]
    triggered_datapath_instruction.di <= instruction_memory.io.triggered_datapath_instruction.di @[integer_core.scala 176:34]
    triggered_datapath_instruction.dt <= instruction_memory.io.triggered_datapath_instruction.dt @[integer_core.scala 176:34]
    triggered_datapath_instruction.si <= instruction_memory.io.triggered_datapath_instruction.si @[integer_core.scala 176:34]
    triggered_datapath_instruction.st <= instruction_memory.io.triggered_datapath_instruction.st @[integer_core.scala 176:34]
    triggered_datapath_instruction.op <= instruction_memory.io.triggered_datapath_instruction.op @[integer_core.scala 176:34]
    triggered_datapath_instruction.vi <= instruction_memory.io.triggered_datapath_instruction.vi @[integer_core.scala 176:34]
    control_hazard <= UInt<1>("h00") @[integer_core.scala 179:18]
    inst integer_collision_detector of integer_collision_detector @[integer_core.scala 180:19]
    integer_collision_detector.clock <= clock
    integer_collision_detector.reset <= reset
    integer_collision_detector.io.triggered_instruction_op <= triggered_datapath_instruction.op @[integer_core.scala 181:32]
    integer_collision_detector.io.dx1_instruction_retiring_stage <= dx1_instruction_retiring_stage @[integer_core.scala 182:38]
    collision <= integer_collision_detector.io.collision @[integer_core.scala 183:13]
    node _T_605 = or(control_hazard, collision) @[integer_core.scala 184:28]
    hazard <= _T_605 @[integer_core.scala 184:10]
    when hazard : @[integer_core.scala 185:15]
      hazard_free_datapath_instruction.immediate <= zero_datapath_instruction.io.immediate @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.pum <= zero_datapath_instruction.io.pum @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.icd <= zero_datapath_instruction.io.icd @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.oct <= zero_datapath_instruction.io.oct @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.oci <= zero_datapath_instruction.io.oci @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.di <= zero_datapath_instruction.io.di @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.dt <= zero_datapath_instruction.io.dt @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.si <= zero_datapath_instruction.io.si @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.st <= zero_datapath_instruction.io.st @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.op <= zero_datapath_instruction.io.op @[integer_core.scala 186:38]
      hazard_free_datapath_instruction.vi <= zero_datapath_instruction.io.vi @[integer_core.scala 186:38]
      skip @[integer_core.scala 185:15]
    else : @[integer_core.scala 187:14]
      hazard_free_datapath_instruction.immediate <= triggered_datapath_instruction.immediate @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.pum <= triggered_datapath_instruction.pum @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.icd <= triggered_datapath_instruction.icd @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.oct <= triggered_datapath_instruction.oct @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.oci <= triggered_datapath_instruction.oci @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.di <= triggered_datapath_instruction.di @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.dt <= triggered_datapath_instruction.dt @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.si <= triggered_datapath_instruction.si @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.st <= triggered_datapath_instruction.st @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.op <= triggered_datapath_instruction.op @[integer_core.scala 188:38]
      hazard_free_datapath_instruction.vi <= triggered_datapath_instruction.vi @[integer_core.scala 188:38]
      skip @[integer_core.scala 187:14]
    potentially_overridden_datapath_instruction.immediate <= hazard_free_datapath_instruction.immediate @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.pum <= hazard_free_datapath_instruction.pum @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.icd <= hazard_free_datapath_instruction.icd @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.oct <= hazard_free_datapath_instruction.oct @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.oci <= hazard_free_datapath_instruction.oci @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.di <= hazard_free_datapath_instruction.di @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.dt <= hazard_free_datapath_instruction.dt @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.si <= hazard_free_datapath_instruction.si @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.st <= hazard_free_datapath_instruction.st @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.op <= hazard_free_datapath_instruction.op @[integer_core.scala 192:47]
    potentially_overridden_datapath_instruction.vi <= hazard_free_datapath_instruction.vi @[integer_core.scala 192:47]
    node _T_606 = bits(reset, 0, 0) @[integer_core.scala 195:20]
    node _T_607 = or(_T_606, predicate_prediction_miss) @[integer_core.scala 195:23]
    when _T_607 : @[integer_core.scala 195:52]
      dx1_triggered_datapath_instruction.immediate <= zero_datapath_instruction.io.immediate @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.pum <= zero_datapath_instruction.io.pum @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.icd <= zero_datapath_instruction.io.icd @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.oct <= zero_datapath_instruction.io.oct @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.oci <= zero_datapath_instruction.io.oci @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.di <= zero_datapath_instruction.io.di @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.dt <= zero_datapath_instruction.io.dt @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.si <= zero_datapath_instruction.io.si @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.st <= zero_datapath_instruction.io.st @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.op <= zero_datapath_instruction.io.op @[integer_core.scala 196:40]
      dx1_triggered_datapath_instruction.vi <= zero_datapath_instruction.io.vi @[integer_core.scala 196:40]
      skip @[integer_core.scala 195:52]
    else : @[integer_core.scala 197:24]
      when io.enable : @[integer_core.scala 197:24]
        dx1_triggered_datapath_instruction.immediate <= potentially_overridden_datapath_instruction.immediate @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.pum <= potentially_overridden_datapath_instruction.pum @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.icd <= potentially_overridden_datapath_instruction.icd @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.oct <= potentially_overridden_datapath_instruction.oct @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.oci <= potentially_overridden_datapath_instruction.oci @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.di <= potentially_overridden_datapath_instruction.di @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.dt <= potentially_overridden_datapath_instruction.dt @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.si <= potentially_overridden_datapath_instruction.si @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.st <= potentially_overridden_datapath_instruction.st @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.op <= potentially_overridden_datapath_instruction.op @[integer_core.scala 198:40]
        dx1_triggered_datapath_instruction.vi <= potentially_overridden_datapath_instruction.vi @[integer_core.scala 198:40]
        skip @[integer_core.scala 197:24]
      else : @[integer_core.scala 199:16]
        skip @[integer_core.scala 199:16]
    inst integer_issue_unit of integer_issue_unit @[integer_core.scala 205:19]
    integer_issue_unit.clock <= clock
    integer_issue_unit.reset <= reset
    integer_issue_unit.io.dx1_instruction_op <= dx1_triggered_datapath_instruction.op @[integer_core.scala 206:26]
    dx1_instruction_retiring_stage <= integer_issue_unit.io.retiring_stage @[integer_core.scala 207:34]
    dx1_functional_unit <= integer_issue_unit.io.functional_unit @[integer_core.scala 208:23]
    inst register_file of register_file @[integer_core.scala 211:18]
    register_file.clock <= clock
    register_file.reset <= reset
    register_file.io.enable <= io.enable @[integer_core.scala 212:13]
    register_file.io.host_interface.write_data <= register_file_interface.write_data @[integer_core.scala 213:21]
    register_file.io.host_interface.write_index <= register_file_interface.write_index @[integer_core.scala 213:21]
    register_file_interface.write_ack <= register_file.io.host_interface.write_ack @[integer_core.scala 213:21]
    register_file.io.host_interface.write_req <= register_file_interface.write_req @[integer_core.scala 213:21]
    register_file_interface.read_data <= register_file.io.host_interface.read_data @[integer_core.scala 213:21]
    register_file.io.host_interface.read_index <= register_file_interface.read_index @[integer_core.scala 213:21]
    register_file_interface.read_ack <= register_file.io.host_interface.read_ack @[integer_core.scala 213:21]
    register_file.io.host_interface.read_req <= register_file_interface.read_req @[integer_core.scala 213:21]
    register_file.io.read_indexes[0] <= register_read_index[0] @[integer_core.scala 214:19]
    register_file.io.read_indexes[1] <= register_read_index[1] @[integer_core.scala 214:19]
    register_file.io.read_indexes[2] <= register_read_index[2] @[integer_core.scala 214:19]
    registers_read_data[0] <= register_file.io.read_data[0] @[integer_core.scala 215:23]
    registers_read_data[1] <= register_file.io.read_data[1] @[integer_core.scala 215:23]
    registers_read_data[2] <= register_file.io.read_data[2] @[integer_core.scala 215:23]
    register_file.io.write_enable <= register_write_enable @[integer_core.scala 216:19]
    register_file.io.write_index <= register_write_index @[integer_core.scala 217:18]
    register_file.io.write_data <= register_write_data @[integer_core.scala 218:17]
    inst source_fetching_unit of source_fetching_unit @[integer_core.scala 221:19]
    source_fetching_unit.clock <= clock
    source_fetching_unit.reset <= reset
    source_fetching_unit.io.st <= dx1_triggered_datapath_instruction.st @[integer_core.scala 222:10]
    source_fetching_unit.io.si <= dx1_triggered_datapath_instruction.si @[integer_core.scala 223:10]
    source_fetching_unit.io.immediate <= dx1_triggered_datapath_instruction.immediate @[integer_core.scala 224:17]
    wire _T_611 : UInt<32>[4] @[integer_core.scala 225:32]
    _T_611[0] <= input_channels[0].pack.data @[integer_core.scala 225:32]
    _T_611[1] <= input_channels[1].pack.data @[integer_core.scala 225:32]
    _T_611[2] <= input_channels[2].pack.data @[integer_core.scala 225:32]
    _T_611[3] <= input_channels[3].pack.data @[integer_core.scala 225:32]
    source_fetching_unit.io.input_channel_data[0] <= _T_611[0] @[integer_core.scala 225:26]
    source_fetching_unit.io.input_channel_data[1] <= _T_611[1] @[integer_core.scala 225:26]
    source_fetching_unit.io.input_channel_data[2] <= _T_611[2] @[integer_core.scala 225:26]
    source_fetching_unit.io.input_channel_data[3] <= _T_611[3] @[integer_core.scala 225:26]
    register_read_index[0] <= source_fetching_unit.io.register_read_indexes[0] @[integer_core.scala 226:23]
    register_read_index[1] <= source_fetching_unit.io.register_read_indexes[1] @[integer_core.scala 226:23]
    register_read_index[2] <= source_fetching_unit.io.register_read_indexes[2] @[integer_core.scala 226:23]
    source_fetching_unit.io.register_read_data[0] <= registers_read_data[0] @[integer_core.scala 227:26]
    source_fetching_unit.io.register_read_data[1] <= registers_read_data[1] @[integer_core.scala 227:26]
    source_fetching_unit.io.register_read_data[2] <= registers_read_data[2] @[integer_core.scala 227:26]
    pre_ofu_operands[0] <= source_fetching_unit.io.operands[0] @[integer_core.scala 228:20]
    pre_ofu_operands[1] <= source_fetching_unit.io.operands[1] @[integer_core.scala 228:20]
    pre_ofu_operands[2] <= source_fetching_unit.io.operands[2] @[integer_core.scala 228:20]
    inst operand_forwarding_unit of operand_forwarding_unit @[integer_core.scala 231:19]
    operand_forwarding_unit.clock <= clock
    operand_forwarding_unit.reset <= reset
    node _T_619 = eq(dx1_instruction_retiring_stage, UInt<2>("h02")) @[integer_core.scala 232:49]
    node _T_621 = eq(x2_instruction_retiring_stage, UInt<2>("h02")) @[integer_core.scala 232:90]
    node _T_622 = and(_T_619, _T_621) @[integer_core.scala 232:57]
    node _T_624 = neq(dx1_functional_unit, UInt<1>("h00")) @[integer_core.scala 233:25]
    node _T_625 = and(_T_622, _T_624) @[integer_core.scala 232:98]
    operand_forwarding_unit.io.enable <= _T_625 @[integer_core.scala 232:14]
    operand_forwarding_unit.io.source_types <= dx1_triggered_datapath_instruction.st @[integer_core.scala 234:20]
    operand_forwarding_unit.io.source_indices <= dx1_triggered_datapath_instruction.si @[integer_core.scala 235:22]
    operand_forwarding_unit.io.downstream_dt <= dx1_triggered_datapath_instruction.dt @[integer_core.scala 236:21]
    operand_forwarding_unit.io.downstream_di <= dx1_triggered_datapath_instruction.di @[integer_core.scala 237:21]
    operand_forwarding_unit.io.downstream_result <= datapath_result @[integer_core.scala 238:25]
    operand_forwarding_unit.io.pre_ofu_operands[0] <= pre_ofu_operands[0] @[integer_core.scala 239:24]
    operand_forwarding_unit.io.pre_ofu_operands[1] <= pre_ofu_operands[1] @[integer_core.scala 239:24]
    operand_forwarding_unit.io.pre_ofu_operands[2] <= pre_ofu_operands[2] @[integer_core.scala 239:24]
    post_ofu_operands[0] <= operand_forwarding_unit.io.post_ofu_operands[0] @[integer_core.scala 240:21]
    post_ofu_operands[1] <= operand_forwarding_unit.io.post_ofu_operands[1] @[integer_core.scala 240:21]
    post_ofu_operands[2] <= operand_forwarding_unit.io.post_ofu_operands[2] @[integer_core.scala 240:21]
    inst arithmetic_logic_unit of arithmetic_logic_unit @[integer_core.scala 243:19]
    arithmetic_logic_unit.clock <= clock
    arithmetic_logic_unit.reset <= reset
    arithmetic_logic_unit.io.opcode <= dx1_triggered_datapath_instruction.op @[integer_core.scala 244:14]
    arithmetic_logic_unit.io.operands[0] <= pre_ofu_operands[0] @[integer_core.scala 245:16]
    arithmetic_logic_unit.io.operands[1] <= pre_ofu_operands[1] @[integer_core.scala 245:16]
    arithmetic_logic_unit.io.operands[2] <= pre_ofu_operands[2] @[integer_core.scala 245:16]
    alu_result <= arithmetic_logic_unit.io.result @[integer_core.scala 246:14]
    inst scratchpad of scratchpad @[integer_core.scala 250:20]
    scratchpad.clock <= clock
    scratchpad.reset <= reset
    scratchpad.io.hostInterface.write_data <= scratchpad_interface.write_data @[integer_core.scala 251:22]
    scratchpad.io.hostInterface.write_index <= scratchpad_interface.write_index @[integer_core.scala 251:22]
    scratchpad_interface.write_ack <= scratchpad.io.hostInterface.write_ack @[integer_core.scala 251:22]
    scratchpad.io.hostInterface.write_req <= scratchpad_interface.write_req @[integer_core.scala 251:22]
    scratchpad_interface.read_data <= scratchpad.io.hostInterface.read_data @[integer_core.scala 251:22]
    scratchpad.io.hostInterface.read_index <= scratchpad_interface.read_index @[integer_core.scala 251:22]
    scratchpad_interface.read_ack <= scratchpad.io.hostInterface.read_ack @[integer_core.scala 251:22]
    scratchpad.io.hostInterface.read_req <= scratchpad_interface.read_req @[integer_core.scala 251:22]
    scratchpad.io.opcode <= dx1_triggered_datapath_instruction.op @[integer_core.scala 252:15]
    scratchpad.io.operand0 <= post_ofu_operands[0] @[integer_core.scala 253:17]
    scratchpad.io.operand1 <= post_ofu_operands[1] @[integer_core.scala 254:17]
    sm_result <= scratchpad.io.result @[integer_core.scala 255:15]
    imu_result <= UInt<1>("h00") @[integer_core.scala 262:14]
    node _T_627 = bits(reset, 0, 0) @[integer_core.scala 265:21]
    node _T_628 = or(_T_627, predicate_prediction_miss) @[integer_core.scala 265:24]
    when _T_628 : @[integer_core.scala 265:53]
      x2_triggered_datapath_instruction.immediate <= zero_datapath_instruction.io.immediate @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.pum <= zero_datapath_instruction.io.pum @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.icd <= zero_datapath_instruction.io.icd @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.oct <= zero_datapath_instruction.io.oct @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.oci <= zero_datapath_instruction.io.oci @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.di <= zero_datapath_instruction.io.di @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.dt <= zero_datapath_instruction.io.dt @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.si <= zero_datapath_instruction.io.si @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.st <= zero_datapath_instruction.io.st @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.op <= zero_datapath_instruction.io.op @[integer_core.scala 266:39]
      x2_triggered_datapath_instruction.vi <= zero_datapath_instruction.io.vi @[integer_core.scala 266:39]
      x2_instruction_retiring_stage <= UInt<1>("h00") @[integer_core.scala 267:35]
      x2_functional_unit <= UInt<1>("h00") @[integer_core.scala 268:24]
      skip @[integer_core.scala 265:53]
    else : @[integer_core.scala 269:24]
      when io.enable : @[integer_core.scala 269:24]
        node _T_632 = eq(dx1_instruction_retiring_stage, UInt<2>("h02")) @[integer_core.scala 270:41]
        when _T_632 : @[integer_core.scala 270:49]
          x2_triggered_datapath_instruction.immediate <= dx1_triggered_datapath_instruction.immediate @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.pum <= dx1_triggered_datapath_instruction.pum @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.icd <= dx1_triggered_datapath_instruction.icd @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.oct <= dx1_triggered_datapath_instruction.oct @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.oci <= dx1_triggered_datapath_instruction.oci @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.di <= dx1_triggered_datapath_instruction.di @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.dt <= dx1_triggered_datapath_instruction.dt @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.si <= dx1_triggered_datapath_instruction.si @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.st <= dx1_triggered_datapath_instruction.st @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.op <= dx1_triggered_datapath_instruction.op @[integer_core.scala 271:41]
          x2_triggered_datapath_instruction.vi <= dx1_triggered_datapath_instruction.vi @[integer_core.scala 271:41]
          x2_instruction_retiring_stage <= dx1_instruction_retiring_stage @[integer_core.scala 272:37]
          x2_functional_unit <= dx1_functional_unit @[integer_core.scala 273:26]
          skip @[integer_core.scala 270:49]
        else : @[integer_core.scala 274:16]
          x2_triggered_datapath_instruction.immediate <= zero_datapath_instruction.io.immediate @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.pum <= zero_datapath_instruction.io.pum @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.icd <= zero_datapath_instruction.io.icd @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.oct <= zero_datapath_instruction.io.oct @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.oci <= zero_datapath_instruction.io.oci @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.di <= zero_datapath_instruction.io.di @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.dt <= zero_datapath_instruction.io.dt @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.si <= zero_datapath_instruction.io.si @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.st <= zero_datapath_instruction.io.st @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.op <= zero_datapath_instruction.io.op @[integer_core.scala 275:41]
          x2_triggered_datapath_instruction.vi <= zero_datapath_instruction.io.vi @[integer_core.scala 275:41]
          x2_instruction_retiring_stage <= UInt<1>("h00") @[integer_core.scala 276:37]
          x2_functional_unit <= UInt<1>("h00") @[integer_core.scala 277:26]
          skip @[integer_core.scala 274:16]
        skip @[integer_core.scala 269:24]
    inst integer_retirement_unit of integer_retirement_unit @[integer_core.scala 282:19]
    integer_retirement_unit.clock <= clock
    integer_retirement_unit.reset <= reset
    integer_retirement_unit.io.dx1_datapath_instruction.immediate <= dx1_triggered_datapath_instruction.immediate @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.pum <= dx1_triggered_datapath_instruction.pum @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.icd <= dx1_triggered_datapath_instruction.icd @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.oct <= dx1_triggered_datapath_instruction.oct @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.oci <= dx1_triggered_datapath_instruction.oci @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.di <= dx1_triggered_datapath_instruction.di @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.dt <= dx1_triggered_datapath_instruction.dt @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.si <= dx1_triggered_datapath_instruction.si @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.st <= dx1_triggered_datapath_instruction.st @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.op <= dx1_triggered_datapath_instruction.op @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_datapath_instruction.vi <= dx1_triggered_datapath_instruction.vi @[integer_core.scala 283:32]
    integer_retirement_unit.io.dx1_functional_unit <= dx1_functional_unit @[integer_core.scala 284:27]
    integer_retirement_unit.io.dx1_instruction_retiring_stage <= dx1_instruction_retiring_stage @[integer_core.scala 285:38]
    integer_retirement_unit.io.x2_datapath_instruction.immediate <= x2_triggered_datapath_instruction.immediate @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.pum <= x2_triggered_datapath_instruction.pum @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.icd <= x2_triggered_datapath_instruction.icd @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.oct <= x2_triggered_datapath_instruction.oct @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.oci <= x2_triggered_datapath_instruction.oci @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.di <= x2_triggered_datapath_instruction.di @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.dt <= x2_triggered_datapath_instruction.dt @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.si <= x2_triggered_datapath_instruction.si @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.st <= x2_triggered_datapath_instruction.st @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.op <= x2_triggered_datapath_instruction.op @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_datapath_instruction.vi <= x2_triggered_datapath_instruction.vi @[integer_core.scala 286:31]
    integer_retirement_unit.io.x2_functional_unit <= x2_functional_unit @[integer_core.scala 287:26]
    integer_retirement_unit.io.x2_instruction_retiring_stage <= x2_instruction_retiring_stage @[integer_core.scala 288:37]
    integer_retirement_unit.io.alu_result <= alu_result @[integer_core.scala 289:18]
    integer_retirement_unit.io.sm_result <= sm_result @[integer_core.scala 290:17]
    integer_retirement_unit.io.imu_result <= imu_result @[integer_core.scala 291:18]
    retiring_datapath_instruction.immediate <= integer_retirement_unit.io.retiring_datapath_instruction.immediate @[integer_core.scala 292:33]
    retiring_datapath_instruction.pum <= integer_retirement_unit.io.retiring_datapath_instruction.pum @[integer_core.scala 292:33]
    retiring_datapath_instruction.icd <= integer_retirement_unit.io.retiring_datapath_instruction.icd @[integer_core.scala 292:33]
    retiring_datapath_instruction.oct <= integer_retirement_unit.io.retiring_datapath_instruction.oct @[integer_core.scala 292:33]
    retiring_datapath_instruction.oci <= integer_retirement_unit.io.retiring_datapath_instruction.oci @[integer_core.scala 292:33]
    retiring_datapath_instruction.di <= integer_retirement_unit.io.retiring_datapath_instruction.di @[integer_core.scala 292:33]
    retiring_datapath_instruction.dt <= integer_retirement_unit.io.retiring_datapath_instruction.dt @[integer_core.scala 292:33]
    retiring_datapath_instruction.si <= integer_retirement_unit.io.retiring_datapath_instruction.si @[integer_core.scala 292:33]
    retiring_datapath_instruction.st <= integer_retirement_unit.io.retiring_datapath_instruction.st @[integer_core.scala 292:33]
    retiring_datapath_instruction.op <= integer_retirement_unit.io.retiring_datapath_instruction.op @[integer_core.scala 292:33]
    retiring_datapath_instruction.vi <= integer_retirement_unit.io.retiring_datapath_instruction.vi @[integer_core.scala 292:33]
    datapath_result <= integer_retirement_unit.io.datapath_result @[integer_core.scala 293:19]
    inst destination_routing_unit of destination_routing_unit @[integer_core.scala 296:19]
    destination_routing_unit.clock <= clock
    destination_routing_unit.reset <= reset
    destination_routing_unit.io.datapath_result <= datapath_result @[integer_core.scala 297:23]
    destination_routing_unit.io.dt <= retiring_datapath_instruction.dt @[integer_core.scala 298:10]
    destination_routing_unit.io.di <= retiring_datapath_instruction.di @[integer_core.scala 299:10]
    destination_routing_unit.io.oci <= retiring_datapath_instruction.oci @[integer_core.scala 300:11]
    register_write_enable <= destination_routing_unit.io.register_write_enable @[integer_core.scala 301:25]
    register_write_index <= destination_routing_unit.io.register_write_index @[integer_core.scala 302:24]
    register_write_data <= destination_routing_unit.io.register_write_data @[integer_core.scala 303:23]
    output_channels[0].pack.data <= destination_routing_unit.io.output_channel_data[0] @[integer_core.scala 304:58]
    output_channels[1].pack.data <= destination_routing_unit.io.output_channel_data[1] @[integer_core.scala 304:58]
    output_channels[2].pack.data <= destination_routing_unit.io.output_channel_data[2] @[integer_core.scala 304:58]
    output_channels[3].pack.data <= destination_routing_unit.io.output_channel_data[3] @[integer_core.scala 304:58]
    inst dequeueing_unit of dequeueing_unit @[integer_core.scala 307:18]
    dequeueing_unit.clock <= clock
    dequeueing_unit.reset <= reset
    node _T_635 = and(io.enable, execute) @[integer_core.scala 308:27]
    node _T_637 = eq(halted, UInt<1>("h00")) @[integer_core.scala 308:41]
    node _T_638 = and(_T_635, _T_637) @[integer_core.scala 308:38]
    node _T_639 = and(_T_638, dx1_triggered_datapath_instruction.vi) @[integer_core.scala 308:49]
    dequeueing_unit.io.enable <= _T_639 @[integer_core.scala 308:13]
    dequeueing_unit.io.icd <= dx1_triggered_datapath_instruction.icd @[integer_core.scala 309:10]
    node _T_640 = bits(dequeueing_unit.io.dequeue_signals, 0, 0) @[integer_core.scala 310:76]
    input_channels[0].dequeue <= _T_640 @[integer_core.scala 310:55]
    node _T_641 = bits(dequeueing_unit.io.dequeue_signals, 1, 1) @[integer_core.scala 310:76]
    input_channels[1].dequeue <= _T_641 @[integer_core.scala 310:55]
    node _T_642 = bits(dequeueing_unit.io.dequeue_signals, 2, 2) @[integer_core.scala 310:76]
    input_channels[2].dequeue <= _T_642 @[integer_core.scala 310:55]
    node _T_643 = bits(dequeueing_unit.io.dequeue_signals, 3, 3) @[integer_core.scala 310:76]
    input_channels[3].dequeue <= _T_643 @[integer_core.scala 310:55]
    inst enqueueing_unit of enqueueing_unit @[integer_core.scala 313:18]
    enqueueing_unit.clock <= clock
    enqueueing_unit.reset <= reset
    node _T_644 = and(io.enable, execute) @[integer_core.scala 314:27]
    node _T_646 = eq(halted, UInt<1>("h00")) @[integer_core.scala 314:41]
    node _T_647 = and(_T_644, _T_646) @[integer_core.scala 314:38]
    node _T_648 = and(_T_647, retiring_datapath_instruction.vi) @[integer_core.scala 314:49]
    enqueueing_unit.io.enable <= _T_648 @[integer_core.scala 314:13]
    enqueueing_unit.io.oci <= retiring_datapath_instruction.oci @[integer_core.scala 315:10]
    enqueueing_unit.io.oct <= retiring_datapath_instruction.oct @[integer_core.scala 316:10]
    node _T_649 = bits(enqueueing_unit.io.enqueue_signals, 0, 0) @[integer_core.scala 317:77]
    output_channels[0].enqueue <= _T_649 @[integer_core.scala 317:56]
    node _T_650 = bits(enqueueing_unit.io.enqueue_signals, 1, 1) @[integer_core.scala 317:77]
    output_channels[1].enqueue <= _T_650 @[integer_core.scala 317:56]
    node _T_651 = bits(enqueueing_unit.io.enqueue_signals, 2, 2) @[integer_core.scala 317:77]
    output_channels[2].enqueue <= _T_651 @[integer_core.scala 317:56]
    node _T_652 = bits(enqueueing_unit.io.enqueue_signals, 3, 3) @[integer_core.scala 317:77]
    output_channels[3].enqueue <= _T_652 @[integer_core.scala 317:56]
    output_channels[0].pack.tag <= enqueueing_unit.io.outout_channel_tags[0] @[integer_core.scala 318:57]
    output_channels[1].pack.tag <= enqueueing_unit.io.outout_channel_tags[1] @[integer_core.scala 318:57]
    output_channels[2].pack.tag <= enqueueing_unit.io.outout_channel_tags[2] @[integer_core.scala 318:57]
    output_channels[3].pack.tag <= enqueueing_unit.io.outout_channel_tags[3] @[integer_core.scala 318:57]
    
