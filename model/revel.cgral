ADD = FU{
    Opcodes = Add64:0 Add32x2:1 Add16x4:2 Sub64:3 Sub32x2:4 Sub16x4:5
    Output_Routing = [1,1]:0 [1,-1]:1 [-1,-1]:2 [-1,1]:3 #(NE:0 SE:1 SW:2 NW:3)
    Mapping = Dedicated #(Single Instruction Only)
    Firing = InputArrival #(Fire on input arrival – no backpressure)
}

MUL = FU {
    Opcodes = Mul64:0 Mul32x2:1 Mul16x4:2
    Output_Routing = [1,1]:0 [1,-1]:1 [-1,-1]:2 [-1,1]:3 #(NE:0 SE:1 SW:2 NW:3)
    Mapping = Dedicated
    Firing = InputArrival
}

SPC = FU{
    Opcodes = ((,)?(\n)?( )?(\r)?(\t)?)+
    Output_Routing = {
        [1,1]:0 [1,-1]:1 [-1,-1]:2 [-1,1]:3
    }#(NE:0 SE:1 SW:2 NW:3)
    Mapping = Shared(8,…) #8 instructions in instruction buffer
    Firing = TriggeredInstructions #(Triggered-instructions dataflow execution)
    Size = [1,2]
}

SW = Router{
         #(NE:0 SE:1 SW:2 NW:3 N:4 E:5 S:6 W:7)
         Output_Routing = {
             [1,1]:NE [1,-1]:SE
             [-1,-1]:SW [-1,1]:NW
             [0,1]:N [1,0]:E
             [0,-1]:S [-1,0]:W
         }
         Routing = CircuitSwitched
     }

simple_cgra = CGRA{

    Router = SW

    # Topology defines FU and I/O locations, and connectivity

    Topology = grid2d(

        |    |     |     |    |    |   |   |     |   |     |     |
        |    | MUL |     |ADD |    |MUL|   |ADD  |   |ADD  |     |
        |    |     |     |    |    |   |   |     |   |     |     |
        |    | MUL |     |ADD |    |MUL|   |ADD  |   |ADD  |     |
        |    |     |     |    |    |   |   |     |   |     |     |
        |    | MUL |     |ADD |    |MUL|   |ADD  |   |ADD  |     |
        |    |     |     |    |    |   |   |     |   |     |     |
        |    | MUL |     |ADD |    |MUL|   |ADD  |   |SPC  |     |
        |    |     |     |    |    |   |   |     |   |     |     |

    )

    Inputs = (
            0:  I1 ->   *db_0
                I2 ->   *db_1
            1:  I3 -b-> ADD_1
                I4 ->   *db_2
    )

    Outputs = (
            0: *d_5 -> I1
               SPC_1  -> I2
    )

    #potentially modify properties after instantiation
    #eg. add extra link

    fus[0][1].Output_Routing={
        [1,1]:0 [1,-1]:1 [-1,-1]:2 [-1,1]:3 [3,3]:4
    }

    #describes the logical inputs and outputs that come from scratchpad/memory/etc...

}